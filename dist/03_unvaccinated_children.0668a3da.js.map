{"version":3,"sources":["../node_modules/d3/dist/package.js","../node_modules/d3-array/src/ascending.js","../node_modules/d3-array/src/bisector.js","../node_modules/d3-array/src/bisect.js","../node_modules/d3-array/src/pairs.js","../node_modules/d3-array/src/cross.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-array/src/number.js","../node_modules/d3-array/src/variance.js","../node_modules/d3-array/src/deviation.js","../node_modules/d3-array/src/extent.js","../node_modules/d3-array/src/array.js","../node_modules/d3-array/src/constant.js","../node_modules/d3-array/src/identity.js","../node_modules/d3-array/src/range.js","../node_modules/d3-array/src/ticks.js","../node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-array/src/histogram.js","../node_modules/d3-array/src/quantile.js","../node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-array/src/max.js","../node_modules/d3-array/src/mean.js","../node_modules/d3-array/src/median.js","../node_modules/d3-array/src/merge.js","../node_modules/d3-array/src/min.js","../node_modules/d3-array/src/permute.js","../node_modules/d3-array/src/scan.js","../node_modules/d3-array/src/shuffle.js","../node_modules/d3-array/src/sum.js","../node_modules/d3-array/src/transpose.js","../node_modules/d3-array/src/zip.js","../node_modules/d3-array/src/index.js","../node_modules/d3-axis/src/array.js","../node_modules/d3-axis/src/identity.js","../node_modules/d3-axis/src/axis.js","../node_modules/d3-axis/src/index.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-dispatch/src/index.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/join.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-selection/src/create.js","../node_modules/d3-selection/src/local.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/point.js","../node_modules/d3-selection/src/mouse.js","../node_modules/d3-selection/src/selectAll.js","../node_modules/d3-selection/src/touch.js","../node_modules/d3-selection/src/touches.js","../node_modules/d3-selection/src/index.js","../node_modules/d3-drag/src/noevent.js","../node_modules/d3-drag/src/nodrag.js","../node_modules/d3-drag/src/constant.js","../node_modules/d3-drag/src/event.js","../node_modules/d3-drag/src/drag.js","../node_modules/d3-drag/src/index.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-color/src/math.js","../node_modules/d3-color/src/lab.js","../node_modules/d3-color/src/cubehelix.js","../node_modules/d3-color/src/index.js","../node_modules/d3-interpolate/src/basis.js","../node_modules/d3-interpolate/src/basisClosed.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/discrete.js","../node_modules/d3-interpolate/src/hue.js","../node_modules/d3-interpolate/src/round.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-interpolate/src/hsl.js","../node_modules/d3-interpolate/src/lab.js","../node_modules/d3-interpolate/src/hcl.js","../node_modules/d3-interpolate/src/cubehelix.js","../node_modules/d3-interpolate/src/piecewise.js","../node_modules/d3-interpolate/src/quantize.js","../node_modules/d3-interpolate/src/index.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-timer/src/interval.js","../node_modules/d3-timer/src/index.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/end.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-ease/src/linear.js","../node_modules/d3-ease/src/quad.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-ease/src/poly.js","../node_modules/d3-ease/src/sin.js","../node_modules/d3-ease/src/exp.js","../node_modules/d3-ease/src/circle.js","../node_modules/d3-ease/src/bounce.js","../node_modules/d3-ease/src/back.js","../node_modules/d3-ease/src/elastic.js","../node_modules/d3-ease/src/index.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/active.js","../node_modules/d3-transition/src/index.js","../node_modules/d3-brush/src/constant.js","../node_modules/d3-brush/src/event.js","../node_modules/d3-brush/src/noevent.js","../node_modules/d3-brush/src/brush.js","../node_modules/d3-brush/src/index.js","../node_modules/d3-chord/src/math.js","../node_modules/d3-chord/src/chord.js","../node_modules/d3-chord/src/array.js","../node_modules/d3-chord/src/constant.js","../node_modules/d3-path/src/path.js","../node_modules/d3-path/src/index.js","../node_modules/d3-chord/src/ribbon.js","../node_modules/d3-chord/src/index.js","../node_modules/d3-collection/src/map.js","../node_modules/d3-collection/src/nest.js","../node_modules/d3-collection/src/set.js","../node_modules/d3-collection/src/keys.js","../node_modules/d3-collection/src/values.js","../node_modules/d3-collection/src/entries.js","../node_modules/d3-collection/src/index.js","../node_modules/d3-contour/src/array.js","../node_modules/d3-contour/src/ascending.js","../node_modules/d3-contour/src/area.js","../node_modules/d3-contour/src/constant.js","../node_modules/d3-contour/src/contains.js","../node_modules/d3-contour/src/noop.js","../node_modules/d3-contour/src/contours.js","../node_modules/d3-contour/src/blur.js","../node_modules/d3-contour/src/density.js","../node_modules/d3-contour/src/index.js","../node_modules/d3-dsv/src/dsv.js","../node_modules/d3-dsv/src/csv.js","../node_modules/d3-dsv/src/tsv.js","../node_modules/d3-dsv/src/autoType.js","../node_modules/d3-dsv/src/index.js","../node_modules/d3-fetch/src/blob.js","../node_modules/d3-fetch/src/buffer.js","../node_modules/d3-fetch/src/text.js","../node_modules/d3-fetch/src/dsv.js","../node_modules/d3-fetch/src/image.js","../node_modules/d3-fetch/src/json.js","../node_modules/d3-fetch/src/xml.js","../node_modules/d3-fetch/src/index.js","../node_modules/d3-force/src/center.js","../node_modules/d3-force/src/constant.js","../node_modules/d3-force/src/jiggle.js","../node_modules/d3-quadtree/src/add.js","../node_modules/d3-quadtree/src/cover.js","../node_modules/d3-quadtree/src/data.js","../node_modules/d3-quadtree/src/extent.js","../node_modules/d3-quadtree/src/quad.js","../node_modules/d3-quadtree/src/find.js","../node_modules/d3-quadtree/src/remove.js","../node_modules/d3-quadtree/src/root.js","../node_modules/d3-quadtree/src/size.js","../node_modules/d3-quadtree/src/visit.js","../node_modules/d3-quadtree/src/visitAfter.js","../node_modules/d3-quadtree/src/x.js","../node_modules/d3-quadtree/src/y.js","../node_modules/d3-quadtree/src/quadtree.js","../node_modules/d3-quadtree/src/index.js","../node_modules/d3-force/src/collide.js","../node_modules/d3-force/src/link.js","../node_modules/d3-force/src/simulation.js","../node_modules/d3-force/src/manyBody.js","../node_modules/d3-force/src/radial.js","../node_modules/d3-force/src/x.js","../node_modules/d3-force/src/y.js","../node_modules/d3-force/src/index.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-format/src/precisionRound.js","../node_modules/d3-format/src/index.js","../node_modules/d3-geo/src/adder.js","../node_modules/d3-geo/src/math.js","../node_modules/d3-geo/src/noop.js","../node_modules/d3-geo/src/stream.js","../node_modules/d3-geo/src/area.js","../node_modules/d3-geo/src/cartesian.js","../node_modules/d3-geo/src/bounds.js","../node_modules/d3-geo/src/centroid.js","../node_modules/d3-geo/src/constant.js","../node_modules/d3-geo/src/compose.js","../node_modules/d3-geo/src/rotation.js","../node_modules/d3-geo/src/circle.js","../node_modules/d3-geo/src/clip/buffer.js","../node_modules/d3-geo/src/pointEqual.js","../node_modules/d3-geo/src/clip/rejoin.js","../node_modules/d3-geo/src/polygonContains.js","../node_modules/d3-geo/src/clip/index.js","../node_modules/d3-geo/src/clip/antimeridian.js","../node_modules/d3-geo/src/clip/circle.js","../node_modules/d3-geo/src/clip/line.js","../node_modules/d3-geo/src/clip/rectangle.js","../node_modules/d3-geo/src/clip/extent.js","../node_modules/d3-geo/src/length.js","../node_modules/d3-geo/src/distance.js","../node_modules/d3-geo/src/contains.js","../node_modules/d3-geo/src/graticule.js","../node_modules/d3-geo/src/interpolate.js","../node_modules/d3-geo/src/identity.js","../node_modules/d3-geo/src/path/area.js","../node_modules/d3-geo/src/path/bounds.js","../node_modules/d3-geo/src/path/centroid.js","../node_modules/d3-geo/src/path/context.js","../node_modules/d3-geo/src/path/measure.js","../node_modules/d3-geo/src/path/string.js","../node_modules/d3-geo/src/path/index.js","../node_modules/d3-geo/src/transform.js","../node_modules/d3-geo/src/projection/fit.js","../node_modules/d3-geo/src/projection/resample.js","../node_modules/d3-geo/src/projection/index.js","../node_modules/d3-geo/src/projection/conic.js","../node_modules/d3-geo/src/projection/cylindricalEqualArea.js","../node_modules/d3-geo/src/projection/conicEqualArea.js","../node_modules/d3-geo/src/projection/albers.js","../node_modules/d3-geo/src/projection/albersUsa.js","../node_modules/d3-geo/src/projection/azimuthal.js","../node_modules/d3-geo/src/projection/azimuthalEqualArea.js","../node_modules/d3-geo/src/projection/azimuthalEquidistant.js","../node_modules/d3-geo/src/projection/mercator.js","../node_modules/d3-geo/src/projection/conicConformal.js","../node_modules/d3-geo/src/projection/equirectangular.js","../node_modules/d3-geo/src/projection/conicEquidistant.js","../node_modules/d3-geo/src/projection/equalEarth.js","../node_modules/d3-geo/src/projection/gnomonic.js","../node_modules/d3-geo/src/projection/identity.js","../node_modules/d3-geo/src/projection/naturalEarth1.js","../node_modules/d3-geo/src/projection/orthographic.js","../node_modules/d3-geo/src/projection/stereographic.js","../node_modules/d3-geo/src/projection/transverseMercator.js","../node_modules/d3-geo/src/index.js","../node_modules/d3-hierarchy/src/cluster.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/array.js","../node_modules/d3-hierarchy/src/pack/enclose.js","../node_modules/d3-hierarchy/src/pack/siblings.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/pack/index.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/partition.js","../node_modules/d3-hierarchy/src/stratify.js","../node_modules/d3-hierarchy/src/tree.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../node_modules/d3-hierarchy/src/treemap/index.js","../node_modules/d3-hierarchy/src/treemap/binary.js","../node_modules/d3-hierarchy/src/treemap/sliceDice.js","../node_modules/d3-hierarchy/src/treemap/resquarify.js","../node_modules/d3-hierarchy/src/index.js","../node_modules/d3-polygon/src/area.js","../node_modules/d3-polygon/src/centroid.js","../node_modules/d3-polygon/src/cross.js","../node_modules/d3-polygon/src/hull.js","../node_modules/d3-polygon/src/contains.js","../node_modules/d3-polygon/src/length.js","../node_modules/d3-polygon/src/index.js","../node_modules/d3-random/src/defaultSource.js","../node_modules/d3-random/src/uniform.js","../node_modules/d3-random/src/normal.js","../node_modules/d3-random/src/logNormal.js","../node_modules/d3-random/src/irwinHall.js","../node_modules/d3-random/src/bates.js","../node_modules/d3-random/src/exponential.js","../node_modules/d3-random/src/index.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-scale/src/array.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale/src/band.js","../node_modules/d3-scale/src/constant.js","../node_modules/d3-scale/src/number.js","../node_modules/d3-scale/src/continuous.js","../node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-scale/src/linear.js","../node_modules/d3-scale/src/identity.js","../node_modules/d3-scale/src/nice.js","../node_modules/d3-scale/src/log.js","../node_modules/d3-scale/src/symlog.js","../node_modules/d3-scale/src/pow.js","../node_modules/d3-scale/src/quantile.js","../node_modules/d3-scale/src/quantize.js","../node_modules/d3-scale/src/threshold.js","../node_modules/d3-time/src/interval.js","../node_modules/d3-time/src/millisecond.js","../node_modules/d3-time/src/duration.js","../node_modules/d3-time/src/second.js","../node_modules/d3-time/src/minute.js","../node_modules/d3-time/src/hour.js","../node_modules/d3-time/src/day.js","../node_modules/d3-time/src/week.js","../node_modules/d3-time/src/month.js","../node_modules/d3-time/src/year.js","../node_modules/d3-time/src/utcMinute.js","../node_modules/d3-time/src/utcHour.js","../node_modules/d3-time/src/utcDay.js","../node_modules/d3-time/src/utcWeek.js","../node_modules/d3-time/src/utcMonth.js","../node_modules/d3-time/src/utcYear.js","../node_modules/d3-time/src/index.js","../node_modules/d3-time-format/src/locale.js","../node_modules/d3-time-format/src/defaultLocale.js","../node_modules/d3-time-format/src/isoFormat.js","../node_modules/d3-time-format/src/isoParse.js","../node_modules/d3-time-format/src/index.js","../node_modules/d3-scale/src/time.js","../node_modules/d3-scale/src/utcTime.js","../node_modules/d3-scale/src/sequential.js","../node_modules/d3-scale/src/sequentialQuantile.js","../node_modules/d3-scale/src/diverging.js","../node_modules/d3-scale/src/index.js","../node_modules/d3-scale-chromatic/src/colors.js","../node_modules/d3-scale-chromatic/src/categorical/category10.js","../node_modules/d3-scale-chromatic/src/categorical/Accent.js","../node_modules/d3-scale-chromatic/src/categorical/Dark2.js","../node_modules/d3-scale-chromatic/src/categorical/Paired.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","../node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","../node_modules/d3-scale-chromatic/src/categorical/Set1.js","../node_modules/d3-scale-chromatic/src/categorical/Set2.js","../node_modules/d3-scale-chromatic/src/categorical/Set3.js","../node_modules/d3-scale-chromatic/src/ramp.js","../node_modules/d3-scale-chromatic/src/diverging/BrBG.js","../node_modules/d3-scale-chromatic/src/diverging/PRGn.js","../node_modules/d3-scale-chromatic/src/diverging/PiYG.js","../node_modules/d3-scale-chromatic/src/diverging/PuOr.js","../node_modules/d3-scale-chromatic/src/diverging/RdBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdGy.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","../node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","../node_modules/d3-scale-chromatic/src/diverging/Spectral.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","../node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","../node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","../node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","../node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","../node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","../node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","../node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","../node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","../node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","../node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","../node_modules/d3-scale-chromatic/src/index.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","../node_modules/d3-shape/src/curve/linear.js","../node_modules/d3-shape/src/point.js","../node_modules/d3-shape/src/line.js","../node_modules/d3-shape/src/area.js","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-shape/src/pie.js","../node_modules/d3-shape/src/curve/radial.js","../node_modules/d3-shape/src/lineRadial.js","../node_modules/d3-shape/src/areaRadial.js","../node_modules/d3-shape/src/pointRadial.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/link/index.js","../node_modules/d3-shape/src/symbol/circle.js","../node_modules/d3-shape/src/symbol/cross.js","../node_modules/d3-shape/src/symbol/diamond.js","../node_modules/d3-shape/src/symbol/star.js","../node_modules/d3-shape/src/symbol/square.js","../node_modules/d3-shape/src/symbol/triangle.js","../node_modules/d3-shape/src/symbol/wye.js","../node_modules/d3-shape/src/symbol.js","../node_modules/d3-shape/src/noop.js","../node_modules/d3-shape/src/curve/basis.js","../node_modules/d3-shape/src/curve/basisClosed.js","../node_modules/d3-shape/src/curve/basisOpen.js","../node_modules/d3-shape/src/curve/bundle.js","../node_modules/d3-shape/src/curve/cardinal.js","../node_modules/d3-shape/src/curve/cardinalClosed.js","../node_modules/d3-shape/src/curve/cardinalOpen.js","../node_modules/d3-shape/src/curve/catmullRom.js","../node_modules/d3-shape/src/curve/catmullRomClosed.js","../node_modules/d3-shape/src/curve/catmullRomOpen.js","../node_modules/d3-shape/src/curve/linearClosed.js","../node_modules/d3-shape/src/curve/monotone.js","../node_modules/d3-shape/src/curve/natural.js","../node_modules/d3-shape/src/curve/step.js","../node_modules/d3-shape/src/offset/none.js","../node_modules/d3-shape/src/order/none.js","../node_modules/d3-shape/src/stack.js","../node_modules/d3-shape/src/offset/expand.js","../node_modules/d3-shape/src/offset/diverging.js","../node_modules/d3-shape/src/offset/silhouette.js","../node_modules/d3-shape/src/offset/wiggle.js","../node_modules/d3-shape/src/order/appearance.js","../node_modules/d3-shape/src/order/ascending.js","../node_modules/d3-shape/src/order/descending.js","../node_modules/d3-shape/src/order/insideOut.js","../node_modules/d3-shape/src/order/reverse.js","../node_modules/d3-shape/src/index.js","../node_modules/d3-voronoi/src/constant.js","../node_modules/d3-voronoi/src/point.js","../node_modules/d3-voronoi/src/RedBlackTree.js","../node_modules/d3-voronoi/src/Edge.js","../node_modules/d3-voronoi/src/Cell.js","../node_modules/d3-voronoi/src/Circle.js","../node_modules/d3-voronoi/src/Beach.js","../node_modules/d3-voronoi/src/Diagram.js","../node_modules/d3-voronoi/src/voronoi.js","../node_modules/d3-voronoi/src/index.js","../node_modules/d3-zoom/src/constant.js","../node_modules/d3-zoom/src/event.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3-zoom/src/noevent.js","../node_modules/d3-zoom/src/zoom.js","../node_modules/d3-zoom/src/index.js","../node_modules/d3/index.js","../node_modules/topojson/node_modules/topojson-client/src/identity.js","../node_modules/topojson/node_modules/topojson-client/src/transform.js","../node_modules/topojson/node_modules/topojson-client/src/bbox.js","../node_modules/topojson/node_modules/topojson-client/src/reverse.js","../node_modules/topojson/node_modules/topojson-client/src/feature.js","../node_modules/topojson/node_modules/topojson-client/src/stitch.js","../node_modules/topojson/node_modules/topojson-client/src/mesh.js","../node_modules/topojson/node_modules/topojson-client/src/merge.js","../node_modules/topojson/node_modules/topojson-client/src/bisect.js","../node_modules/topojson/node_modules/topojson-client/src/neighbors.js","../node_modules/topojson/node_modules/topojson-client/src/untransform.js","../node_modules/topojson/node_modules/topojson-client/src/quantize.js","../node_modules/topojson/node_modules/topojson-client/index.js","../node_modules/topojson/node_modules/topojson-server/src/bounds.js","../node_modules/topojson/node_modules/topojson-server/src/hash/hashset.js","../node_modules/topojson/node_modules/topojson-server/src/hash/hashmap.js","../node_modules/topojson/node_modules/topojson-server/src/hash/point-equal.js","../node_modules/topojson/node_modules/topojson-server/src/hash/point-hash.js","../node_modules/topojson/node_modules/topojson-server/src/join.js","../node_modules/topojson/node_modules/topojson-server/src/cut.js","../node_modules/topojson/node_modules/topojson-server/src/dedup.js","../node_modules/topojson/node_modules/topojson-server/src/delta.js","../node_modules/topojson/node_modules/topojson-server/src/extract.js","../node_modules/topojson/node_modules/topojson-server/src/geometry.js","../node_modules/topojson/node_modules/topojson-server/src/prequantize.js","../node_modules/topojson/node_modules/topojson-server/src/topology.js","../node_modules/topojson/node_modules/topojson-server/index.js","../node_modules/topojson/node_modules/topojson-simplify/src/prune.js","../node_modules/topojson/node_modules/topojson-simplify/src/filter.js","../node_modules/topojson/node_modules/topojson-simplify/src/filterAttached.js","../node_modules/topojson/node_modules/topojson-simplify/src/planar.js","../node_modules/topojson/node_modules/topojson-simplify/src/filterWeight.js","../node_modules/topojson/node_modules/topojson-simplify/src/filterAttachedWeight.js","../node_modules/topojson/node_modules/topojson-simplify/src/heap.js","../node_modules/topojson/node_modules/topojson-simplify/src/presimplify.js","../node_modules/topojson/node_modules/topojson-simplify/src/quantile.js","../node_modules/topojson/node_modules/topojson-simplify/src/simplify.js","../node_modules/topojson/node_modules/topojson-simplify/src/spherical.js","../node_modules/topojson/node_modules/topojson-simplify/index.js","../node_modules/topojson/index.js","data/world.json","../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespaces.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/namespace.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/creator.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/local.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/matcher.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/on.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/point.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/mouse.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selector.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/select.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/data.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/order.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/call.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/node.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/size.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/each.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/window.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/style.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/property.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/text.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/html.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/append.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selection/index.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/select.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/selectAll.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/touch.js","../node_modules/d3-svg-legend/node_modules/d3-selection/src/touches.js","../node_modules/d3-svg-legend/node_modules/d3-selection/index.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/exponent.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatGroup.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatDefault.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatRounded.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatTypes.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/locale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionFixed.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionPrefix.js","../node_modules/d3-svg-legend/node_modules/d3-format/src/precisionRound.js","../node_modules/d3-svg-legend/node_modules/d3-format/index.js","../node_modules/d3-svg-legend/node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-svg-legend/node_modules/d3-dispatch/index.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ascending.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisector.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/bisect.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/descending.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/number.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/variance.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/deviation.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/extent.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/identity.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/range.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/ticks.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/threshold/sturges.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/histogram.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/quantile.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/threshold/freedmanDiaconis.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/threshold/scott.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/max.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/mean.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/median.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/merge.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/min.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/pairs.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/permute.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/scan.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/shuffle.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/sum.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/transpose.js","../node_modules/d3-svg-legend/node_modules/d3-array/src/zip.js","../node_modules/d3-svg-legend/node_modules/d3-array/index.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/array.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/ordinal.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/band.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/constant.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/number.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/continuous.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/tickFormat.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/linear.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/identity.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/nice.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/log.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/pow.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/quantile.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/quantize.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/threshold.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/time.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/utcTime.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/colors.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category10.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20b.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20c.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/category20.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/cubehelix.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/rainbow.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/viridis.js","../node_modules/d3-svg-legend/node_modules/d3-scale/src/sequential.js","../node_modules/d3-svg-legend/node_modules/d3-scale/index.js","index.js","src/legend.js","src/color.js","src/size.js","src/symbol.js","src/helpers.js","components/punchColorScale.js","../node_modules/d3-geo-projection/src/math.js","../node_modules/d3-geo-projection/src/airy.js","../node_modules/d3-geo-projection/src/aitoff.js","../node_modules/d3-geo-projection/src/armadillo.js","../node_modules/d3-geo-projection/src/august.js","../node_modules/d3-geo-projection/src/baker.js","../node_modules/d3-geo-projection/src/berghaus.js","../node_modules/d3-geo-projection/src/hammer.js","../node_modules/d3-geo-projection/src/bertin.js","../node_modules/d3-geo-projection/src/mollweide.js","../node_modules/d3-geo-projection/src/boggs.js","../node_modules/d3-geo-projection/src/parallel1.js","../node_modules/d3-geo-projection/src/sinusoidal.js","../node_modules/d3-geo-projection/src/bonne.js","../node_modules/d3-geo-projection/src/bottomley.js","../node_modules/d3-geo-projection/src/bromley.js","../node_modules/d3-geo-projection/src/chamberlin.js","../node_modules/d3-geo-projection/src/collignon.js","../node_modules/d3-geo-projection/src/craig.js","../node_modules/d3-geo-projection/src/craster.js","../node_modules/d3-geo-projection/src/cylindricalEqualArea.js","../node_modules/d3-geo-projection/src/cylindricalStereographic.js","../node_modules/d3-geo-projection/src/eckert1.js","../node_modules/d3-geo-projection/src/eckert2.js","../node_modules/d3-geo-projection/src/eckert3.js","../node_modules/d3-geo-projection/src/eckert4.js","../node_modules/d3-geo-projection/src/eckert5.js","../node_modules/d3-geo-projection/src/eckert6.js","../node_modules/d3-geo-projection/src/eisenlohr.js","../node_modules/d3-geo-projection/src/fahey.js","../node_modules/d3-geo-projection/src/foucaut.js","../node_modules/d3-geo-projection/src/newton.js","../node_modules/d3-geo-projection/src/foucautSinusoidal.js","../node_modules/d3-geo-projection/src/gilbert.js","../node_modules/d3-geo-projection/src/gingery.js","../node_modules/d3-geo-projection/src/ginzburgPolyconic.js","../node_modules/d3-geo-projection/src/ginzburg4.js","../node_modules/d3-geo-projection/src/ginzburg5.js","../node_modules/d3-geo-projection/src/ginzburg6.js","../node_modules/d3-geo-projection/src/ginzburg8.js","../node_modules/d3-geo-projection/src/ginzburg9.js","../node_modules/d3-geo-projection/src/square.js","../node_modules/d3-geo-projection/src/gringorten.js","../node_modules/d3-geo-projection/src/elliptic.js","../node_modules/d3-geo-projection/src/guyou.js","../node_modules/d3-geo-projection/src/hammerRetroazimuthal.js","../node_modules/d3-geo-projection/src/healpix.js","../node_modules/d3-geo-projection/src/hill.js","../node_modules/d3-geo-projection/src/sinuMollweide.js","../node_modules/d3-geo-projection/src/homolosine.js","../node_modules/d3-geo-projection/src/hufnagel.js","../node_modules/d3-geo-projection/src/integrate.js","../node_modules/d3-geo-projection/src/hyperelliptical.js","../node_modules/d3-geo-projection/src/interrupted/index.js","../node_modules/d3-geo-projection/src/interrupted/boggs.js","../node_modules/d3-geo-projection/src/interrupted/homolosine.js","../node_modules/d3-geo-projection/src/interrupted/mollweide.js","../node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js","../node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js","../node_modules/d3-geo-projection/src/interrupted/sinusoidal.js","../node_modules/d3-geo-projection/src/kavrayskiy7.js","../node_modules/d3-geo-projection/src/lagrange.js","../node_modules/d3-geo-projection/src/larrivee.js","../node_modules/d3-geo-projection/src/laskowski.js","../node_modules/d3-geo-projection/src/littrow.js","../node_modules/d3-geo-projection/src/loximuthal.js","../node_modules/d3-geo-projection/src/miller.js","../node_modules/d3-geo-projection/src/modifiedStereographic.js","../node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js","../node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js","../node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js","../node_modules/d3-geo-projection/src/naturalEarth2.js","../node_modules/d3-geo-projection/src/nellHammer.js","../node_modules/d3-geo-projection/src/interrupted/quarticAuthalic.js","../node_modules/d3-geo-projection/src/nicolosi.js","../node_modules/d3-geo-projection/src/patterson.js","../node_modules/d3-geo-projection/src/polyconic.js","../node_modules/d3-geo-projection/src/polyhedral/matrix.js","../node_modules/d3-geo-projection/src/polyhedral/index.js","../node_modules/d3-geo-projection/src/polyhedral/octahedron.js","../node_modules/d3-geo-projection/src/polyhedral/butterfly.js","../node_modules/d3-geo-projection/src/polyhedral/collignon.js","../node_modules/d3-geo-projection/src/polyhedral/waterman.js","../node_modules/d3-geo-projection/src/noop.js","../node_modules/d3-geo-projection/src/project/clockwise.js","../node_modules/d3-geo-projection/src/project/contains.js","../node_modules/d3-geo-projection/src/project/index.js","../node_modules/d3-geo-projection/src/quincuncial/index.js","../node_modules/d3-geo-projection/src/quincuncial/gringorten.js","../node_modules/d3-geo-projection/src/quincuncial/peirce.js","../node_modules/d3-geo-projection/src/quantize.js","../node_modules/d3-geo-projection/src/rectangularPolyconic.js","../node_modules/d3-geo-projection/src/robinson.js","../node_modules/d3-geo-projection/src/satellite.js","../node_modules/d3-geo-projection/src/stitch.js","../node_modules/d3-geo-projection/src/times.js","../node_modules/d3-geo-projection/src/twoPoint.js","../node_modules/d3-geo-projection/src/twoPointAzimuthal.js","../node_modules/d3-geo-projection/src/twoPointEquidistant.js","../node_modules/d3-geo-projection/src/vanDerGrinten.js","../node_modules/d3-geo-projection/src/vanDerGrinten2.js","../node_modules/d3-geo-projection/src/vanDerGrinten3.js","../node_modules/d3-geo-projection/src/vanDerGrinten4.js","../node_modules/d3-geo-projection/src/wagner.js","../node_modules/d3-geo-projection/src/wagner4.js","../node_modules/d3-geo-projection/src/wagner6.js","../node_modules/d3-geo-projection/src/wagner7.js","../node_modules/d3-geo-projection/src/wiechel.js","../node_modules/d3-geo-projection/src/winkel3.js","../node_modules/d3-geo-projection/src/index.js","components/projection.js","03_unvaccinated_children/CountryTotalsDataProvider.js","../node_modules/underscore/underscore.js","../node_modules/country-data/data/regions.js","../node_modules/country-data/data/continents.js","../node_modules/country-data/data/countries.json","../node_modules/country-data/data/currencies.json","../node_modules/country-data/data/languages.json","../node_modules/country-data/lookup.js","../node_modules/currency-symbol-map/map.js","../node_modules/currency-symbol-map/currency-symbol-map.js","../node_modules/country-data/index.js","components/countryUtils.js","components/dorlingCartogram.js","03_unvaccinated_children/index.js"],"names":["name","version","description","keywords","homepage","license","author","main","unpkg","jsdelivr","module","repository","scripts","devDependencies","dependencies","a","b","NaN","compare","length","ascendingComparator","left","x","lo","hi","mid","right","f","d","bisectRight","ascendingBisect","ascending","bisectLeft","array","pair","i","n","p","pairs","Array","values0","values1","reduce","n0","i0","i1","value0","n1","values","valueof","value","delta","m","mean","sum","isNaN","v","Math","sqrt","min","max","prototype","slice","map","start","stop","step","arguments","ceil","range","e10","e5","e2","count","reverse","ticks","tickIncrement","isFinite","floor","power","log","LN10","error","pow","tickStep","step0","abs","step1","LN2","identity","domain","extent","threshold","sturges","histogram","data","xz","x0","x1","tz","isArray","shift","pop","bins","bin","push","_","thresholds","call","number","sort","numbers","arrays","merged","j","indexes","permutes","xi","xj","t","random","matrix","transpose","row","top","bottom","epsilon","translateX","translateY","y","scale","center","offset","bandwidth","round","entering","__axis","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","apply","format","spacing","range0","range1","position","copy","selection","path","selectAll","tick","order","tickExit","exit","tickEnter","enter","append","attr","line","select","text","merge","insert","transition","getAttribute","parentNode","remove","filter","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","dispatch","noop","Error","Dispatch","parseTypenames","typenames","types","trim","split","indexOf","hasOwnProperty","type","get","c","set","callback","concat","constructor","on","typename","T","that","args","xhtml","svg","xlink","xml","xmlns","prefix","namespaces","space","local","creatorInherit","document","ownerDocument","uri","namespaceURI","documentElement","createElement","createElementNS","creatorFixed","fullname","none","selector","querySelector","groups","_groups","subgroups","node","subnode","group","subgroup","__data__","Selection","_parents","empty","querySelectorAll","parents","matches","match","update","_enter","sparse","EnterNode","parent","datum","_next","_parent","appendChild","child","insertBefore","next","keyPrefix","bindIndex","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","size","bind","enterGroup","updateGroup","previous","_exit","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","compareNode","sortgroups","sortgroup","nodes","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","getAttributeNS","defaultView","styleRemove","style","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","contains","join","splice","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","lower","previousSibling","firstChild","create","constantNull","before","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","deep","property","filterEvents","event","element","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","related","relatedTarget","event1","event0","onRemove","__on","o","removeEventListener","capture","onAdd","wrap","addEventListener","customEvent","sourceEvent","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","root","selection_select","selection_selectAll","selection_filter","selection_data","selection_enter","selection_exit","selection_join","selection_merge","selection_order","selection_sort","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","classed","selection_classed","selection_text","html","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","clone","selection_clone","selection_datum","selection_on","selection_dispatch","nextId","Local","toString","id","source","current","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","changedTouches","touches","identifier","touch","points","nopropagation","stopImmediatePropagation","preventDefault","view","noevent","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","DragEvent","target","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mouse","mousemoved","mouseupped","clearTimeout","s","sublisteners","p0","clickDistance","factory","extend","definition","Object","Color","darker","brighter","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","r","g","rgbConvert","rgb","opacity","hex","h","l","Hsl","hslConvert","hsl","hsl2rgb","m2","displayable","deg2rad","PI","rad2deg","K","Xn","Yn","Zn","t0","t1","t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","A","B","C","D","E","ED","EB","BC_DA","cubehelixConvert","Cubehelix","bl","cubehelix","cosh","sinh","basis","v0","v1","v2","v3","linear","exponential","hue","gamma","nogamma","rgbGamma","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","basisClosed","nb","na","Date","setTime","reA","reB","zero","one","bi","am","bm","bs","lastIndex","q","date","valueOf","object","degrees","rotate","skewX","scaleX","scaleY","e","atan","cssNode","cssRoot","cssView","svgNode","parseCss","parseSvg","baseVal","consolidate","interpolateTransform","parse","pxComma","pxParen","degParen","translate","xa","ya","xb","yb","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","rho2","rho4","epsilon2","exp","tanh","p1","ux0","S","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","duration","hslLong","hclLong","cubehelixGamma","cubehelixLong","piecewise","interpolate","I","interpolator","samples","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","now","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","nap","poke","Infinity","sleep","clearInterval","setInterval","TypeError","elapsed","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","timing","schedules","__transition","tween","ease","state","init","schedule","self","tweenRemove","tween0","tween1","tweenFunction","_id","tweenValue","interpolateNumber","interpolateRgb","interpolateString","value1","string00","interpolate0","string1","string0","string10","attrTween","attrInterpolate","attrInterpolateNS","attrTweenNS","_value","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","Transition","_name","every","onFunction","on0","on1","sit","removeFunction","children","inherit","styleNull","styleMaybeRemove","listener0","undefined","styleTween","styleInterpolate","id0","id1","Promise","resolve","reject","cancel","interrupt","newId","selection_prototype","transition_select","transition_selectAll","transition_filter","transition_merge","transition_selection","transition_transition","transition_on","transition_attr","transition_attrTween","transition_style","transition_styleTween","transition_text","transition_remove","transition_tween","transition_delay","transition_duration","transition_ease","transition_end","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","exponent","polyIn","custom","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","b2","b3","b4","b5","b6","b7","b8","b9","bounceIn","bounceOut","bounceInOut","overshoot","backIn","backOut","backInOut","tau","amplitude","period","elasticIn","asin","elasticOut","elasticInOut","defaultTiming","easeCubicInOut","selection_interrupt","selection_transition","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","input","output","xy","Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","defaultExtent","width","height","__brush","brushSelection","dim","brushX","brush","brushY","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","mode","metaKey","altKey","signX","signY","W","N","shifting","shiftKey","point0","emit","moved","ended","keydowned","keyCode","move","keyupped","point1","selection0","selection1","starting","BrushEvent","compareValue","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","forEach","di","dj","a0","a1","subindex","startAngle","endAngle","tauEpsilon","Path","_x0","_y0","_x1","_y1","moveTo","closePath","lineTo","quadraticCurveTo","y1","bezierCurveTo","x2","y2","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","defaultEndAngle","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","has","clear","keys","entries","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","result","createObject","setObject","createMap","setMap","sortKey","Set","proto","ring","area","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","cases","thresholdSturges","smooth","smoothLinear","contours","contour","polygons","holes","isorings","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","customConverter","inferColumns","rows","columnSet","column","pad","formatYear","year","formatDate","hours","getUTCHours","minutes","getUTCMinutes","seconds","getUTCSeconds","milliseconds","getUTCMilliseconds","getUTCFullYear","getUTCMonth","getUTCDate","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","eof","eol","token","replace","preformatBody","formatValue","formatRow","test","convert","formatBody","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatBody","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatBody","tsvFormatRows","autoType","responseBlob","response","ok","status","statusText","blob","fetch","then","responseArrayBuffer","arrayBuffer","responseText","dsvParse","dsv","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","force","sx","sy","_x","_y","cover","tree","xm","ym","xp","yp","_root","leaf","addAll","yz","visit","x3","y3","quads","Quad","retainer","removeAll","quadtree","Quadtree","leaf_copy","treeProto","tree_add","tree_addAll","tree_cover","tree_data","tree_extent","find","tree_find","tree_remove","tree_removeAll","tree_root","tree_size","tree_visit","visitAfter","tree_visitAfter","tree_x","tree_y","vx","vy","radii","strength","iterations","ri","ri2","prepare","quad","rj","nodeById","nodeId","links","strengths","distances","bias","defaultStrength","link","distance","alpha","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radiuses","toExponential","coefficient","grouping","thousands","substring","numerals","re","formatSpecifier","specifier","FormatSpecifier","fill","align","sign","symbol","comma","precision","out","prefixExponent","toFixed","toPrecision","formatRounded","formatPrefixAuto","toUpperCase","prefixes","locale","currency","decimal","percent","newFormat","formatTypes","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","padding","formatPrefix","defaultLocale","Adder","reset","temp","adder","bv","av","quarterPi","radians","haversin","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","areaRingSum","lambda00","phi00","lambda0","cosPhi0","sinPhi0","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","phi0","lambda1","phi1","lambda2","ranges","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","linePoint","normal","equatorial","inflection","phii","lambdai","antimeridian","rangeCompare","rangeContains","feature","deltaMax","W0","W1","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","z0","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cx","cy","cz","compose","invert","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","forward","circleStream","direction","cosRadius","sinRadius","circleRadius","circle","lines","rejoin","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","isSubject","longitude","winding","sinPhi1","cosPhi1","absDelta","intersection","phiArc","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","pointLine","clean","ringSegments","validSegment","clipAntimeridianLine","clipAntimeridianInterpolate","sign0","sign1","clipAntimeridianIntersect","sinLambda0Lambda1","from","to","cr","smallRadius","notHemisphere","visible","intersect","two","pa","pb","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","meridian","q1","code","c0","v00","point2","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","activeStream","x__","y__","v__","x_","y_","v_","first","bufferStream","clipStream","polygonInside","cleanInside","cache","cacheStream","lengthSum","lengthStream","lengthLineStart","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ao","bo","ab","ringRadians","pointRadians","graticuleX","graticuleY","graticule","DX","DY","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","cy0","cy1","sy1","kx0","ky0","kx1","ky1","x00","y00","bounds","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","PathString","_string","_circle","projection","projectionStream","contextStream","pathArea","measure","pathMeasure","pathBounds","pathCentroid","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","project","delta2","resample","resampleNone","resampleLineTo","phi2","dx2","dy2","dz","a00","b00","c00","resampleStream","ringPoint","transformRadians","transformRotate","scaleTranslate","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clipAntimeridian","postclip","recenter","clipAngle","conicProjection","parallels","cylindricalEqualAreaRaw","conicEqualAreaRaw","r0y","multiplex","streams","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEquidistantRaw","mercatorRaw","mercatorProjection","reclip","tany","conicConformalRaw","equirectangularRaw","conicEquidistantRaw","gy","nx","A1","A2","A3","A4","M","equalEarthRaw","l2","l6","gnomonicRaw","kx","ky","tx","ty","reflectX","reflectY","naturalEarth1Raw","phi4","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","separation","nodeSize","cluster","previousNode","eachAfter","eachBefore","ancestor","leastCommonAncestor","aNodes","ancestors","bNodes","leaves","hierarchy","childs","Node","valued","defaultChildren","computeHeight","node_copy","copyData","node_count","node_each","node_eachAfter","node_eachBefore","node_sum","node_sort","node_path","node_ancestors","descendants","node_descendants","node_leaves","node_links","shuffle","circles","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","d3","place","intersects","score","packEnclose","aa","sj","sk","pack","optional","required","constantZero","radiusLeaf","packChildren","translateChild","partition","positionNode","roundNode","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","nextLeft","nextRight","moveSubtree","wm","wp","change","executeShifts","nextAncestor","vim","TreeNode","treeRoot","firstWalk","secondWalk","sizeNode","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","dice","squarify","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","resquarify","_squarify","lexicographicOrder","computeUpperHullIndexes","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","hull","inside","perimeter","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","sourceRandomLogNormal","randomLogNormal","sourceRandomIrwinHall","randomIrwinHall","sourceRandomBates","randomBates","irwinHall","sourceRandomExponential","randomExponential","initRange","initInterpolator","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","pointish","unit","normalize","clamper","bimap","d0","polymap","clamp","untransform","interpolateValue","interpolateRound","continuous","linearish","nice","transformLog","transformExp","transformLogn","transformExpn","pow10","powp","base","logp","log10","log2","reflect","loggish","logs","pows","transformSymlog","log1p","transformSymexp","expm1","symlogish","constant","symlog","transformPow","transformSqrt","transformSquare","powish","quantile","invertExtent","quantiles","quantize","newInterval","floori","offseti","field","millisecond","durationSecond","durationMinute","durationHour","durationDay","durationWeek","second","getMilliseconds","minute","getSeconds","getMinutes","hour","getHours","day","setHours","setDate","getDate","getTimezoneOffset","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","getMonth","getFullYear","months","setFullYear","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDay","setUTCHours","setUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYear","setUTCFullYear","utcYears","localDate","H","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatShortWeekday","formatWeekday","formatShortMonth","formatMonth","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatPeriod","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","formatWeekNumberSunday","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","formatFullYear","formatZone","formatLiteralPercent","utcFormats","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","formatUTCMonth","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCPeriod","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseShortWeekday","parseWeekday","parseShortMonth","parseMonth","parseLocaleDateTime","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parsePeriod","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseLocaleDate","parseLocaleTime","parseYear","parseFullYear","parseZone","parseLiteralPercent","pads","charAt","newParse","newDate","week","Q","V","timeMonday","timeDay","U","Z","utcFormat","utcParse","numberRe","percentRe","requoteRe","requote","timeSunday","timeThursday","dow","timeFormat","timeParse","formatIso","isoSpecifier","formatIsoNative","toISOString","parseIso","parseIsoNative","durationMonth","durationYear","calendar","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","tickIntervals","tickInterval","timeYear","timeMonth","timeWeek","timeHour","timeMinute","timeSecond","timeMillisecond","utcWeek","utcSecond","utcMillisecond","k10","sequential","sequentialLog","sequentialSymlog","sequentialPow","sequentialSqrt","sequentialQuantile","k21","diverging","divergingLog","divergingSymlog","divergingPow","divergingSqrt","scheme","warm","cool","ts","pi_1_3","pi_2_3","ramp","magma","inferno","plasma","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","cx0","cx1","dx0","dy0","dx1","dy1","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","bx","by","kc","lc","Linear","areaStart","areaEnd","pointX","pointY","defined","curve","curveLinear","defined0","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending","pie","arcs","curveRadialLinear","curveRadial","Radial","_curve","radial","lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","linkSource","linkTarget","curveHorizontal","curveVertical","p2","p3","linkHorizontal","linkVertical","linkRadial","draw","tan30","tan30_2","ka","kr","sqrt3","symbols","cross","diamond","square","star","triangle","wye","Basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","BasisOpen","Bundle","_basis","_beta","bundle","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","CardinalOpen","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","catmullRom","CatmullRomClosed","CatmullRomOpen","LinearClosed","slope3","h0","h1","slope2","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","_t0","Natural","controlPoints","px","py","Step","_t","stepBefore","stepAfter","series","stackValue","orderNone","offsetNone","stack","kz","oz","sz","sij","ki","si","yn","s2","sij0","s3","peaks","peak","vi","vj","tops","bottoms","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","createEdge","edge","edges","setEdgeEnd","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","clipEdges","createCell","site","cells","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","nCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","dc","v01","v11","v10","firstCircle","circlePool","Circle","attachCircle","lArc","rArc","lSite","cSite","rSite","ha","hc","detachCircle","beachPool","Beach","createBeach","beach","detachBeach","removeBeach","disappearing","nArcs","iArc","addBeach","dxl","dxr","directrix","beaches","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","triangles","_found","voronoi","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","__zoom","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","defaultConstrain","translateExtent","touchstarting","constrain","wheelDelta","scaleExtent","interpolateZoom","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","wheelidled","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","k0","translateBy","translateTo","topology","bboxPoint","bboxGeometry","objects","bbox","properties","stitchedArcs","fragments","emptyIndex","flush","ends","fg","gf","meshArcs","extractArcs","geom","geomsByArc","extract0","extract1","extract2","geoms","planarRingArea","mergeArcs","polygonsByArc","extract","neighbors","indexesByArc","geometryType","ij","ik","box","inputs","outputs","quantizePoint","quantizeGeometry","quantizeArc","boundGeometry","boundGeometryType","boundPoint","boundLine","boundMultiLine","hash","equal","store","mask","collisions","keyType","keyEmpty","valueType","keystore","valstore","matchKey","maybeSet","missingValue","pointA","pointB","ArrayBuffer","floats","Float64Array","uints","Uint32Array","currentIndex","nextIndex","rings","indexByPoint","hashIndex","equalIndex","Int32Array","visitedByIndex","leftByIndex","rightByIndex","junctionByIndex","Int8Array","junctionCount","sequence","previousIndex","leftIndex","rightIndex","junctionByPoint","hashPoint","equalPoint","junctions","lineMid","ringMid","ringFixed","rotateArray","arcCount","arcsByEnd","dedupLine","dedupRing","startPoint","endPoint","startArcs","startArc","endArcs","endArc","equalLine","reverseEqualLine","equalRing","reverseEqualRing","findMinimumOffset","arcA","arcB","ia","ib","ja","jb","kb","minimum","minimumPoint","extractGeometry","extractGeometryType","extractLine","extractRing","extractMultiRing","geomifyObject","geomifyFeatureCollection","geomifyFeature","geomifyGeometry","quantizePoints","quantizeLine","quantizeRing","quantizePolygon","quantizeGeometryType","quantization","indexByArc","hashArc","equalArc","indexGeometry","indexGeometryType","indexArcs","indexMultiArcs","oldObjects","newArcs","newObjects","oldArcs","oldArcsLength","oldIndex","newIndexByOldIndex","newArcsLength","newIndex","scanGeometry","scanArcs","scanMultiArcs","scanArc","reindexGeometry","reindexArcs","reindexMultiArcs","reindexArc","filterGeometry","filterRings","filterIdentity","filterNotNull","filterInteriorRing","filterExteriorRing","filterTrue","ownerByArc","ownerIndex","testGeometry","testArcs","owner","planarTriangleArea","minWeight","Number","MIN_VALUE","interior","heap","up","down","removed","maxWeight","halfArea","sphericalRingArea","sphericalTriangleArea","exports","general","CNTRY_TERR","SOVEREIGN","ISO_3_CODE","ISO_2_CODE","UN_CODE","WHO_CODE","WHO_REGION","WHO_STATUS","REAL_VALUE","maskline_general","ID","COUNTRY","LENGTH","maskpoly_general","matcher","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","formatDefault","deinterpolateLinear","deinterpolateClamp","deinterpolate","reinterpolateClamp","reinterpolate","rainbow","d3_identity","d3_reverse","mirror","arr","d3_textWrapping","word","words","parseFloat","tspan","getComputedTextLength","d3_mergeLabels","gen","labels","labelDelimiter","customLabels","genLength","d3_linearLegend","labelFormat","increment","d3_quantLegend","d3_ordinalLegend","d3_cellOver","cellDispatcher","obj","d3_cellOut","d3_cellClick","shape","shapes","shapeHeight","shapeWidth","shapeRadius","classPrefix","labelWidth","cellFilter","filterCells","label","dataValues","labelValues","cellTrans","textTrans","labelAlign","dispatcher","title","titleWidth","cellsSvg","yOffset","getBBox","xOffset","scaleLinear","shapePadding","useClass","helper","d3_defaultLocale","d3_defaultFormatSpecifier","labelOffset","d3_defaultDelimiter","labelWrap","legendDispatcher","legend","d3_calcType","d3_filterCells","cellEnter","d3_addEvents","d3_drawShapes","d3_addText","textSize","shapeSize","textAlign","d3_placement","d3_title","textWrap","legendG","stroke","maxH","maxW","thresholdLabels","generatedLabels","punchColorScale","sqrt1_2","SQRT1_2","sqrt2","sqrtPi","sinci","arsinh","arcosh","airyRaw","tanBeta_2","cosx","cosy","siny","cosz","z_2","cosz_2","sinz_2","tanz_2","lnsecz_2","sinz","aitoffRaw","sincia","sinx","sinx_2","cosx_2","sin_2y","sin2y","cos2y","sin2x_2","dxdx","dxdy","dydx","dydy","armadilloRaw","sPhi0","tanPhi0","cosLambda","sinLambda","dxdLambda","dxdPhi","dydLambda","dydPhi","denominator","dPhi","stream_","parallel","rotateStream","sphereStream","augustRaw","tanPhi","sin3Eta","eta","cosEta","coshXi","sqrt8","bakerRaw","cosPhi_2","tanPhi_2","berghausRaw","lobes","theta0","cotAlpha","delta0","hammerRaw","hammerQuarticAuthalicRaw","bertin1953Raw","hammer","mollweideBromleyTheta","cp","cpsinPhi","mollweideBromleyRaw","mollweideRaw","boggsRaw","sinusoidalRaw","bonneRaw","cotPhi0","bottomleyRaw","sinPsi","fraction","bromleyRaw","cosdLambda","sindPhi","sindLambda","chamberlinRaw","beta0","beta1","beta2","chamberlinAfrica","chamberlin","collignonRaw","craigRaw","crasterRaw","cylindricalStereographicRaw","eckert1Raw","eckert2Raw","eckert3Raw","eckert4Raw","eckert5Raw","eckert6Raw","eisenlohrK","eisenlohrRaw","cos1","vm1v","vp1v","deltatDeltaLambda","deltatDeltaPhi","deltacDeltat","deltacDeltaLambda","deltacDeltaPhi","deltavDeltaLambda","deltavDeltaPhi","deltaxDeltaLambda","deltaxDeltaPhi","deltayDeltaLambda","deltayDeltaPhi","faheyK","faheyRaw","foucautRaw","cosk","solve","steps","f0","f1","foucautSinusoidalRaw","raw","cosphi","sinphi","forwardMeridian","gilbertForward","gilbertInvert","projectionType","geoOrthographic","equirectangular","gilbert","gingeryRaw","rhoCosAlpha","k_","s_","gingeryLength","gingeryIntegrate","dTheta","x_halfPi","rhosinAlpha","sinRhoCosAlpha","halfPi_RhoCosAlpha","cRho","sRho","xB","yB","dAlphadLambda","xB2","dxBdPhi","dyBdPhi","dmdPhi","mcosAlpha","msinAlpha","dAlphadPhi","ginzburg4Raw","ginzburg5Raw","ginzburg6Raw","ginzburg8Raw","lambda4","ginzburg9Raw","projectSquare","gringortenRaw","sLambda","sPhi","gringortenHexadecant","secPhi","drdPhi","dp2dPhi","nu","zeta","g2","zetaMug","f2","gringortenHexadecantInvert","ellipticJi","ellipticJ","twon","ellipticFi","psi","sinhPsi","cscPhi","cotPhi2","cotLambda2","ellipticF","guyouRaw","at","guyouComplexAtan","y_1","guyouComplexDivide","tn","hammerRetroazimuthalRaw","hammerRetroazimuthalRotation","rotate_","healpixParallel","healpixLambert","healpixRaw","sphereTop","sphereBottom","sphereNudge","hillRaw","sinBt","Bt","rho0","K2","L2","omega","sinTheta","cosTheta","Bt_Bt1","sinuMollweidePhi","sinuMollweideY","sinuMollweideRaw","homolosineRaw","hufnagelRaw","psiMax","mapping","inversemapping","mutate","adsimp","fa","V0","tol","maxdepth","nanEncountered","sl","V1","V2","err","maxDepthCount","integrate","hyperellipticalRaw","elliptic","G","approx","rmin","rmax","pointEqual","interpolateLine","resampled","interpolateSphere","lobe","bound","kavrayskiy7Raw","lagrangeRaw","pi_sqrt2","larriveeRaw","sqrtcosPhi","sinPhi_2","sinLambda_6","cosLambda_6","df0dPhi","df0dLambda","df1dPhi","df1dLambda","denom","laskowskiRaw","lambdaPhi","littrowRaw","y2_1","x2_y2_1","loximuthalRaw","millerRaw","modifiedStereographicRaw","zr","zi","ar","br","deltar","deltai","sinc","gs48","gs50","miller","lee","modifiedStereographicAlaska","modifiedStereographic","modifiedStereographicGs48","modifiedStereographicGs50","modifiedStereographicMiller","modifiedStereographicLee","coefficients","sqrt6","sqrt7","mtFlatPolarParabolicRaw","mtFlatPolarQuarticRaw","sinTheta_2","mtFlatPolarSinusoidalRaw","naturalEarth2Raw","phi6","nellHammerRaw","nicolosiRaw","b2d2","d2b2","x2y2","pi2","pattersonK1","pattersonK2","pattersonK3","pattersonK4","pattersonC1","pattersonC2","pattersonC3","pattersonC4","pattersonYmax","pattersonRaw","yc","polyconicRaw","subtract","multiply","face","recurse","faceEdges","shared","sharedEdge","hasInverse","faceInvert","faceDegrees","proj","multiPoint","notPoles","found","some","octahedron","faceProjection","faces","collignonK","w5","xyz","hexagon","cornerNormals","normals","dot","projectFeature","projectFeatureCollection","projectGeometry","projectGeometryCollection","sinkPoint","sinkLine","sinkPolygon","projectQuincuncial","digits","quantizePointsNoDuplicates","quantizeFeature","rectangularPolyconicRaw","cotPhi","robinsonRaw","yy","satelliteVerticalRaw","satelliteRaw","vertical","cosOmega","sinOmega","tilt","epsilonInverse","x0e","x1e","y0e","y1e","nonempty","normalizePoint","clampPoint","clamped","clampPoints","extractFragments","pointk","fragmentBefore","stitchFragments","fragment","startFragment","endFragment","stitchFeature","stitchGeometry","timesRaw","twoPointAzimuthalRaw","cosd","twoPointAzimuthalUsa","twoPointAzimuthal","twoPointEquidistantRaw","lambdaa","lambdab","z02","tanLambda0","za","zb","cosza","coszb","twoPointEquidistantUsa","twoPointEquidistant","vanDerGrintenRaw","P2","P2_A2","G_P2","x2_y2","theta1","vanDerGrinten2Raw","vanDerGrinten3Raw","vanDerGrinten4Raw","B2","C2","BC","B_C2","B_3C","D2","F","C_","B_C","F_","sqrtF","wagnerFormula","wagnerRaw","poleline","inflation","vinflation","vratio","wagner4Raw","wagner6Raw","wagner7Raw","wiechelRaw","sin1_Phi","winkel3Raw","sin_2phi","sin2phi","cos2phi","sinlambda","coslambda_2","sinlambda_2","sin2lambda_2","dxdlambda","dxdphi","dydlambda","dydphi","dlambda","dphi","makeProjection","CountryTotalsDataProvider","dtp1Data","dtp3Data","numericColumnList","yearList","vaccineList","vaccine","acc","country","whoCountryNameToCountryDataLookupName","lookupCountryCode","countryName","countryInfo","lookup","countries","countryCode","alpha3","console","centroidLookup","dorlingCartogram","props","labelFilter","geoPath","world","createNodes","forceSim","forceSimulation","forceCollide","TRANSITION_DUR","numIterations","hasGeoJSON","countriesWithLabels","titleText","all","dtp1DataURL","dtp3DataURL","countryTotalsDataProvider","getYears","formatDataForYearAndVac","getRows","unvaccinated","coverage","yearIndex","scaleSqrt","legendContainer","colorLegendContainer","color_svg","colorLegendSwatchSize","color_legend","legendHelpers","radiusLegendWidth","radiusLegendContainer","radius_svg","formatSi","radius_legend","renderNextYear"],"mappings":"AkCEC,AuIEA,AEKA,AKTM,ACIN,AeAA,ApGAA,AyHAA,AkCFA,A0gBF2B,A3fI3B,AmBFA,AzBFgC,AxJIhC,AmQAA,AzTAA,A2ZJM,AdIN,AOFA,ACAA,AgBF2B,A8JGrB,ARDN,ASEA,ANFA,AOAA,AWkBA,AjBlBA,AoBEA,AbQA,AeCA,AbXA,AfiFcsL,AdtEd,AEIA,A6CdM,AGCN,AmBDc,Abcd,ALfA,AmBcA,AtGZA,AbMD,AHRe,AOUd,AePA,AUqEA,AQtEA,AbKA,ADPA,AQsBA,AElBA,AZIA,ADNA,AlBsGA,A0B/EA,AIrBA,AICA,AdHA,AXFA,AmBsBA,AxBlBA,AEEA,AkBJA,AvFAA,ACEA,ASFA,AGKA,AIPA,aleFc,AuIAA,AESd,AKTM,ACAQ,AeAA,ApGAA,AyHAA,AkCAA,A0gBAA,A3fAA,AmBAA,AzBAA,AxJAA,AmQAA,AzTAA,A2ZAR,AdAQ,AOAA,ACAA,AgBAA,A8JGR,ARHQ,ASAA,ANAA,AOAA,AWAA,AjBAA,AoBAA,AbAA,AeAA,AbAA,AfmFAA,AdhFA,AEHA,A6CGR,AGHQ,AmBGA,AbHA,ALAA,AmBgBd,AtGhBc,AbUf,AHRe,AOFA,AeAA,AUAf,AQAe,AbAA,ADAA,AQAf,AEAA,AZAe,ADAA,AlB0Gd,A0B1GD,AIAA,AIAA,AdAe,AXAA,AmBAf,AxBAA,AEAA,AkBAe,AvFAA,ACAR,ASAQ,AGSd,AITc,OzVSd,AKTM,A6RAA,AwKGA,AVgFQA,AiChFR,AsBAQ,ACad,AnHND,AHRe,AKwGd,AlDjGA,E9dTuBhK,AuIAAA,AQAAA,AeAAA,ApGAAA,AyHAAA,AkCAAA,A0gBAE,A3fAFA,AmBAAA,AzBAAiK,AxJAAjK,AmQAAA,AzTAAA,A6YAAA,AOAAP,ACAAa,AgBAE,AsJAFb,ASAAO,ANAAP,AOAAO,AWAA0F,AjBAA1F,AoBAAW,AbAA+B,AeAA/B,AbAAe,A7BGA1B,AEHAizC,AgDAAjzC,AMAAoE,ALAApE,AnFAAA,ATAAgN,AeAE,AUAjB+E,AQAenQ,AbAAmJ,ADAE,AQAjBqI,AEAAM,AZAiB,ADAA,AQAjB9B,AIAA4B,AIAAhK,AdAiB,AXAFoE,AmBAfoF,AxBAAtG,AEAAa,AkBAeP,AvFAAhN,ACARA,ASAQA,AOAAA,EleAAA,AuIAAA,AQAAA,AeAAA,ApGAAA,AyHAAA,AkCAAA,AeAAA,AmBAAA,AjLAAA,AmQAAA,AzTAAA,A6YAAA,AOAAP,ACAAa,AsKAAb,ASAAO,ANAAP,AOAAO,AWAA0F,AjBAA1F,AoBAAW,AbAA+B,AeAA/B,AbAAe,A7BGA1B,AEHAizC,AgDAAjzC,AMAAoE,ALAApE,AnFAAA,ATAAgN,AyBAJgF,AQAIpQ,AbAAmJ,AIAArM,AjBAAkP,AeAAZ,AvFAAhN,ACANM,ASAMN,AOAAA,E9DAGN,AuKAAA,AGAAA,AqBAImG,AbAAlD,AeAArB,A1CGJP,AEHOmyC,AsDAF1hB,AjGAFjd,AeCxBxJ,AIAG,AQAFsI,AEAD,AZCC,ADDDhD,AYAA,AIAArC,AdAAiB,AQACgE,AtBAE,CthBAAjT,AuIAA,AQAA,AeAA,ApGAA,AyHAA,AkCAAA,A0gBDmB,A3fCnB,AmBAAA,AzBDwB,AxJCxB,AmQAA,AzTAA,A6YAA,AQAAM,AgBDmB,A+JCnB,ACAAN,AWOA,AjBPAA,ASAAmC,AqBAA,ACAA,AnFAA,AgBAA6P,AQAAnP,AbCF,AIDE,AjBAA,ALCM,AoBDLmK,AvFAD,ACAA1M,ASAA,AOAAN,CoHD4B4C,AeAFrB,CjMC1B7B,AuKAAD,AGAAC,AqBCAmB,AxCEH,AEHG,AsDEHS,AjGFAkK,CeAAT,AECC,ADDDsF,AgBAArC,AdAAiB,C4DAAnO,AVAJ4B,AeIOZ,A/DHF,AODAuR,AEAIM,ADAAF,AFAJR,CXAUpQ,ACAH,AgBAC,AdAF,AdAJ,C6EAHhC,AxCGCA,AwDGDoF,AjGNAuF,AmBAI,CriBADxL,AuIAA,AQAA,AeAA,ApGAA,AyHAA,AkCAAA,A0gBDmB,A3fCnB,AmBAAA,AzBDwB,AxJCxB,AmQAA,AzTAA,A6YAA,AQAAM,AgBDmB,A+JCnB,ACAAN,ANAM,AOAJ0C,AEAFP,AqBAA,ACACnC,AnFAD,AgBAAgS,AQAAnP,AhBCEgK,AODF,ANEAoC,AXFA,AeACjC,AvFAD,ACAA1M,ASAA,AOAAN,CzVQR,AKTM,A6RAA,AwKGA,AaDD8B,AKDAA,A5BkFSkI,AiChFR,AsBAQ,AbAT1I,AcaL,AnHND,AHRe,AODH0L,AoBCDH,AtBwGV,AMtGc,AxDKd,C9dPA,AqNAA,AkCAA,A6KDQnN,ACCR,AsKDQD,AGAAC,AOCR,ACDiBiD,A3BGN3C,AEHH,AiDCR,AnEDeuK,ARCI,ADDFtJ,AdCM0L,AoBDTT,AtFAJ,AgBCV,C8HGKvG,AGJA9E,AgBEK,AjGFMoY,AoBCG,AYDA1P,C9IAP9J,AuKAAC,AGAAD,AnBGGsB,AtBHDiM,AZAF/L,ALCW0L,C4EIlBhM,AGLIkF,AbAgBlD,AeCpBsD,AbDQnD,A2BGRvB,AjKAC,CyGAavB,CvJHF,AuKAA,AGAA,AkBAZc,AjBAGd,AoBASH,AbAc+C,AeE1B/B,AxDFa,AVCMiM,ACAlBpD,AhBCEiD,CuCCaomC,AwDHpB3uC,AlFAyB,AKCF0I,AJDD,CliBCvB,AyIOA,AKTM,AuEEN,AkCAA,AoLFM,APCepN,ACCrB,A8KCM,ARFeD,AGAAC,AOCrB,AWDSgG,AjBAY/F,AsBAhBmC,A5BkFSkI,AiChFR,AsBAQ,AlBDd,AmBcA,AnHND,AHRe,AgCDQQ,A3ByGtB,A4BzGoB,A9EQpB,AIPA,CoHDuC1J,AEArBqB,A2BARiC,AhEAQvE,ANGnB,ACHwB,ArBAL+N,AHGKjB,C/YFb3M,AQAAA,AeAAA,ApGAAA,AyHAAA,AiDAAA,A9JAAA,AmQAAA,AzTAAA,A6YAAA,AODeP,AuKAAC,ASCfM,ANDeP,AkBATI,AnCAC+B,AgDCP5B,AlFAAA,AMEF,AIFR,ApFAUA,AUAAA,C2HDiC6C,AeA3B,AcACL,A/ECXkH,AXDmB7J,AmBG1B,AtBAwB8M,ClHHM,AuKAA,AGAA,AjBALuwB,A3BAIjuB,C6CAAjP,AoBAH8F,ApDAE,AGCtBkI,A9BCe,AlECLrH,C6QJY,AjgBAK,AsMCCjH,AiBDN,AsJCMD,AGAAC,AUAVgE,A7CAK,ARCKkC,AWDL2D,AxBIpBoD,CyDHR,AoBDoC,AtCO1B9L,AvBNuB+E,ApFEhBtF,CiGFV,AhBA8B,AeAxB0N,AdAF,AIDoBhB,CjaCrBhN,AQAAA,AeAAA,ApGAAA,AyHAAA,AiDAAA,A9JAAA,AmQAAA,AzTAAA,A6YAAA,AOD4BP,AuKAAC,ASC5BM,AND4BP,AkBEjCoB,AKFKU,AQCAvB,AlFAAA,AMAT6C,AKAoC,ADArC,AKAU,AzFAA7C,AUAAA,C6HDiB0B,A3CGnB4R,AEHwB/J,AZCQzH,AeApBkS,AVDgB9H,AtFI5B5L,C9CJkC,AuKAA,AGAA,AqBAFW,AEAjBN,AxCChBE,A3CD4BmM,AoBCKlL,AbAxC,ALCQ6K,C7YCR,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AYDU,ARFwB9M,AqBGlC,AMAiBA,AxFAjB,AkBAqB+B,AVFuBiL,ADDPhM,AUG7BqS,A3FAR,AUAA,ClVKA,AKTM,A6RAA,APCwCvT,A+KExC,ARFwCA,AGAAA,AQAOE,AeAxBA,A5BkFfmK,Ad/EqBjJ,A+CD7B,AsBAQ,ACad,AnHND,AHRe,AOCTyK,AiCDO6I,AbAgCxH,AtBwG5C,AIvG2BH,AEEP,AxDIpB,CrVAA,AKTM,AilBAqB,AjgBAK,A6MA1B,AUAqB,A8JGrB,AaCD9G,AjBFL,ANiFcoE,AiChFR,AsBAQ,ACad,AnHND,AHRe,AwBAqCnK,AnBwGnD,A0BxGenB,AEEMkD,A9EKrB,C9dPA,AqNAA,AkCAA,A8KAA,AgLAA,A1BEuC,AEFhCf,AiDAP,AnEED,ALFoDhB,AOG3C,AXJkC,AdER,AlDDlC,C8HES,A9EDJ2L,C9GDL,AuKAA,AGAA,AqBD8C3K,AtCCnCe,A3BCHyO,AYF+BjC,AFI/B,A1FAA9N,CyGDoCN,AzCDnCkZ,AwBGV,AjBJC,ClZEA,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AvBFiBrZ,AgDEjB,AMA0B,AxFA1B,AMFW,AXGH8M,ArEDR,ACCU,ASDV,CqIIU9L,AGNFA,AED8BU,AbAMY,A7BGE4wC,ClbK9C,AKTM,A6RAA,AwKGA,AGFyD,AbkFjD/oC,AiChFR,AsBAQ,AbETrF,AcWL,AnHND,AHRe,AoCD6B2J,AZCgB1I,AnBwG3D,AoBxG0BqJ,AdGC1B,AxDI3B,CkIDczM,A/DNE,AkBAK,AbAsC8E,AOGnD,AKHwB,AhGIhC,CldJA,AqNAA,AkCAA,A8KAA,AgLAA,A8BGUxB,ALHV,A3EA+DtC,AbG5B,ApDHnC,C9DAA,AuKAA,AGAA,AQDoEa,AeAvBrB,A1DGrC2Q,ALFuDnQ,ADA/D,AHAM4H,AUGE,AJJ0CuH,C/ZQlD,AKTM,A6RAA,AwKGA,AaKWrL,AGNJE,AXDoC5B,AfkFnC8F,AiChFR,AsBAQ,AbEG1I,AcWjB,AnHND,AHRe,AKwGd,AoBvGQ2N,AtEMR,CwHR2EvM,AeAnB,AxCEjDuD,AlBCW+G,AvBAR,C2MJiB,AjgBAK,AuNAL,A8KELnM,AlECrBkK,AEDmEnF,AOI5DiM,ANFR,C2LJ2B,AjgBAK,AuNAL,A2KQLnM,AVP4DhD,AzBEvE,AsDGNkC,A7EJ+DgB,AYGtD,C6BHd,A9CCUkC,AUEFkF,ARFA,ADDFtD,AQImBhL,AIL0B,A5FKnD,C8IE6BmC,AGNFF,AbD+D,AEAlC,A2BK9CyD,A7EHF,CuBCDwB,AnBEwBhE,CyDJEiE,AbD4D,AeA3CvE,AbClD,A2BIiBC,A9EJjB,C5ZOA,AKTM,A6RAA,AwKGA,AaK0B1B,AvB2ElBmK,AZ/EH,A6CDL,AsBAQ,ACad,AnHND,AHRe,AOCW,AiCDQpI,ANIzByR,AVHA,AnBuGR,ASxGA,ALEU,AtDKV,CvVLA,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AeFyCxS,AEDsB,AQG/D,AlFAA,ATAOsY,AoBDC,ASFgD,AbC7C,AQKH,ANHR,AdEU,ArEFV,AUAA,CoQJ2B,AjgBAK,AuNAL,AiKCuErY,AzBI3FknB,AsDWC5jB,AlFbQ,AaCF,AFEN6O,C5iBJR,AqNAA,AkCAA,A8KAA,AgLAA,AyBAA,AnEGQjG,AQFD,AjFDP,CleAA,AqNAA,AkCAA,A8KAA,A8KCM,AEDN,ANAA,AODsG,AeAlC1L,A1CGLmJ,AECpDwoC,AiDHX,A3ECY/lC,AeEa,AVHhBF,AtEAT,CiICQlH,AjFCDqT,AyBCMlH,ALF2CjF,AOGhDqG,AzBFOzG,C2MJY,AjgBAK,AsMEhC,AiBF2B,AsJE3B,AGAA,AQD0G,AEC1G,A3BGoB,A6CFd,A3DFwD,AZE1CC,AKDNZ,CwDSN,AKNAnK,AnFDO0J,AeDO3I,AKAVqK,AMGJ+F,CqFUR,AnHND,AHRe,AwCCFjG,AhBAepH,AnBuG3B,A0BnGQ,AQDA,AzBJR,AHIU,C/YFV,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AEH+GhD,AzBKxG/C,AgDFP,AMKK+E,AxFLL,ATAmBsU,AoBDCrM,ArFCpB,AUAA,C0IEGhM,A4BUH,AnHhBD,AE0GC,ChhBxGA,A8IFM,AuEEN,AkCAA,AoLFM,ANEN,AgLAA,AWOC8E,AVFO,AzBDQ,AsDGNhB,ALPV,AxEC2BiB,ASFwC2D,AZEpC1I,AWCN,A5FEzB,AgBJA,CiHCM,AgBAEiF,AEGD3D,A1CFgE,AtBFvE,AHAwBkO,CpZFlB,A6RAA,AqLSI,AvB0EIrG,AZ3EJnJ,AmELI,A3FDd,AFCmC,AbGpB2M,C7YGf,AslBT2B,AjgBAK,AsMEhC,AiBF2B,AsJE3B,AGAA,AqBEA,AODM,A5FHHmL,AwBG4B9X,AxEM/B,C9dPA,AqNAA,AkCAA,A8KAA,AgLAA,ACCKA,AbHN,AZQe,AmERf,AbUIoF,ALRH,A3DCmBmH,ANGCxL,AVHkBd,AWE9B,AICA,AhFJR,CzVOA,AqYTY,AHEE,AgCGY,ALFS,AJDHD,AEEhC,AIF0BmM,A1EO1B,ChVTUxK,A6RAAA,AqLSIvB,AjBPd,AsBIYiF,AcIL5E,AhFPmC4L,C4CD1C,ApBE+E,AEI5D8a,AoEQnB,AnHdc,AmBEN,AKD8BlnB,AOOvC,A7BgGC,ClY1GkBG,A6RAAA,A2KGbJ,AbHFoJ,AuDAJ,AbUY3I,AhFPqCzB,ADDX,AQM7BnB,AEFckD,AxBFO+K,AoBDrBK,AtFGR,CyGFkF,AEI3D,AlBHOkF,ALFYhF,ADD1C,AaIaxD,CiDFb,AXFA,AfFU,AuDAX,AbUiBnI,A1FRhB,AeCa0P,CjaCb,AQAA,AeAA,ApGAA,AyHAA,A4iBJ2B,A3fI3B,ANJgC,AxJIhC,AmQAA,AzTAA,A6YAA,AwBJ2B,A+JI3B,AEDU,AbHCrP,AoCIX,AlFAA,AgBCwCoL,ALFQnN,ASF8B+T,ADItE,ArBHR,AmBQD,A3FNC,AUAA,C3dFA,AuIEA,AQAA,AeAA,ApGAA,AyHAA,AkCFA,AeEA,AmBFA,AjLEA,AmQAA,AzTAA,A6YAA,AQFA,A8KCM,ACCN,ACFA,AWOoBhO,AUNd,AGCN,AMMoBrE,ALRpB,AmBcA,AtGZA,AMCA,AbCA,AnEFA,AUAA,AOFA,CzVOA,A6cLKT,AzBKIjB,AVLT,AdFA,AKMQnB,ANJR,AtEKA,ChVTwB6D,A6RAAA,AwKAzB,AJEC,A2BFD,ASU0B0D,AxEF1B,AOFmBuD,CoCFuC,AeElC1H,AxCGLkmB,A3CFR,AiBJ8CnnB,ADAhDwP,C9HDR,AuKAA,AGAA,AnBEyF,AwDOtFpK,ArGToB8F,AHAT,AkCQNwH,AHFQ3R,AIHH8H,C1IHb,AuKAA,AGAA,AkBSU5I,AVPDqB,AbJS,AZSI,A1BNsCrB,ADC5D,AgBGA,CiCPGH,AJEH,ASAA,AkBFGA,AsBAJ,AbWQgE,AxGXD,A2BGwD9D,AOOzCe,ApBRrB,ClZEA,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AiBE6B,AxCGHs7B,AgDL1B,AlFAA,AMCA,AjBqGA,A0B9FD,AtBNC,AEAgCvwB,ArEFhC,AUAA,C3dFA,AqNAA,AkCAA,A8KAA,A8KFW1L,AEEX,AWSe,AUXJA,ASWA0D,ALTX,AmBcA,AnHbQ,AqCCR,AbDkE7D,AMO1DqS,A1ERR,CzVOA,A4dFGlN,A1CFEpF,AtBHL,AQSQ,AVRyDA,AnBuGjE,A8BrGkB2S,A5FClB,AYGA,CwHLclR,A6BOEsC,AxGXN2G,AOKP4N,AOHH,AmBQqBvX,AJNrB,AtFEA,C3UFA,AEJD,AMIC,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AYUU,AKPHjB,AxCE0BqnB,AgDLjC,AlFAA,AgBIQ9V,AIJM,AZDsD,AbKpE,ArEJA,AUAA,AGJD,ChVAmC1P,A6RAAA,APElC,AuKAA,AGAA,AqCSoBoC,AxGXF,AOKT5E,AoBF8Da,AHC9DmM,ADAT,AYEA,AICA,CiDHA,AEGalL,A1CFRjB,AEIgCsB,AlBDnB6K,ACGV,CuCXSzK,AJEjB,AOEkB,AoBJDA,ASWQ0D,AjGNZsO,AkBDb,C3ZJD,AudaIzS,AKNcR,A1CFT0xC,A7CFA,AwBCChmC,AFAT,AtEJD,C1DEC,AuKAA,AGAA,AQEqB7K,ApECFiX,AyBIbjH,AEEE,AVPCnF,AOQD8E,CjaZT,AkbKuB9R,AwDSrBoE,A7EVe8I,ADFhB,ArBwGA,AwBtGA,AtFEA,AYND,ChVAO,A6RAA,AqLYHvM,AKJAA,AxCCuC2B,AmER3C,ACeC,A9FZgB4K,AOQSxO,AjBVzB,AHMA,C/YJA,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AIFA,AfAD,AdGyB8D,AkDDxB,AMUQlB,AxFVR,AbDYsX,AwBCU/X,AQEtB,A7FFA,AUAA,CqIQW6E,AKJF5D,AbNT,AwCDD,ACDA,AlFI0B,AZAHjB,AOQSe,AEDvB,CuDPR,AbA0BkB,AxEE3B,A6BGOqP,AzFHN,C8IMkBrR,AjBVlB,AsBMaQ,AxCCiC,AsDKhCkwB,AlFTd,AGDA,AhBEA,C+BFA,AhBCSxkB,AOQD,CtIXR,A+KAUxK,ARAV,AGAA,AjBOiD06B,A6CPvCz6B,ASYae,AcdxB,A/GK6B2V,AoBDFpO,ASClB,CtaLT,A4dQoBpK,A1CHW,A7FL/B,ChVAO,A6RAA,AwKEYA,AaWLd,AnCJ4CA,A6CPzCc,AuBFjB,A/GKmCgG,AoBDCrB,AHC1B0H,ACDT,AXFA,ClZEA,AQAA,AeAA,ApGAA,AyHAA,AiDAA,A9JAA,AmQAA,AzTAA,A6YAA,AuLAA,AEAgCrK,AeIP9B,AbNzB,A7BGiCA,AkDDjC,AlFAA,AgBKcmM,AEGP9K,AXRP,AgBGA,AjGHA,AUAA,CwHFwBM,AVAhBwH,AiCAcvH,AsBDvB,A9GIuC8R,AiBAvB,AnBqGf,CsEtGuC7R,AeIVpB,A1DEvB8Q,AzFJN,CyGGQ,AECHnM,AsDIwBtB,ArGRrBiU,AIDoCS,AeA5C,AjBLD,A0BaS,AtBPR,CoEJA,ArCEA,AbAwCrM,AOQjC9K,AEPC,AHODA,A1FNP,CpUNM,A6RAA,APEN,AuKAA,AGAA,AQEgDU,AeK7CjC,A5BNG,AZOCwE,A6CPD,AlECN,C2EWCf,A7EX6C4I,AOQnCpL,AvBJX,ApEFA,CiIHM,AgBCN,AEKSf,A4BTV,AnHOOuE,A6BGAgN,A3BVHkC,A8BMH,AVFA,C4DUYxS,AGVZ,AgBWQP,A7EX2C6L,AOQlCtF,AVPKkF,ADDtB,AgBGA,ANKO9K,C0CPFa,AeIQzB,A5BNP,AdME,AZJKoI,A/BLK,C2CUfspC,AEASpxC,A1BDJ,ASGGA,CoDEM,AVTJ,A6BUC4vB,AjGRJ,CmFESvrB,AbPnB,A7BQepG,AEAGszC,A/CHZ/tC,AELImP,A4BUOzM,C6BT8B7B,AiCAzC,ASYiBnD,AjGTpBqW,AsBFH,C/ZFM,AudaDxT,AKHGhF,AvFLE,A6BGKoR,AEEQ,AEPL2B,A/BHA,A0BYXxR,ApBNP,ApEFA,AYJM,CqHCA,AgBCN,AbCiBjB,AbFPJ,AvDGCsY,A4BAX,AVFA,CzBFc,AsBGd,AUK0BnM,AvBJ1B,AlEAA,CuHHc,AiCAR,AxFGWsM,AeDjB,AkBDA,AbA6DzY,ASE7D,AZGQ,AfHR,C4ESc+E,AmBAchB,AxELG0E,AQN/B,ATUOpH,AEFgB,CuDRvB,A1BDiBpB,AdOO,A+CPlB,AsBAQ,ACFf,A3FGiEoM,AOQnCrK,A7BR9B,CwEFC,A9CYWjB,CyCXL,AaYajB,AVVIG,AeOfH,A5BTakC,AdOOmwC,AwDMpB5uC,AcfT,AnHMoBuU,AoBHnB,AgBGA,CWG4B9X,AmEPd,A1FKN,AHER,ADNA,AlBsGA,A0B5FiBiH,AQPjB,CzaLeoS,A0cCT,AaYmBpY,AKFzB,A1CHwC,A+CP9BU,AScV,AvEL6BK,A9EVdqX,CkKCwB,AlHIZrB,AHLb,AsBGd,AcCA,A3BAA,CyCIiCmP,A6CPfrnB,AvDClB,C6CeQgF,AVZE9E,A3BGmCmyC,AqEPN,AxFCvC,C/ZDO74B,A0cAG1X,AgBCV,AtCMoC5B,A6CPZ2B,ApFKxB,AkBJA,A1EDO2X,CwHIOrZ,A3BG2C0B,A1BLzD,ASSuB,AIRvB,A1BAA,AEEA,C7YLO2X,A0cASxZ,AtBOwBqnB,AoETzC,A9EGC,AbIQ,AHER,ADNA,AYEA,AICA,ApFJO7N,CuIUP,AcIA,AxGfc,AkCWN9G,A7B6FR,CmEvGsB5Q,AGKnBM,AbL4BlD,A9BOa,ChCR9B,CqFiBN8F,AVXC9E,AoBLH,A5FI8B,AIDHmM,AgBFjC,AQU6BnK,AQP7B,CSG+D,ArBD/D,AMIQoQ,AJTR,C/ZDOkH,A0cAD,AaiBN,AGhBA,AjFEsCZ,A2BO9BlG,AvBLR,AxDLO8G,CwHKOzX,AzBGJ7C,AlDTI,AsBGd,AjBqGA,A8BpGA,A1BAA,CuCIoEmzC,A7CArEp6B,AqCNC,CmCIsB/X,AbLiBuE,A9DDzB,AKES,AwBAvB,CqBOoB4iB,A/CDfzlB,AHPJiJ,AoCGD,AHOQyH,AtBLR,CgEA0BrQ,AbLiB,AdQvC5C,AbLJ,CeKwB,A6CRlB,A/DOkD,ALDxD,AJLA,AgBGA,C8CaA,AVTQ+C,A3BAFP,CwBRA,AVA4C3B,A9DA5C,CkDQuBq8B,A5BN7B,AEKA,AOKY,AtBTZ,CiFOA,A5BVsDp8B,A0CctD,AxEgBD,AQ7BC,ANSyB,CLTzB,C2CDM,AuBAA,AuBAI+oE,AlFGV,AzBEA,CqCGYhpE,AbLZ,CwCKQkC,AbRmDlC,AZStDmnB,A/CFYjc,AoBNjB,AgBGA,CSIgB,AsERC,A/GGoCyN,AwBS9CtX,C4CHP,AbT8D,AZSrD+wC,A/CFc1wC,A+BGHL,ADAO,C6BTpB,AwDDmC,A9FO1C,CkEGA,AxCDkB0D,AmETqB,AbcvC,AtEJgC,CcAhC,AsEV0C,AtF8BlCyM,AH7BR,CwFDiD,A1GKjD,CuCIuBzM,AlBqBJoH,ALxBnB,AOIqC9K,ACPrC,CkDcA,AvBhBS+D,AuDDwC,ApFU3B/D,C0CDtB,AzBA2B,AlBqBFoQ,A3B7BfrG,CyDAGpJ,A5BaC,AHFW,AEFS,CGPlC,CYOA,AEDgCowC,A/CFG,A6ByB3B,AI7BR,CtaAc,AqYKbhoC,AIJgBjL,A0BMsBkC,A9EPzB,C+FM2BrC,C3CLrBsZ,AoBEpB,AIM8Bza,CsDK9B,ArDcK6T,ARxBL,ASOc,CyDJd,AcIA,AjGV0B5L,AiBG1B,CkEGA,AcIA,AnGboC,A0BY5B,CsFbyC,AnFc1B/E,AEXvB,A/BDK4S,CyDDkB3T,AvDMlB4Y,AyBwBAlH,CEjBkB3Q,CpaXE,AobSfqE,AlBmBEgM,A7E5Ba,C2GFG,AuDD0B,ArHCrD1G,AoCED,A/BDKiJ,A0BWQ9V,C4CJb,ApEFK+a,AyBwBiBzM,AEhBdnK,AVRR,CkEGA,AcIA,ArGNc+V,AENC3M,A4BYQrK,CnaVhBwY,AufJoD,A9GO/CpN,AwBMS9K,A5ETdkY,C6FMP,A7CDCxP,A6BsB4B/J,ACjBNe,CnaVhBwY,AgcH6BnU,AvDMnByT,AoBDjB,AHCA,ArEHOU,CkIaP,AKPA,AxCEUnU,AsDEV,AxGbQsF,A2BKR,AIWc,CsDAd,AgCjBiE,ArF+B/B,AChB1B1I,CiBHIO,A/CHN,AHPLqI,AkCaO5I,AEZR,CuCMA,A0CT2E,ACAjC,AtF+BL/B,C8B9BIsE,ChcGlCgV,AufJoE,ACAvB,AtF+BX9H,A3B7BjBjG,AlDEjB+N,C2GHsC,AdS7C,CsEVoD,AtF+BLva,ALzB/C,AHCA,C6DUA,AKPA,AcIA,AxGZQ,AiCaAgD,CFEenE,CKdvB,CjCMesO,AwBHf,AIWuBtO,CsDAvB,AvBhBmD,AZW7BoU,AhBGJjT,CHEW+B,C5BNnB,CqBJV,CmDEA,AeCA,A5BTuDsI,A0CavD,AxEkBUrJ,ADdFgC,C4CTR,AzBG2BqwC,AmEZiD,ClHUrEp6B,A6BsBOhY,ACjBIjB,CeLlB,AsEVqD,A3FMrD,AOUO,CmDCP,ArCPA,CEIA,AmEdiF,ArFgChE0S,A3B7BV,CvYEA4H,AgcJsD,A3DStDrB,AhDLAqB,CmKLmD,A/GQlD,AyBwBc3H,ADdd3P,CjabDsX,A6cIP,A0CTsF,AlHU1E,A+BMAzQ,A/EXLyQ,C8EWA,EeNP,AsEVgE,AtFgCtC7H,AL1B1B,C0DWA,AVRA,AzBKA,AmEdc,ClHUGlN,AIFT,AyBwBwBvE,AEhBN,CpaXnBsZ,AyYGE5F,A0BQG7K,A9EXLyQ,C6FKP,CzCFef,C+GRwD,AnHW3DN,A6BwBb,ADjBmBjZ,EuFlB+D,ApFgBhE+B,ADAS,C0CP1B,A0CTc,CCAmE,ApFiBtEwR,C/BNOpG,AEROwH,CyDFuDvO,AdShF,AhDPCyF,COKwB+N,A2BSiB,AHCf,CEFV7X,C6BddwD,A3DSsB,AIHKrF,AyB2BtB0S,A3B/BL6B,A0BeI,CmBLP,AlDXM,AiCcKtB,C0CRX,AbPK/M,AuDFS,ArFmCQ+G,A3B/BJ,CAACyH,C2B+BSnC,AClBc,C6BfhC,AdQV,A7CC+BtF,AIHMA,AwBWzBtD,CuFnBqE,CnHW3CsD,AIHI2M,AyB6BlC,C8BjCA,CZUR,AoEdqF,AnHW1CpQ,E6ByBtCgJ,ADjBsB,EuFnBgE,CjHI5D,CyDAvB,A9BgCHA,EAAON,AEnBoBrQ,AHEdA,CuFNlB,A/GLsD2S,CuDJ1CpK,A9BgCU6C,AElBXuG,AHEA3B,CxBZiDyH,CuDJvCjU,A3DOmC,A+BQ7CkO,AHCkC,CmBN7C,AlBsB6BzS,CkBtB7B,AjBGgCe,C6BVjC,A5BY0BA,CFiBS,AClBvBuR,CqFLX,AjHT4CuB,C2BgCP5T,ACjB1BoS,C9BPDlG,AIJ4DyM,A2BY/D,CFgBkCnH,CkBtBzC,A3CN2EhM,A0BWlD1E,CqFNzB,AtFuB+C/B,E8B7BvCsK,AwDLF,ApFkBM6C,CgBNZ,A3CNiFA,A0BY1E,C6BbU5H,A3DKP4H,CIJ4E4M,C+GN5EkwD,AnHUKhxD,AERyC,CyDIlD1T,C7BYM4H,CqFlBK,AtHEhBrB,AgCiCS9K,AEjBSwS,AHAgBzR,C5BNlCkJ,C+CAD,AoEZ0C,AtFmC5BhK,ADhBHgR,C+BbL1M,CwDNoC,AvFoB/ByM,C+BdDzM,A3DMJ,A6BuBWmN,ChCjCT,AiCgBWU,C6BTpB,AvDFC,AyB4BsBzJ,ADfO9K,EAAMkD,CmBRnC,AhBOA,A7BbD,G0BeQ,C5BTQoL,AILf,AyB4B6BsF,E8B1BrBlI,A3DGaxI,A6BuBcf,CEhBnC,C4BVuBwJ,A/BYX2C,AEFZ,C9BNUA,AEPF2H,CyDG0BrK,A9B6BnC,C3BhC+BsK,EyDItBvK,AzDJgCwK,EAAO3H,A0Be5BxO,AEFnB,C9BNUsO,EAAK,AELP,A0BcR,CxBfA,AyB+BQ0F,C8B5BArI,CwDVkC,AtFsCtBiI,C8B5BF/H,A5BSlB,CoFnBoD,AnHahCnF,C6B0BZ,CsFvC4C,AjHOnDwP,A0BeD,C5BTyBhT,CINzB,AFAYkT,EyDGatK,A3DKxBhB,AHlBa,AKUcoL,C6BY5B,ADAA,CDoBQ,A3BhC8BC,EAAO3H,EyDGd,CwDVqB,AnHe3C,AEPD,CLXM,CiCsBd,EqFnByD,A/GOzD,AwBeA,CxBfA,CyBiCGmF,CErBH,C4BTwC5P,AwDVuB,AtFwCjD,AErBd,C/BJkBuK,AHlBJ,AKWGuH,GyDE2B,A3DMlC,AITV,AFEOQ,A0BaP,CCkBoBzC,CsFxCkD,CpFmBtE,ADAA,CqFnBgF,A/GOhF,AFEOyC,A4BUP,CDyBD,CsF5CiF,AjHS/DR,CFOP,A+BGV,C7BVuBS,CyDC8B/O,E7BSrD,C6BROvH,A3DKQ0G,AITf,CwBeA,CCsBQuN,ADtBR,CGHA,ADAA,C6BROjU,A9BiCc4T,CsF5C2D,AnHgB5DtF,C2DLN,C9BkCN,CsF7C4E,A/GOpF,CuDIkBnM,A/BWlB,C1BZQkU,CyDCc9O,A5BQtB,ADAA,CqFnB0F,CxDWlEwE,A/BWxB,CCuBQ,A3BnCYsK,CFMe/H,EmHLnC,AnHKwC,CENR,C4BShC,E6BRgC,A/BWhC,C5BN6C5H,EENqC,CiHClF,AtFmCGqN,C8BjCIxM,A3DKN4S,AERyC9D,C2BoCzB,C3BpCiC9E,CyDE3CpP,A/BUP,CuFXA,ExDCY,AwDVb,AtF4CwByR,G7B5BZ,C2DNI5T,AwDVZsrF,AtFgDJ,E8BtCuB/jF,CwDVT,CxDUWzD,CwDVzB,EAAA,EtFgDSoQ,C8BtCsB/R,A3DOpB,C6B+BcyR,C8BtCU,C9BsCH1Q,E8BtCOqE,C9BuC9B,A3BzCkE,CyDEhCA,A3DOhC,E2DPkCzD,CwDR9B,EnHeC4C,C6BgCP,C3BxCHwP,CyDC6C,CzDDpCtP,CyDCuCzE,EwDR9BoF,ExDShBA,AwDTgBA,AjHOJ,IyDENqE,AwDRRrE,AtF+CDrE,C3BzCqB2S,CyDEN7J,AwDRV,AtF+CC5C,GsF/CI7B,AjHWf,EiHXmB,CtF+CF,IsF/CKA,CtF+CCpD,C3BpCdiS,CiHXkB3S,CjHWFyS,CyDHU3O,CzDGA4O,EyDHI,AwDRPrR,AjHWU0J,GACjC,C2BmC2BmF,E8BvCS,AwDRPpM,AtF+CWwM,GAAe,C8BvCfvI,AwDP3C6/D,AjHWG,IiHXHA,AtF8CgEz3D,E8BvCf,AwDP5CnQ,EtFkDI,C3BvCG8S,EiHXFjR,CjHYRkR,GiHZYjP,CjHYZiP,CiHZgB,AtFkDAxW,C3BtCP6V,C2BsCO7V,C3BrCpB6V,CiHTKy1E,AtF8CqBpoF,E8B3C4CqE,C9B4CpEqM,E8B3CK,EwDPT03E,AtFkDI13E,A3BtCFiC,EiHZM8T,AtFkDItW,E8B3CH,AwDPG,AtFkDWrT,C8B3CbiM,C9B2CoB,A3BtC5B4J,EiHZgBtO,AjHYRgP,EyDLMhP,AwDPM,AtFoDlBpD,A3BvCE,EyDNanE,C9B6CfmE,CsFnDJmnF,AjHaIp1E,EiHbI+H,AjHaKrX,CyDPY5G,CwDNb,GjHaM,CyDsCpB,AwDnDoB,CtFmDJmB,GsFnDUkqE,AjHaA,EiHZxBigB,EAAQ1hE,AtFkDe,C8BAhB1d,AzDtCsBwC,CiHZjB,AtFkDc,C8BAfzC,A9BEF,E8BFQjM,AwDlDC,EtFmDZ6T,C8BAD,AwDnDmBw3D,EACjBigB,AjHWgCn1E,C2BuCjCtC,C8BAD,AwDlDY,AjHW6BrF,C2BuCjC+E,EAAU,A3BtCX,CyDsCqBpH,EAAxBhK,EAAI,A9BAemM,E8BAZlM,CzDrCZyT,CyDqCgB5J,EAAK9K,E9BAYgB,GAAK,A3BrCtC0T,EyDqCgC1T,A9BASC,E8BALA,A9BASwR,EAAMzS,A3BrCnD0U,EyDqCyC1T,AzDrCjCqU,EyDsCN,EzDjCR,EyDiCSrK,C9BAIhK,C8BAA8J,C9BAI7J,C8BACD,E9BAE,C3BjCXuJ,CyDiCa1L,CzDjCE2L,C2BiCCkI,EAAKM,A3BhCrBxI,GyDgCsB3L,EAClBmM,EzDjCJR,E2BgC8BiI,A3BhCpB/H,E2BgC0B1J,C8BChCgK,EAAEjJ,C9BDmC,C3BhCxB4I,IyDsC1B,E9BNyD,A3BhCzB,E2BiCrB,K8BKFM,EAAIH,A9BLF,A3BjC8BlI,EyDsCtB/D,A9BFV,E8BEgBqM,AzDtCoB,GyDuCtC,E9BHE,E8BGF,EzDvC+C9E,C2BoCxCyD,C8BGH7I,CzDtCHnC,CyDsCO,EAAGoC,C9BHmB,A3BnC7BpC,CyDsCciM,CzDtCP,CyDsCY9K,EzDtCRgB,EAAIoF,EAAEwE,CyDsCU5J,EAAIC,IAAKD,CzDtCX,CyDuCzB8J,C9BJmB/I,E8BInB+I,A9BHAiI,C3BlCG,CyDqCE/R,A9BHae,EAClB8Q,C8BEQhU,C9BDRiU,E3BrCA9R,C2BqCcyR,EAAO1Q,A3BrChB,CyDsCYlD,EAAM,CACzBiM,A9BDL,A3BtCejM,EyDuCLmC,AzDvCYoF,EAAEzD,CyDuCTyH,EAAMU,A9BDrB,E8BC4BA,CzDvCE9J,CyDuCG2B,CzDvCC,GAAIyD,EyDuCC,AzDvCGA,EyDuCApF,AzDvCE2B,GyDuCCwI,A9BD7C,G3BtCkD,EAAGnK,EyDuCD8J,C9BDpD,C8BCyDnI,AzDtC/C,CAACmI,KyDsCoD9J,AzDtC9CoF,EyDsCkD,AzDtC/CvH,IyDuCf,A9BFL,CAAA,A3BrC0BA,KyD2ClBiM,AzDvCT,E2BiCC,IAAA,C8BKiB,EzDtCTwK,EAAShK,EyDsCZJ,C9BLL,A3BhCQ,EyDqCeJ,EAAKxF,GzDrCpB,C2BgCR,C8BKiC,CAACzG,A9BlEnCwT,EAAU3P,G8BkE+B7D,EAAMkD,CzDpCvCsJ,I2B9Bc,A3B8BdA,CyDoC8CH,A9BjEpDyH,C3B6BW,GyDqCJ7H,A9BlEF,E8BSPR,AzDoBkBiL,EyDpBT7S,GzDqBD,E2B9BQ7D,C3B8BPwM,E2B7BG,A3B6BJ,CACC,CyDtBYlB,EAASzH,C9BRb6P,A3B8BR,IAAkCiD,EAA9BzP,C2B9BW6E,C3B8BP,CyDtByB,CACxCQ,AzDqBkBpK,GAAK,E2B9BOnC,A3B8BJoD,EAAIoJ,C2B7BpB,C3B6BuBrL,GyDrBpBsK,A9BPJiI,E8BQTlH,EzDoB4CtF,CyDpBxC,A9BRKwM,C3B4BuCtQ,IAAK8D,E2B5BrCT,A3B6BRkQ,EyDrBKlK,AzDqBDD,EyDrBWH,AzDqBRnF,C2B7BMlH,E8BSf0G,AzDoBe+F,C2B5BZgH,C3B4BqBxH,EyDlBxB1E,EAFAb,A9BRG+M,E8BQC,AzDoB4BkD,EAAE1K,E2B5BzBgG,C8BQAvL,EACTgG,EAAIhB,AzDmBuCe,EyDnBxBA,AzDmBiCR,EyDnBtB,GAAIvF,C9BTZ,A3B4BuCiQ,EyDjB7DxU,AzDiB+DnC,GyDjB1D,EACLoC,C9BZ+B,C8BY3BsK,AzDgBoED,EyDhBlEtL,AzDgB2EnB,E2B5B7C0T,G3B+BpClH,EyDhBArI,E9Bf2CiQ,A3B+BtCjS,GyDhBLgC,AzDgBUwS,E2B/BsC,A3B6B3CC,KAAAA,GyDdKzV,A9BZhB2J,O8BYyB,A9BZjB,G8BYF3G,CAOAkI,GAAY,E9BnBDrM,C3B0Bc2W,E2BzBzBxU,A3ByB2B8J,CyDP3BI,GAAwC,A9BlBxClK,C3ByBiCwU,C2BzB7B,C3ByB+BT,I2BzB1BxC,K3ByBoCiD,E2BzB7B5K,A3ByB+B8K,KyDPpBxK,EAAyB,C9BlB5BrM,GACxBmC,A3B6BEA,EyDZwD,AzDYrDqK,C2B7BA,C3B6BGrL,EyDZsDqK,C9BhB3DkI,I3B4BcvR,CyDZmD,A9BhBjEuR,OAAOW,C3B6BF,KAAKqC,C2B7BIvU,EAAG,GACjBsR,C3BgCX,CyDjBmGpH,GACxF,A9BhBAoH,K3BgCFqD,C2BhCQ7E,C8BgBJ9P,AzDgBEsK,EyDhBErK,AzDgBQc,EAAO2T,CyDftBtP,EzDgBJwP,CyDhBIxP,GAAKkF,AzDgBTsK,C2BjCwB,C8BiBJrK,AzDgBbkJ,EyDhBezT,AzDgBF6J,IyDhBMC,C9BjBO,I8BiBDvF,C9BjBMgN,C8BiBJnM,GAAK6E,CzDgBJK,CyDhBQ/F,C9BjBE0N,A3BiCDnI,CyDhBC1E,GAAIkF,C9BjBC,C8BiBQzM,AzDgBNiW,EAAwBG,EACzE,CyDjB6D/J,E9BdpE8H,I3B+BO,EyDhBE,GAAgB,A9Bff,I3B+BMvS,EyDhBHyK,AzDgBMlK,EyDhBY,AzDgBTqM,C2B/BHxO,E3BgCbwM,CyDjB8BjF,A9Bd3B,G3B+BaoP,EyDjBmBjQ,AzDiBnC8F,EyDjBsC9F,A9BdnC,A3B+BE,EyDjBmCa,GAAK6E,A9BdrCsH,A3B+BEgD,EyDjBuChQ,EAAEa,CzDiBhC2O,EyDjBoCzJ,A9BdxCV,A3B+BegL,EyDjBkC/W,AzDiB7BkD,EAAOf,EAAGqM,CyDjByB,C9Bd/CxO,C3BgCvBwM,G2BhCgC,A3BgChCA,CyDfG,CzDeC,IAAK,EyDfN,EzDeUtF,EAAI,CyD3BZ,CzD2Be9D,EAAIoJ,EAAGrL,EyD3BpBgB,EAAIC,GAAG,AzD2BqB8E,EAAI9D,EyD3BpBmE,EzD2ByBL,CyD3BpBuF,CzD4BtB,CyD5BiCC,EAAEvK,CzD4BlCwU,EAAInK,CyD5BkCP,CzD4B/B/E,IAAI+E,GyD5BqC1E,EAAI2E,EAAIxF,AzD4BpC+F,EyD5BsClF,AzD4B7B0E,GyD5BiCQ,EAASzM,CzD4BlC2W,EAAE3W,IyD5BwC,GzD4B/ByM,EAASzM,EyD5B6BuH,GAc/FmC,AzDkBM,KyDlBA,EzDeKkN,KAAAA,IyDdLlN,IAAAA,EAAO,GAAIhD,EAAI,KAAKA,AzDcKiQ,EyDbxB,AzDa0B1K,IyDb1B,CzDagC0K,EAAET,CyDb9B3O,KAAKb,EAAGgD,CzDagCiN,CyDb3BpP,CzDa6BsP,EyDbxBnQ,EAAEa,GAAGzD,EzDcvBkT,KAAAA,CyDbF,OAAA,IAAIvL,EAAS/B,GzDaMiN,CyDX5B/P,CzDW8BqF,IyDXxB,CzDW8B0K,EAAET,MyDXvBjK,EAAMU,CzDW4BuJ,EyDV3C,AzDUqDS,EAAEE,EyDVtDzU,EAAI+B,IzDU4D0S,MyDVlD1V,EzDWfwV,EAAEzT,GyDXsB,GAAK,AzDWnBA,EyDXsB,CzDe/B8T,GyDfoC,EzDepCA,EyDfoE5U,EAAGmF,EAA/BqF,EAAO,IAAIrK,KzDelCkK,CyDfwCrK,CzDe/B6J,EyDfmC9J,EAAI,CzDejC+T,CyDf0C/T,CzDehC0U,CyDfoCzU,EzDgBnFuU,EyDhBwFxU,AzDgBpF,CAAC8J,CyDhBsFW,EAAKzK,EzDgBrFsK,CyDhB0FtI,CzDgBjF8H,KAAMjM,IyDhBqFmC,CzDgB/EsK,CyDhBmF,CzDgB1EzM,EyDfrC,GzDe2CkD,CyDf1C,KAAKwD,AzDe4CxD,EyDf1C8I,AzDeiDkK,SAAUA,EAAUW,IyDftD5K,GAAO,CzDewD4K,GACrFrK,EyDhBmC,AzDiBnCA,EAAG/F,EyDjBoC+E,GzDiB/BmL,GyDjBqC,AzDgBzC,KAAKD,KAAO,CAACC,IAKX,EyDrB0D1K,GAChE1E,IAAkBpF,AzDoBHsK,EyDpBO,AzDoBPA,EyDpBUrK,AzDoBAc,EAAO2T,CyDpBhCtP,EAAI,AzDqBPoE,IAA2CxJ,CyDrB/BuE,CzDqBwDa,CyDrBtD0E,CzDqBdN,EAAYD,CyDrBsBvK,CzDqBPsL,EAAW,IyDrBItK,AzDqBIC,EyDrBAA,AzDqBIuJ,EAAUxK,EyDrBTgB,EAAGoF,EAAEpF,CzDuBxDgC,EyDvB2DjB,GzDuB3DiB,GyDvBiEiF,MAAMuD,CzDuB7DxL,CyDvBmEyL,IAEjFx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AAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,MAAM,GAAG,CAAC,GAAG,OAAO,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,GAAG,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,EAAE,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,MAAM,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,GAAG,KAAK,EAAE,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,GAAG,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,GAAG,CAAC,KAAK,MAAM,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,MAAM,IAAI,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,MAAM,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,MAAM,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,GAAG,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,GAAG,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,MAAM,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,MAAM,GAAG,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,KAAK,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,OAAO,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,MAAM,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE,KAAK,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,OAAO,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,GAAG,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,EAAE,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,GAAG,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,EAAE,KAAK,KAAK,CAAC,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,MAAM,KAAK,EAAE,IAAI,KAAK,EAAE,MAAM,KAAK,EAAE,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,MAAM,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,EAAE,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,EAAE,MAAM,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,CAAC,GAAG,IAAI,EAAE,KAAK,GAAG,EAAE,KAAK,KAAK,EAAE,IAAI,GAAG,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,GAAG,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,GAAG,CAAC,KAAK,KAAK,CAAC,GAAG,KAAK,EAAE,KAAK,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,MAAM,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,GAAG,KAAK,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,MAAM,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,KAAK,OAAO,CAAC,GAAG,KAAK,CAAC,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,KAAK,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,MAAM,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,CAAC,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,EAAE,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,GAAG,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,GAAG,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,GAAG,EAAE,GAAG,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,KAAK,EAAE,EAAE,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,EAAE,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,IAAI,GAAG,CAAC,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,KAAK,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,GAAG,CAAC,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,IAAI,GAAG,EAAE,KAAK,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,EAAE,KAAK,EAAE,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,EAAE,KAAK,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,OAAO,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,OAAO,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,EAAE,IAAI,CAAC,CAAC,MAAM,OAAO,EAAE,KAAK,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,KAAK,EAAE,IAAI,GAAG,EAAE,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,MAAM,CAAC,CAAC,MAAM,MAAM,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,KAAK,EAAE,EAAE,KAAK,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,MAAM,OAAO,EAAE,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,EAAE,GAAG,EAAE,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,CAAC,KAAK,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,KAAK,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,KAAK,EAAE,IAAI,KAAK,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,EAAE,IAAI,IAAI,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,CAAC,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,GAAG,CAAC,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,MAAM,OAAO,EAAE,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI,KAAK,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,IAAI,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,GAAG,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,KAAK,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI,IAAI,CAAC,CAAC,MAAM,OAAO,CAAC,GAAG,GAAG,CAAC,GAAG,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,KAAK,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,EAAE,IAAI,IAAI,CAAC,GAAG,KAAK,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,EAAE,GAAG,I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UAAA,QAAA,EAAA,UAAA,OAAA,EAAA,UAAA,MAEA,EAAA,UAAA,SAAA,WACA,OAAA,OAAA,KAAA,WAUA,mBAAA,GAAA,EAAA,KACA,EAAA,aAAA,GAAA,WACA,OAAA,IAnpDA;;ACLA,aAEA,IAAA,EAAA,CAEA,YAAA,CACA,KAAA,eACA,UAAA,CAEA,KACA,KACA,KACA,KACA,OAIA,aAAA,CACA,KAAA,gBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,cAAA,CACA,KAAA,iBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,SAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,YAAA,CACA,KAAA,eACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,cAAA,CACA,KAAA,kBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,YAAA,CACA,KAAA,eACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,eAAA,CACA,KAAA,kBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,OAIA,WAAA,CACA,KAAA,cACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,WAAA,CACA,KAAA,cACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,eAAA,CACA,KAAA,kBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,gBAAA,CACA,KAAA,mBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,OAIA,UAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,aAAA,CACA,KAAA,gBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,UAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,KACA,KACA,OAIA,eAAA,CACA,KAAA,kBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,eAAA,CACA,KAAA,kBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,cAAA,CACA,KAAA,iBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,cAAA,CACA,KAAA,iBACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,UAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,OAIA,UAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,KACA,KACA,OAIA,WAAA,CACA,KAAA,aACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAIA,UAAA,CACA,KAAA,YACA,UAAA,CAEA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QAIA,OAAA,QAAA;;AC9ZA,aAEA,IAAA,EAAA,QAAA,cACA,EAAA,QAAA,gBACA,EAAA,GAEA,EAAA,KAAA,CACA,KAAA,OACA,QAAA,CAAA,cAAA,eAAA,gBAAA,WAAA,eACA,UAAA,EAAA,QAAA,CACA,EAAA,YAAA,UACA,EAAA,aAAA,UACA,EAAA,cAAA,UACA,EAAA,SAAA,UACA,EAAA,YAAA,YAEA,QAGA,EAAA,OAAA,CACA,KAAA,SACA,QAAA,CAAA,gBAAA,cAAA,iBAAA,aAAA,cACA,UAA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","file":"03_unvaccinated_children.0668a3da.js","sourceRoot":"../src","sourcesContent":["export var name = \"d3\";\nexport var version = \"5.9.4\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index.js\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"yarn test && rollup -c\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"rimraf\":\"2\",\"rollup\":\"0.64\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"rollup-plugin-terser\":\"1\",\"tape\":\"4\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, x1, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./bisect\";\nexport {default as ascending} from \"./ascending\";\nexport {default as bisector} from \"./bisector\";\nexport {default as cross} from \"./cross\";\nexport {default as descending} from \"./descending\";\nexport {default as deviation} from \"./deviation\";\nexport {default as extent} from \"./extent\";\nexport {default as histogram} from \"./histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./threshold/scott\";\nexport {default as thresholdSturges} from \"./threshold/sturges\";\nexport {default as max} from \"./max\";\nexport {default as mean} from \"./mean\";\nexport {default as median} from \"./median\";\nexport {default as merge} from \"./merge\";\nexport {default as min} from \"./min\";\nexport {default as pairs} from \"./pairs\";\nexport {default as permute} from \"./permute\";\nexport {default as quantile} from \"./quantile\";\nexport {default as range} from \"./range\";\nexport {default as scan} from \"./scan\";\nexport {default as shuffle} from \"./shuffle\";\nexport {default as sum} from \"./sum\";\nexport {default as ticks, tickIncrement, tickStep} from \"./ticks\";\nexport {default as transpose} from \"./transpose\";\nexport {default as variance} from \"./variance\";\nexport {default as zip} from \"./zip\";\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter : \"M0.5,\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",0.5H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","export {\n  axisTop,\n  axisRight,\n  axisBottom,\n  axisLeft\n} from \"./axis\";\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./dispatch\";\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  enter = typeof onenter === \"function\" ? onenter(enter) : enter.append(onenter + \"\");\n  if (onupdate != null) update = onupdate(update);\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_join from \"./join\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","export {default as create} from \"./create\";\nexport {default as creator} from \"./creator\";\nexport {default as local} from \"./local\";\nexport {default as matcher} from \"./matcher\";\nexport {default as mouse} from \"./mouse\";\nexport {default as namespace} from \"./namespace\";\nexport {default as namespaces} from \"./namespaces\";\nexport {default as clientPoint} from \"./point\";\nexport {default as select} from \"./select\";\nexport {default as selectAll} from \"./selectAll\";\nexport {default as selection} from \"./selection/index\";\nexport {default as selector} from \"./selector\";\nexport {default as selectorAll} from \"./selectorAll\";\nexport {styleValue as style} from \"./selection/style\";\nexport {default as touch} from \"./touch\";\nexport {default as touches} from \"./touches\";\nexport {default as window} from \"./window\";\nexport {event, customEvent} from \"./selection/on\";\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export {default as drag} from \"./drag\";\nexport {default as dragDisable, yesdrag as dragEnable} from \"./nodrag\";\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export {default as color, rgb, hsl} from \"./color\";\nexport {default as lab, hcl, lch, gray} from \"./lab\";\nexport {default as cubehelix} from \"./cubehelix\";\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n","import {hue} from \"./color\";\n\nexport default function(a, b) {\n  var i = hue(+a, +b);\n  return function(t) {\n    var x = i(t);\n    return x - 360 * Math.floor(x / 360);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","export {default as interpolate} from \"./value\";\nexport {default as interpolateArray} from \"./array\";\nexport {default as interpolateBasis} from \"./basis\";\nexport {default as interpolateBasisClosed} from \"./basisClosed\";\nexport {default as interpolateDate} from \"./date\";\nexport {default as interpolateDiscrete} from \"./discrete\";\nexport {default as interpolateHue} from \"./hue\";\nexport {default as interpolateNumber} from \"./number\";\nexport {default as interpolateObject} from \"./object\";\nexport {default as interpolateRound} from \"./round\";\nexport {default as interpolateString} from \"./string\";\nexport {interpolateTransformCss, interpolateTransformSvg} from \"./transform/index\";\nexport {default as interpolateZoom} from \"./zoom\";\nexport {default as interpolateRgb, rgbBasis as interpolateRgbBasis, rgbBasisClosed as interpolateRgbBasisClosed} from \"./rgb\";\nexport {default as interpolateHsl, hslLong as interpolateHslLong} from \"./hsl\";\nexport {default as interpolateLab} from \"./lab\";\nexport {default as interpolateHcl, hclLong as interpolateHclLong} from \"./hcl\";\nexport {default as interpolateCubehelix, cubehelixLong as interpolateCubehelixLong} from \"./cubehelix\";\nexport {default as piecewise} from \"./piecewise\";\nexport {default as quantize} from \"./quantize\";\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","export {\n  now,\n  timer,\n  timerFlush\n} from \"./timer\";\n\nexport {\n  default as timeout\n} from \"./timeout\";\n\nexport {\n  default as interval\n} from \"./interval\";\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i(t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i(t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i(t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {set} from \"./schedule\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n  });\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\nimport transition_end from \"./end\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  end: transition_end\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","export {\n  linear as easeLinear\n} from \"./linear\";\n\nexport {\n  quadInOut as easeQuad,\n  quadIn as easeQuadIn,\n  quadOut as easeQuadOut,\n  quadInOut as easeQuadInOut\n} from \"./quad\";\n\nexport {\n  cubicInOut as easeCubic,\n  cubicIn as easeCubicIn,\n  cubicOut as easeCubicOut,\n  cubicInOut as easeCubicInOut\n} from \"./cubic\";\n\nexport {\n  polyInOut as easePoly,\n  polyIn as easePolyIn,\n  polyOut as easePolyOut,\n  polyInOut as easePolyInOut\n} from \"./poly\";\n\nexport {\n  sinInOut as easeSin,\n  sinIn as easeSinIn,\n  sinOut as easeSinOut,\n  sinInOut as easeSinInOut\n} from \"./sin\";\n\nexport {\n  expInOut as easeExp,\n  expIn as easeExpIn,\n  expOut as easeExpOut,\n  expInOut as easeExpInOut\n} from \"./exp\";\n\nexport {\n  circleInOut as easeCircle,\n  circleIn as easeCircleIn,\n  circleOut as easeCircleOut,\n  circleInOut as easeCircleInOut\n} from \"./circle\";\n\nexport {\n  bounceOut as easeBounce,\n  bounceIn as easeBounceIn,\n  bounceOut as easeBounceOut,\n  bounceInOut as easeBounceInOut\n} from \"./bounce\";\n\nexport {\n  backInOut as easeBack,\n  backIn as easeBackIn,\n  backOut as easeBackOut,\n  backInOut as easeBackInOut\n} from \"./back\";\n\nexport {\n  elasticOut as easeElastic,\n  elasticIn as easeElasticIn,\n  elasticOut as easeElasticOut,\n  elasticInOut as easeElasticInOut\n} from \"./elastic\";\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","import \"./selection/index\";\nexport {default as transition} from \"./transition/index\";\nexport {default as active} from \"./active\";\nexport {default as interrupt} from \"./interrupt\";\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export {\n  default as brush,\n  brushX,\n  brushY,\n  brushSelection\n} from \"./brush\";\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export {default as path} from \"./path\";\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export {default as chord} from \"./chord\";\nexport {default as ribbon} from \"./ribbon\";\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","export {default as contours} from \"./contours\";\nexport {default as contourDensity} from \"./density\";\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nfunction pad(value, width) {\n  var s = value + \"\", length = s.length;\n  return length < width ? new Array(width - length + 1).join(0) + s : s;\n}\n\nfunction formatYear(year) {\n  return year < 0 ? \"-\" + pad(-year, 6)\n    : year > 9999 ? \"+\" + pad(year, 6)\n    : pad(year, 4);\n}\n\nfunction formatDate(date) {\n  var hours = date.getUTCHours(),\n      minutes = date.getUTCMinutes(),\n      seconds = date.getUTCSeconds(),\n      milliseconds = date.getUTCMilliseconds();\n  return isNaN(date) ? \"Invalid Date\"\n      : formatYear(date.getUTCFullYear(), 4) + \"-\" + pad(date.getUTCMonth() + 1, 2) + \"-\" + pad(date.getUTCDate(), 2)\n      + (milliseconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \".\" + pad(milliseconds, 3) + \"Z\"\n      : seconds ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \":\" + pad(seconds, 2) + \"Z\"\n      : minutes || hours ? \"T\" + pad(hours, 2) + \":\" + pad(minutes, 2) + \"Z\"\n      : \"\");\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function preformatBody(rows, columns) {\n    return rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    });\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(preformatBody(rows, columns)).join(\"\\n\");\n  }\n\n  function formatBody(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return preformatBody(rows, columns).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(value) {\n    return value == null ? \"\"\n        : value instanceof Date ? formatDate(value)\n        : reFormat.test(value += \"\") ? \"\\\"\" + value.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : value;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatBody: formatBody,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatBody = csv.formatBody;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatBody = tsv.formatBody;\nexport var tsvFormatRows = tsv.formatRows;\n","export default function autoType(object) {\n  for (var key in object) {\n    var value = object[key].trim(), number;\n    if (!value) value = null;\n    else if (value === \"true\") value = true;\n    else if (value === \"false\") value = false;\n    else if (value === \"NaN\") value = NaN;\n    else if (!isNaN(number = +value)) value = number;\n    else if (/^([-+]\\d{2})?\\d{4}(-\\d{2}(-\\d{2})?)?(T\\d{2}:\\d{2}(:\\d{2}(\\.\\d{3})?)?(Z|[-+]\\d{2}:\\d{2})?)?$/.test(value)) value = new Date(value);\n    else continue;\n    object[key] = value;\n  }\n  return object;\n}\n","export {default as dsvFormat} from \"./dsv\";\nexport {csvParse, csvParseRows, csvFormat, csvFormatBody, csvFormatRows} from \"./csv\";\nexport {tsvParse, tsvParseRows, tsvFormat, tsvFormatBody, tsvFormatRows} from \"./tsv\";\nexport {default as autoType} from \"./autoType\";\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export {default as blob} from \"./blob\";\nexport {default as buffer} from \"./buffer\";\nexport {default as dsv, csv, tsv} from \"./dsv\";\nexport {default as image} from \"./image\";\nexport {default as json} from \"./json\";\nexport {default as text} from \"./text\";\nexport {default as xml, html, svg} from \"./xml\";\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","export {default as quadtree} from \"./quadtree\";\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.each(function (force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","export {default as forceCenter} from \"./center\";\nexport {default as forceCollide} from \"./collide\";\nexport {default as forceLink} from \"./link\";\nexport {default as forceManyBody} from \"./manyBody\";\nexport {default as forceRadial} from \"./radial\";\nexport {default as forceSimulation} from \"./simulation\";\nexport {default as forceX} from \"./x\";\nexport {default as forceY} from \"./y\";\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export {default as formatDefaultLocale, format, formatPrefix} from \"./defaultLocale\";\nexport {default as formatLocale} from \"./locale\";\nexport {default as formatSpecifier} from \"./formatSpecifier\";\nexport {default as precisionFixed} from \"./precisionFixed\";\nexport {default as precisionPrefix} from \"./precisionPrefix\";\nexport {default as precisionRound} from \"./precisionRound\";\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  },\n  sphere: function() {\n    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {abs, asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi)\n    return point[0];\n  else\n    return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function(polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon2, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ao, bo, ab;\n  for (var i = 0, n = coordinates.length; i < n; i++) {\n    bo = distance(coordinates[i], point);\n    if (bo === 0) return true;\n    if (i > 0) {\n      ab = distance(coordinates[i], coordinates[i - 1]);\n      if (\n        ab > 0 &&\n        ao <= ab &&\n        bo <= ab &&\n        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < epsilon2 * ab\n      )\n        return true;\n    }\n    ao = bo;\n  }\n  return false;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","export default function(x) {\n  return x;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import projection from \"./index.js\";\nimport {abs, asin, cos, epsilon2, sin, sqrt} from \"../math.js\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = sqrt(3) / 2,\n    iterations = 12;\n\nexport function equalEarthRaw(lambda, phi) {\n  var l = asin(M * sin(phi)), l2 = l * l, l6 = l2 * l2 * l2;\n  return [\n    lambda * cos(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),\n    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))\n  ];\n}\n\nequalEarthRaw.invert = function(x, y) {\n  var l = y, l2 = l * l, l6 = l2 * l2 * l2;\n  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {\n    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;\n    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);\n    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;\n    if (abs(delta) < epsilon2) break;\n  }\n  return [\n    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / cos(l),\n    asin(sin(l) / M)\n  ];\n};\n\nexport default function() {\n  return projection(equalEarthRaw)\n      .scale(177.158);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","export {default as geoArea} from \"./area\";\nexport {default as geoBounds} from \"./bounds\";\nexport {default as geoCentroid} from \"./centroid\";\nexport {default as geoCircle} from \"./circle\";\nexport {default as geoClipAntimeridian} from \"./clip/antimeridian\";\nexport {default as geoClipCircle} from \"./clip/circle\";\nexport {default as geoClipExtent} from \"./clip/extent\"; // DEPRECATED! Use d3.geoIdentity().clipExtent(…).\nexport {default as geoClipRectangle} from \"./clip/rectangle\";\nexport {default as geoContains} from \"./contains\";\nexport {default as geoDistance} from \"./distance\";\nexport {default as geoGraticule, graticule10 as geoGraticule10} from \"./graticule\";\nexport {default as geoInterpolate} from \"./interpolate\";\nexport {default as geoLength} from \"./length\";\nexport {default as geoPath} from \"./path/index\";\nexport {default as geoAlbers} from \"./projection/albers\";\nexport {default as geoAlbersUsa} from \"./projection/albersUsa\";\nexport {default as geoAzimuthalEqualArea, azimuthalEqualAreaRaw as geoAzimuthalEqualAreaRaw} from \"./projection/azimuthalEqualArea\";\nexport {default as geoAzimuthalEquidistant, azimuthalEquidistantRaw as geoAzimuthalEquidistantRaw} from \"./projection/azimuthalEquidistant\";\nexport {default as geoConicConformal, conicConformalRaw as geoConicConformalRaw} from \"./projection/conicConformal\";\nexport {default as geoConicEqualArea, conicEqualAreaRaw as geoConicEqualAreaRaw} from \"./projection/conicEqualArea\";\nexport {default as geoConicEquidistant, conicEquidistantRaw as geoConicEquidistantRaw} from \"./projection/conicEquidistant\";\nexport {default as geoEqualEarth, equalEarthRaw as geoEqualEarthRaw} from \"./projection/equalEarth\";\nexport {default as geoEquirectangular, equirectangularRaw as geoEquirectangularRaw} from \"./projection/equirectangular\";\nexport {default as geoGnomonic, gnomonicRaw as geoGnomonicRaw} from \"./projection/gnomonic\";\nexport {default as geoIdentity} from \"./projection/identity\";\nexport {default as geoProjection, projectionMutator as geoProjectionMutator} from \"./projection/index\";\nexport {default as geoMercator, mercatorRaw as geoMercatorRaw} from \"./projection/mercator\";\nexport {default as geoNaturalEarth1, naturalEarth1Raw as geoNaturalEarth1Raw} from \"./projection/naturalEarth1\";\nexport {default as geoOrthographic, orthographicRaw as geoOrthographicRaw} from \"./projection/orthographic\";\nexport {default as geoStereographic, stereographicRaw as geoStereographicRaw} from \"./projection/stereographic\";\nexport {default as geoTransverseMercator, transverseMercatorRaw as geoTransverseMercatorRaw} from \"./projection/transverseMercator\";\nexport {default as geoRotation} from \"./rotation\";\nexport {default as geoStream} from \"./stream\";\nexport {default as geoTransform} from \"./transform\";\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export {default as cluster} from \"./cluster\";\nexport {default as hierarchy} from \"./hierarchy/index\";\nexport {default as pack} from \"./pack/index\";\nexport {default as packSiblings} from \"./pack/siblings\";\nexport {default as packEnclose} from \"./pack/enclose\";\nexport {default as partition} from \"./partition\";\nexport {default as stratify} from \"./stratify\";\nexport {default as tree} from \"./tree\";\nexport {default as treemap} from \"./treemap/index\";\nexport {default as treemapBinary} from \"./treemap/binary\";\nexport {default as treemapDice} from \"./treemap/dice\";\nexport {default as treemapSlice} from \"./treemap/slice\";\nexport {default as treemapSliceDice} from \"./treemap/sliceDice\";\nexport {default as treemapSquarify} from \"./treemap/squarify\";\nexport {default as treemapResquarify} from \"./treemap/resquarify\";\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export {default as polygonArea} from \"./area\";\nexport {default as polygonCentroid} from \"./centroid\";\nexport {default as polygonHull} from \"./hull\";\nexport {default as polygonContains} from \"./contains\";\nexport {default as polygonLength} from \"./length\";\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","export {default as randomUniform} from \"./uniform\";\nexport {default as randomNormal} from \"./normal\";\nexport {default as randomLogNormal} from \"./logNormal\";\nexport {default as randomBates} from \"./bates\";\nexport {default as randomIrwinHall} from \"./irwinHall\";\nexport {default as randomExponential} from \"./exponential\";\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity(domain) {\n  var unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return identity(domain).unknown(unknown);\n  };\n\n  domain = arguments.length ? map.call(domain, number) : [0, 1];\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport nice from \"./nice\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformLog(x) {\n  return Math.log(x);\n}\n\nfunction transformExp(x) {\n  return Math.exp(x);\n}\n\nfunction transformLogn(x) {\n  return -Math.log(-x);\n}\n\nfunction transformExpn(x) {\n  return -Math.exp(-x);\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport function loggish(transform) {\n  var scale = transform(transformLog, transformExp),\n      domain = scale.domain,\n      base = 10,\n      logs,\n      pows;\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) {\n      logs = reflect(logs), pows = reflect(pows);\n      transform(transformLogn, transformExpn);\n    } else {\n      transform(transformLog, transformExp);\n    }\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  return scale;\n}\n\nexport default function log() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, log()).base(scale.base());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {linearish} from \"./linear\";\nimport {copy, identity, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformPow(exponent) {\n  return function(x) {\n    return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n  };\n}\n\nfunction transformSqrt(x) {\n  return x < 0 ? -Math.sqrt(-x) : Math.sqrt(x);\n}\n\nfunction transformSquare(x) {\n  return x < 0 ? -x * x : x * x;\n}\n\nexport function powish(transform) {\n  var scale = transform(identity, identity),\n      exponent = 1;\n\n  function rescale() {\n    return exponent === 1 ? transform(identity, identity)\n        : exponent === 0.5 ? transform(transformSqrt, transformSquare)\n        : transform(transformPow(exponent), transformPow(1 / exponent));\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, rescale()) : exponent;\n  };\n\n  return linearish(scale);\n}\n\nexport default function pow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, pow()).exponent(scale.exponent());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n\nexport function sqrt() {\n  return pow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [],\n      unknown;\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\nimport {initRange} from \"./init\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1],\n      unknown;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : scale;\n  };\n\n  scale.thresholds = function() {\n    return domain.slice();\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(linearish(scale), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(date - date.getMilliseconds());\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationSecond} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute, durationSecond} from \"./duration\";\n\nvar hour = interval(function(date) {\n  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","export {\n  default as timeInterval\n} from \"./interval\";\n\nexport {\n  default as timeMillisecond,\n  milliseconds as timeMilliseconds,\n  default as utcMillisecond,\n  milliseconds as utcMilliseconds\n} from \"./millisecond\";\n\nexport {\n  default as timeSecond,\n  seconds as timeSeconds,\n  default as utcSecond,\n  seconds as utcSeconds\n} from \"./second\";\n\nexport {\n  default as timeMinute,\n  minutes as timeMinutes\n} from \"./minute\";\n\nexport {\n  default as timeHour,\n  hours as timeHours\n} from \"./hour\";\n\nexport {\n  default as timeDay,\n  days as timeDays\n} from \"./day\";\n\nexport {\n  sunday as timeWeek,\n  sundays as timeWeeks,\n  sunday as timeSunday,\n  sundays as timeSundays,\n  monday as timeMonday,\n  mondays as timeMondays,\n  tuesday as timeTuesday,\n  tuesdays as timeTuesdays,\n  wednesday as timeWednesday,\n  wednesdays as timeWednesdays,\n  thursday as timeThursday,\n  thursdays as timeThursdays,\n  friday as timeFriday,\n  fridays as timeFridays,\n  saturday as timeSaturday,\n  saturdays as timeSaturdays\n} from \"./week\";\n\nexport {\n  default as timeMonth,\n  months as timeMonths\n} from \"./month\";\n\nexport {\n  default as timeYear,\n  years as timeYears\n} from \"./year\";\n\nexport {\n  default as utcMinute,\n  utcMinutes as utcMinutes\n} from \"./utcMinute\";\n\nexport {\n  default as utcHour,\n  utcHours as utcHours\n} from \"./utcHour\";\n\nexport {\n  default as utcDay,\n  utcDays as utcDays\n} from \"./utcDay\";\n\nexport {\n  utcSunday as utcWeek,\n  utcSundays as utcWeeks,\n  utcSunday as utcSunday,\n  utcSundays as utcSundays,\n  utcMonday as utcMonday,\n  utcMondays as utcMondays,\n  utcTuesday as utcTuesday,\n  utcTuesdays as utcTuesdays,\n  utcWednesday as utcWednesday,\n  utcWednesdays as utcWednesdays,\n  utcThursday as utcThursday,\n  utcThursdays as utcThursdays,\n  utcFriday as utcFriday,\n  utcFridays as utcFridays,\n  utcSaturday as utcSaturday,\n  utcSaturdays as utcSaturdays\n} from \"./utcWeek\";\n\nexport {\n  default as utcMonth,\n  utcMonths as utcMonths\n} from \"./utcMonth\";\n\nexport {\n  default as utcYear,\n  utcYears as utcYears\n} from \"./utcYear\";\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","export {default as timeFormatDefaultLocale, timeFormat, timeParse, utcFormat, utcParse} from \"./defaultLocale\";\nexport {default as timeFormatLocale} from \"./locale\";\nexport {default as isoFormat} from \"./isoFormat\";\nexport {default as isoParse} from \"./isoParse\";\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","import {ascending, bisect} from \"d3-array\";\nimport {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\n\nexport default function sequentialQuantile() {\n  var domain = [],\n      interpolator = identity;\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return interpolator((bisect(domain, x) - 1) / (domain.length - 1));\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return scale;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequentialQuantile(interpolator).domain(domain);\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n","import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {copy} from \"./sequential\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      t0,\n      t1,\n      t2,\n      k10,\n      k21,\n      interpolator = identity,\n      transform,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (x = 0.5 + ((x = +transform(x)) - t1) * (x < t1 ? k10 : k21), interpolator(clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), t2 = transform(x2 = +_[2]), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), t2 = t(x2), k10 = t0 === t1 ? 0 : 0.5 / (t1 - t0), k21 = t1 === t2 ? 0 : 0.5 / (t2 - t1);\n    return scale;\n  };\n}\n\nexport default function diverging() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, diverging());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingLog() {\n  var scale = loggish(transformer()).domain([0.1, 1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, divergingLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, divergingPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function divergingSqrt() {\n  return divergingPow.apply(null, arguments).exponent(0.5);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./band\";\n\nexport {\n  default as scaleIdentity\n} from \"./identity\";\n\nexport {\n  default as scaleLinear\n} from \"./linear\";\n\nexport {\n  default as scaleLog\n} from \"./log\";\n\nexport {\n  default as scaleSymlog\n} from \"./symlog\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./threshold\";\n\nexport {\n  default as scaleTime\n} from \"./time\";\n\nexport {\n  default as scaleUtc\n} from \"./utcTime\";\n\nexport {\n  default as scaleSequential,\n  sequentialLog as scaleSequentialLog,\n  sequentialPow as scaleSequentialPow,\n  sequentialSqrt as scaleSequentialSqrt,\n  sequentialSymlog as scaleSequentialSymlog\n} from \"./sequential\";\n\nexport {\n  default as scaleSequentialQuantile\n} from \"./sequentialQuantile\";\n\nexport {\n  default as scaleDiverging,\n  divergingLog as scaleDivergingLog,\n  divergingPow as scaleDivergingPow,\n  divergingSqrt as scaleDivergingSqrt,\n  divergingSymlog as scaleDivergingSymlog\n} from \"./diverging\";\n\nexport {\n  default as tickFormat\n} from \"./tickFormat\";\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export {default as schemeCategory10} from \"./categorical/category10\";\nexport {default as schemeAccent} from \"./categorical/Accent\";\nexport {default as schemeDark2} from \"./categorical/Dark2\";\nexport {default as schemePaired} from \"./categorical/Paired\";\nexport {default as schemePastel1} from \"./categorical/Pastel1\";\nexport {default as schemePastel2} from \"./categorical/Pastel2\";\nexport {default as schemeSet1} from \"./categorical/Set1\";\nexport {default as schemeSet2} from \"./categorical/Set2\";\nexport {default as schemeSet3} from \"./categorical/Set3\";\nexport {default as interpolateBrBG, scheme as schemeBrBG} from \"./diverging/BrBG\";\nexport {default as interpolatePRGn, scheme as schemePRGn} from \"./diverging/PRGn\";\nexport {default as interpolatePiYG, scheme as schemePiYG} from \"./diverging/PiYG\";\nexport {default as interpolatePuOr, scheme as schemePuOr} from \"./diverging/PuOr\";\nexport {default as interpolateRdBu, scheme as schemeRdBu} from \"./diverging/RdBu\";\nexport {default as interpolateRdGy, scheme as schemeRdGy} from \"./diverging/RdGy\";\nexport {default as interpolateRdYlBu, scheme as schemeRdYlBu} from \"./diverging/RdYlBu\";\nexport {default as interpolateRdYlGn, scheme as schemeRdYlGn} from \"./diverging/RdYlGn\";\nexport {default as interpolateSpectral, scheme as schemeSpectral} from \"./diverging/Spectral\";\nexport {default as interpolateBuGn, scheme as schemeBuGn} from \"./sequential-multi/BuGn\";\nexport {default as interpolateBuPu, scheme as schemeBuPu} from \"./sequential-multi/BuPu\";\nexport {default as interpolateGnBu, scheme as schemeGnBu} from \"./sequential-multi/GnBu\";\nexport {default as interpolateOrRd, scheme as schemeOrRd} from \"./sequential-multi/OrRd\";\nexport {default as interpolatePuBuGn, scheme as schemePuBuGn} from \"./sequential-multi/PuBuGn\";\nexport {default as interpolatePuBu, scheme as schemePuBu} from \"./sequential-multi/PuBu\";\nexport {default as interpolatePuRd, scheme as schemePuRd} from \"./sequential-multi/PuRd\";\nexport {default as interpolateRdPu, scheme as schemeRdPu} from \"./sequential-multi/RdPu\";\nexport {default as interpolateYlGnBu, scheme as schemeYlGnBu} from \"./sequential-multi/YlGnBu\";\nexport {default as interpolateYlGn, scheme as schemeYlGn} from \"./sequential-multi/YlGn\";\nexport {default as interpolateYlOrBr, scheme as schemeYlOrBr} from \"./sequential-multi/YlOrBr\";\nexport {default as interpolateYlOrRd, scheme as schemeYlOrRd} from \"./sequential-multi/YlOrRd\";\nexport {default as interpolateBlues, scheme as schemeBlues} from \"./sequential-single/Blues\";\nexport {default as interpolateGreens, scheme as schemeGreens} from \"./sequential-single/Greens\";\nexport {default as interpolateGreys, scheme as schemeGreys} from \"./sequential-single/Greys\";\nexport {default as interpolatePurples, scheme as schemePurples} from \"./sequential-single/Purples\";\nexport {default as interpolateReds, scheme as schemeReds} from \"./sequential-single/Reds\";\nexport {default as interpolateOranges, scheme as schemeOranges} from \"./sequential-single/Oranges\";\nexport {default as interpolateCubehelixDefault} from \"./sequential-multi/cubehelix\";\nexport {default as interpolateRainbow, warm as interpolateWarm, cool as interpolateCool} from \"./sequential-multi/rainbow\";\nexport {default as interpolateSinebow} from \"./sequential-multi/sinebow\";\nexport {default as interpolateViridis, magma as interpolateMagma, inferno as interpolateInferno, plasma as interpolatePlasma} from \"./sequential-multi/viridis\";\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var peaks = series.map(peak);\n  return none(series).sort(function(a, b) { return peaks[a] - peaks[b]; });\n}\n\nfunction peak(series) {\n  var i = -1, j = 0, n = series.length, vi, vj = -Infinity;\n  while (++i < n) if ((vi = +series[i][1]) > vj) vj = vi, j = i;\n  return j;\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import appearance from \"./appearance\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = appearance(series),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export {default as arc} from \"./arc\";\nexport {default as area} from \"./area\";\nexport {default as line} from \"./line\";\nexport {default as pie} from \"./pie\";\nexport {default as areaRadial, default as radialArea} from \"./areaRadial\"; // Note: radialArea is deprecated!\nexport {default as lineRadial, default as radialLine} from \"./lineRadial\"; // Note: radialLine is deprecated!\nexport {default as pointRadial} from \"./pointRadial\";\nexport {linkHorizontal, linkVertical, linkRadial} from \"./link/index\";\n\nexport {default as symbol, symbols} from \"./symbol\";\nexport {default as symbolCircle} from \"./symbol/circle\";\nexport {default as symbolCross} from \"./symbol/cross\";\nexport {default as symbolDiamond} from \"./symbol/diamond\";\nexport {default as symbolSquare} from \"./symbol/square\";\nexport {default as symbolStar} from \"./symbol/star\";\nexport {default as symbolTriangle} from \"./symbol/triangle\";\nexport {default as symbolWye} from \"./symbol/wye\";\n\nexport {default as curveBasisClosed} from \"./curve/basisClosed\";\nexport {default as curveBasisOpen} from \"./curve/basisOpen\";\nexport {default as curveBasis} from \"./curve/basis\";\nexport {default as curveBundle} from \"./curve/bundle\";\nexport {default as curveCardinalClosed} from \"./curve/cardinalClosed\";\nexport {default as curveCardinalOpen} from \"./curve/cardinalOpen\";\nexport {default as curveCardinal} from \"./curve/cardinal\";\nexport {default as curveCatmullRomClosed} from \"./curve/catmullRomClosed\";\nexport {default as curveCatmullRomOpen} from \"./curve/catmullRomOpen\";\nexport {default as curveCatmullRom} from \"./curve/catmullRom\";\nexport {default as curveLinearClosed} from \"./curve/linearClosed\";\nexport {default as curveLinear} from \"./curve/linear\";\nexport {monotoneX as curveMonotoneX, monotoneY as curveMonotoneY} from \"./curve/monotone\";\nexport {default as curveNatural} from \"./curve/natural\";\nexport {default as curveStep, stepAfter as curveStepAfter, stepBefore as curveStepBefore} from \"./curve/step\";\n\nexport {default as stack} from \"./stack\";\nexport {default as stackOffsetExpand} from \"./offset/expand\";\nexport {default as stackOffsetDiverging} from \"./offset/diverging\";\nexport {default as stackOffsetNone} from \"./offset/none\";\nexport {default as stackOffsetSilhouette} from \"./offset/silhouette\";\nexport {default as stackOffsetWiggle} from \"./offset/wiggle\";\nexport {default as stackOrderAppearance} from \"./order/appearance\";\nexport {default as stackOrderAscending} from \"./order/ascending\";\nexport {default as stackOrderDescending} from \"./order/descending\";\nexport {default as stackOrderInsideOut} from \"./order/insideOut\";\nexport {default as stackOrderNone} from \"./order/none\";\nexport {default as stackOrderReverse} from \"./order/reverse\";\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export {default as voronoi} from \"./voronoi\";\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export {default as zoom} from \"./zoom\";\nexport {default as zoomTransform, identity as zoomIdentity} from \"./transform\";\n","export {version} from \"./dist/package\";\nexport * from \"d3-array\";\nexport * from \"d3-axis\";\nexport * from \"d3-brush\";\nexport * from \"d3-chord\";\nexport * from \"d3-collection\";\nexport * from \"d3-color\";\nexport * from \"d3-contour\";\nexport * from \"d3-dispatch\";\nexport * from \"d3-drag\";\nexport * from \"d3-dsv\";\nexport * from \"d3-ease\";\nexport * from \"d3-fetch\";\nexport * from \"d3-force\";\nexport * from \"d3-format\";\nexport * from \"d3-geo\";\nexport * from \"d3-hierarchy\";\nexport * from \"d3-interpolate\";\nexport * from \"d3-path\";\nexport * from \"d3-polygon\";\nexport * from \"d3-quadtree\";\nexport * from \"d3-random\";\nexport * from \"d3-scale\";\nexport * from \"d3-scale-chromatic\";\nexport * from \"d3-selection\";\nexport * from \"d3-shape\";\nexport * from \"d3-time\";\nexport * from \"d3-time-format\";\nexport * from \"d3-timer\";\nexport * from \"d3-transition\";\nexport * from \"d3-voronoi\";\nexport * from \"d3-zoom\";\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2, n = input.length, output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import transform from \"./transform\";\n\nexport default function(topology) {\n  var t = transform(topology.transform), key,\n      x0 = Infinity, y0 = x0, x1 = -x0, y1 = -x0;\n\n  function bboxPoint(p) {\n    p = t(p);\n    if (p[0] < x0) x0 = p[0];\n    if (p[0] > x1) x1 = p[0];\n    if (p[1] < y0) y0 = p[1];\n    if (p[1] > y1) y1 = p[1];\n  }\n\n  function bboxGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(bboxGeometry); break;\n      case \"Point\": bboxPoint(o.coordinates); break;\n      case \"MultiPoint\": o.coordinates.forEach(bboxPoint); break;\n    }\n  }\n\n  topology.arcs.forEach(function(arc) {\n    var i = -1, n = arc.length, p;\n    while (++i < n) {\n      p = t(arc[i], i);\n      if (p[0] < x0) x0 = p[0];\n      if (p[0] > x1) x1 = p[0];\n      if (p[1] < y0) y0 = p[1];\n      if (p[1] > y1) y1 = p[1];\n    }\n  });\n\n  for (key in topology.objects) {\n    bboxGeometry(topology.objects[key]);\n  }\n\n  return [x0, y0, x1, y1];\n}\n","export default function(array, n) {\n  var t, j = array.length, i = j - n;\n  while (i < --j) t = array[i], array[i++] = array[j], array[j] = t;\n}\n","import reverse from \"./reverse\";\nimport transform from \"./transform\";\n\nexport default function(topology, o) {\n  return o.type === \"GeometryCollection\"\n      ? {type: \"FeatureCollection\", features: o.geometries.map(function(o) { return feature(topology, o); })}\n      : feature(topology, o);\n}\n\nexport function feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {type: \"Feature\", properties: properties, geometry: geometry}\n      : bbox == null ? {type: \"Feature\", id: id, properties: properties, geometry: geometry}\n      : {type: \"Feature\", id: id, bbox: bbox, properties: properties, geometry: geometry};\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n    for (var i = 0, n = arcs.length; i < n; ++i) arc(arcs[i], points);\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n    while (points.length < 4) points.push(points[0]); // This may happen if an arc has only two points.\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type, coordinates;\n    switch (type) {\n      case \"GeometryCollection\": return {type: type, geometries: o.geometries.map(geometry)};\n      case \"Point\": coordinates = point(o.coordinates); break;\n      case \"MultiPoint\": coordinates = o.coordinates.map(point); break;\n      case \"LineString\": coordinates = line(o.arcs); break;\n      case \"MultiLineString\": coordinates = o.arcs.map(line); break;\n      case \"Polygon\": coordinates = polygon(o.arcs); break;\n      case \"MultiPolygon\": coordinates = o.arcs.map(polygon); break;\n      default: return null;\n    }\n    return {type: type, coordinates: coordinates};\n  }\n\n  return geometry(o);\n}\n","export default function(topology, arcs) {\n  var stitchedArcs = {},\n      fragmentByStart = {},\n      fragmentByEnd = {},\n      fragments = [],\n      emptyIndex = -1;\n\n  // Stitch empty arcs first, since they may be subsumed by other arcs.\n  arcs.forEach(function(i, j) {\n    var arc = topology.arcs[i < 0 ? ~i : i], t;\n    if (arc.length < 3 && !arc[1][0] && !arc[1][1]) {\n      t = arcs[++emptyIndex], arcs[emptyIndex] = i, arcs[j] = t;\n    }\n  });\n\n  arcs.forEach(function(i) {\n    var e = ends(i),\n        start = e[0],\n        end = e[1],\n        f, g;\n\n    if (f = fragmentByEnd[start]) {\n      delete fragmentByEnd[f.end];\n      f.push(i);\n      f.end = end;\n      if (g = fragmentByStart[end]) {\n        delete fragmentByStart[g.start];\n        var fg = g === f ? f : f.concat(g);\n        fragmentByStart[fg.start = f.start] = fragmentByEnd[fg.end = g.end] = fg;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else if (f = fragmentByStart[end]) {\n      delete fragmentByStart[f.start];\n      f.unshift(i);\n      f.start = start;\n      if (g = fragmentByEnd[start]) {\n        delete fragmentByEnd[g.end];\n        var gf = g === f ? f : g.concat(f);\n        fragmentByStart[gf.start = g.start] = fragmentByEnd[gf.end = f.end] = gf;\n      } else {\n        fragmentByStart[f.start] = fragmentByEnd[f.end] = f;\n      }\n    } else {\n      f = [i];\n      fragmentByStart[f.start = start] = fragmentByEnd[f.end = end] = f;\n    }\n  });\n\n  function ends(i) {\n    var arc = topology.arcs[i < 0 ? ~i : i], p0 = arc[0], p1;\n    if (topology.transform) p1 = [0, 0], arc.forEach(function(dp) { p1[0] += dp[0], p1[1] += dp[1]; });\n    else p1 = arc[arc.length - 1];\n    return i < 0 ? [p1, p0] : [p0, p1];\n  }\n\n  function flush(fragmentByEnd, fragmentByStart) {\n    for (var k in fragmentByEnd) {\n      var f = fragmentByEnd[k];\n      delete fragmentByStart[f.start];\n      delete f.start;\n      delete f.end;\n      f.forEach(function(i) { stitchedArcs[i < 0 ? ~i : i] = 1; });\n      fragments.push(f);\n    }\n  }\n\n  flush(fragmentByEnd, fragmentByStart);\n  flush(fragmentByStart, fragmentByEnd);\n  arcs.forEach(function(i) { if (!stitchedArcs[i < 0 ? ~i : i]) fragments.push([i]); });\n\n  return fragments;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nexport default function(topology) {\n  return object(topology, meshArcs.apply(this, arguments));\n}\n\nexport function meshArcs(topology, object, filter) {\n  var arcs, i, n;\n  if (arguments.length > 1) arcs = extractArcs(topology, object, filter);\n  else for (i = 0, arcs = new Array(n = topology.arcs.length); i < n; ++i) arcs[i] = i;\n  return {type: \"MultiLineString\", arcs: stitch(topology, arcs)};\n}\n\nfunction extractArcs(topology, object, filter) {\n  var arcs = [],\n      geomsByArc = [],\n      geom;\n\n  function extract0(i) {\n    var j = i < 0 ? ~i : i;\n    (geomsByArc[j] || (geomsByArc[j] = [])).push({i: i, g: geom});\n  }\n\n  function extract1(arcs) {\n    arcs.forEach(extract0);\n  }\n\n  function extract2(arcs) {\n    arcs.forEach(extract1);\n  }\n\n  function extract3(arcs) {\n    arcs.forEach(extract2);\n  }\n\n  function geometry(o) {\n    switch (geom = o, o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"LineString\": extract1(o.arcs); break;\n      case \"MultiLineString\": case \"Polygon\": extract2(o.arcs); break;\n      case \"MultiPolygon\": extract3(o.arcs); break;\n    }\n  }\n\n  geometry(object);\n\n  geomsByArc.forEach(filter == null\n      ? function(geoms) { arcs.push(geoms[0].i); }\n      : function(geoms) { if (filter(geoms[0].g, geoms[geoms.length - 1].g)) arcs.push(geoms[0].i); });\n\n  return arcs;\n}\n","import {object} from \"./feature\";\nimport stitch from \"./stitch\";\n\nfunction planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area); // Note: doubled area!\n}\n\nexport default function(topology) {\n  return object(topology, mergeArcs.apply(this, arguments));\n}\n\nexport function mergeArcs(topology, objects) {\n  var polygonsByArc = {},\n      polygons = [],\n      groups = [];\n\n  objects.forEach(geometry);\n\n  function geometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(geometry); break;\n      case \"Polygon\": extract(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(extract); break;\n    }\n  }\n\n  function extract(polygon) {\n    polygon.forEach(function(ring) {\n      ring.forEach(function(arc) {\n        (polygonsByArc[arc = arc < 0 ? ~arc : arc] || (polygonsByArc[arc] = [])).push(polygon);\n      });\n    });\n    polygons.push(polygon);\n  }\n\n  function area(ring) {\n    return planarRingArea(object(topology, {type: \"Polygon\", arcs: [ring]}).coordinates[0]);\n  }\n\n  polygons.forEach(function(polygon) {\n    if (!polygon._) {\n      var group = [],\n          neighbors = [polygon];\n      polygon._ = 1;\n      groups.push(group);\n      while (polygon = neighbors.pop()) {\n        group.push(polygon);\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            polygonsByArc[arc < 0 ? ~arc : arc].forEach(function(polygon) {\n              if (!polygon._) {\n                polygon._ = 1;\n                neighbors.push(polygon);\n              }\n            });\n          });\n        });\n      }\n    }\n  });\n\n  polygons.forEach(function(polygon) {\n    delete polygon._;\n  });\n\n  return {\n    type: \"MultiPolygon\",\n    arcs: groups.map(function(polygons) {\n      var arcs = [], n;\n\n      // Extract the exterior (unique) arcs.\n      polygons.forEach(function(polygon) {\n        polygon.forEach(function(ring) {\n          ring.forEach(function(arc) {\n            if (polygonsByArc[arc < 0 ? ~arc : arc].length < 2) {\n              arcs.push(arc);\n            }\n          });\n        });\n      });\n\n      // Stitch the arcs into one or more rings.\n      arcs = stitch(topology, arcs);\n\n      // If more than one ring is returned,\n      // at most one of these rings can be the exterior;\n      // choose the one with the greatest absolute area.\n      if ((n = arcs.length) > 1) {\n        for (var i = 1, k = area(arcs[0]), ki, t; i < n; ++i) {\n          if ((ki = area(arcs[i])) > k) {\n            t = arcs[0], arcs[0] = arcs[i], arcs[i] = t, k = ki;\n          }\n        }\n      }\n\n      return arcs;\n    })\n  };\n}\n","export default function(a, x) {\n  var lo = 0, hi = a.length;\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;\n    else hi = mid;\n  }\n  return lo;\n}\n","import bisect from \"./bisect\";\n\nexport default function(objects) {\n  var indexesByArc = {}, // arc index -> array of object indexes\n      neighbors = objects.map(function() { return []; });\n\n  function line(arcs, i) {\n    arcs.forEach(function(a) {\n      if (a < 0) a = ~a;\n      var o = indexesByArc[a];\n      if (o) o.push(i);\n      else indexesByArc[a] = [i];\n    });\n  }\n\n  function polygon(arcs, i) {\n    arcs.forEach(function(arc) { line(arc, i); });\n  }\n\n  function geometry(o, i) {\n    if (o.type === \"GeometryCollection\") o.geometries.forEach(function(o) { geometry(o, i); });\n    else if (o.type in geometryType) geometryType[o.type](o.arcs, i);\n  }\n\n  var geometryType = {\n    LineString: line,\n    MultiLineString: polygon,\n    Polygon: polygon,\n    MultiPolygon: function(arcs, i) { arcs.forEach(function(arc) { polygon(arc, i); }); }\n  };\n\n  objects.forEach(geometry);\n\n  for (var i in indexesByArc) {\n    for (var indexes = indexesByArc[i], m = indexes.length, j = 0; j < m; ++j) {\n      for (var k = j + 1; k < m; ++k) {\n        var ij = indexes[j], ik = indexes[k], n;\n        if ((n = neighbors[ij])[i = bisect(n, ik)] !== ik) n.splice(i, 0, ik);\n        if ((n = neighbors[ik])[i = bisect(n, ij)] !== ij) n.splice(i, 0, ij);\n      }\n    }\n  }\n\n  return neighbors;\n}\n","import identity from \"./identity\";\n\nexport default function(transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function(input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n),\n        x1 = Math.round((input[0] - dx) / kx),\n        y1 = Math.round((input[1] - dy) / ky);\n    output[0] = x1 - x0, x0 = x1;\n    output[1] = y1 - y0, y0 = y1;\n    while (j < n) output[j] = input[j], ++j;\n    return output;\n  };\n}\n","import bbox from \"./bbox\";\nimport untransform from \"./untransform\";\n\nexport default function(topology, transform) {\n  if (topology.transform) throw new Error(\"already quantized\");\n\n  if (!transform || !transform.scale) {\n    if (!((n = Math.floor(transform)) >= 2)) throw new Error(\"n must be ≥2\");\n    box = topology.bbox || bbox(topology);\n    var x0 = box[0], y0 = box[1], x1 = box[2], y1 = box[3], n;\n    transform = {scale: [x1 - x0 ? (x1 - x0) / (n - 1) : 1, y1 - y0 ? (y1 - y0) / (n - 1) : 1], translate: [x0, y0]};\n  } else {\n    box = topology.bbox;\n  }\n\n  var t = untransform(transform), box, key, inputs = topology.objects, outputs = {};\n\n  function quantizePoint(point) {\n    return t(point);\n  }\n\n  function quantizeGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: \"MultiPoint\", coordinates: input.coordinates.map(quantizePoint)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function quantizeArc(input) {\n    var i = 0, j = 1, n = input.length, p, output = new Array(n); // pessimistic\n    output[0] = t(input[0], 0);\n    while (++i < n) if ((p = t(input[i], i))[0] || p[1]) output[j++] = p; // non-coincident points\n    if (j === 1) output[j++] = [0, 0]; // an arc must have at least two points\n    output.length = j;\n    return output;\n  }\n\n  for (key in inputs) outputs[key] = quantizeGeometry(inputs[key]);\n\n  return {\n    type: \"Topology\",\n    bbox: box,\n    transform: transform,\n    objects: outputs,\n    arcs: topology.arcs.map(quantizeArc)\n  };\n}\n","export {default as bbox} from \"./src/bbox\";\nexport {default as feature} from \"./src/feature\";\nexport {default as mesh, meshArcs} from \"./src/mesh\";\nexport {default as merge, mergeArcs} from \"./src/merge\";\nexport {default as neighbors} from \"./src/neighbors\";\nexport {default as quantize} from \"./src/quantize\";\nexport {default as transform} from \"./src/transform\";\nexport {default as untransform} from \"./src/untransform\";\n","// Computes the bounding box of the specified hash of GeoJSON objects.\nexport default function(objects) {\n  var x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  function boundGeometry(geometry) {\n    if (geometry != null && boundGeometryType.hasOwnProperty(geometry.type)) boundGeometryType[geometry.type](geometry);\n  }\n\n  var boundGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(boundGeometry); },\n    Point: function(o) { boundPoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates.forEach(boundPoint); },\n    LineString: function(o) { boundLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs.forEach(boundLine); },\n    Polygon: function(o) { o.arcs.forEach(boundLine); },\n    MultiPolygon: function(o) { o.arcs.forEach(boundMultiLine); }\n  };\n\n  function boundPoint(coordinates) {\n    var x = coordinates[0],\n        y = coordinates[1];\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  function boundLine(coordinates) {\n    coordinates.forEach(boundPoint);\n  }\n\n  function boundMultiLine(coordinates) {\n    coordinates.forEach(boundLine);\n  }\n\n  for (var key in objects) {\n    boundGeometry(objects[key]);\n  }\n\n  return x1 >= x0 && y1 >= y0 ? [x0, y0, x1, y1] : undefined;\n}\n","export default function(size, hash, equal, type, empty) {\n  if (arguments.length === 3) {\n    type = Array;\n    empty = null;\n  }\n\n  var store = new type(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    store[i] = empty;\n  }\n\n  function add(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) throw new Error(\"full hashset\");\n      match = store[index = (index + 1) & mask];\n    }\n    store[index] = value;\n    return true;\n  }\n\n  function has(value) {\n    var index = hash(value) & mask,\n        match = store[index],\n        collisions = 0;\n    while (match != empty) {\n      if (equal(match, value)) return true;\n      if (++collisions >= size) break;\n      match = store[index = (index + 1) & mask];\n    }\n    return false;\n  }\n\n  function values() {\n    var values = [];\n    for (var i = 0, n = store.length; i < n; ++i) {\n      var match = store[i];\n      if (match != empty) values.push(match);\n    }\n    return values;\n  }\n\n  return {\n    add: add,\n    has: has,\n    values: values\n  };\n}\n","export default function(size, hash, equal, keyType, keyEmpty, valueType) {\n  if (arguments.length === 3) {\n    keyType = valueType = Array;\n    keyEmpty = null;\n  }\n\n  var keystore = new keyType(size = 1 << Math.max(4, Math.ceil(Math.log(size) / Math.LN2))),\n      valstore = new valueType(size),\n      mask = size - 1;\n\n  for (var i = 0; i < size; ++i) {\n    keystore[i] = keyEmpty;\n  }\n\n  function set(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index] = value;\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function maybeSet(key, value) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) throw new Error(\"full hashmap\");\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    keystore[index] = key;\n    valstore[index] = value;\n    return value;\n  }\n\n  function get(key, missingValue) {\n    var index = hash(key) & mask,\n        matchKey = keystore[index],\n        collisions = 0;\n    while (matchKey != keyEmpty) {\n      if (equal(matchKey, key)) return valstore[index];\n      if (++collisions >= size) break;\n      matchKey = keystore[index = (index + 1) & mask];\n    }\n    return missingValue;\n  }\n\n  function keys() {\n    var keys = [];\n    for (var i = 0, n = keystore.length; i < n; ++i) {\n      var matchKey = keystore[i];\n      if (matchKey != keyEmpty) keys.push(matchKey);\n    }\n    return keys;\n  }\n\n  return {\n    set: set,\n    maybeSet: maybeSet, // set if unset\n    get: get,\n    keys: keys\n  };\n}\n","export default function(pointA, pointB) {\n  return pointA[0] === pointB[0] && pointA[1] === pointB[1];\n}\n","// TODO if quantized, use simpler Int32 hashing?\n\nvar buffer = new ArrayBuffer(16),\n    floats = new Float64Array(buffer),\n    uints = new Uint32Array(buffer);\n\nexport default function(point) {\n  floats[0] = point[0];\n  floats[1] = point[1];\n  var hash = uints[0] ^ uints[1];\n  hash = hash << 5 ^ hash >> 7 ^ uints[2] ^ uints[3];\n  return hash & 0x7fffffff;\n}\n","import hashset from \"./hash/hashset\";\nimport hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given an extracted (pre-)topology, identifies all of the junctions. These are\n// the points at which arcs (lines or rings) will need to be cut so that each\n// arc is represented uniquely.\n//\n// A junction is a point where at least one arc deviates from another arc going\n// through the same point. For example, consider the point B. If there is a arc\n// through ABC and another arc through CBA, then B is not a junction because in\n// both cases the adjacent point pairs are {A,C}. However, if there is an\n// additional arc ABD, then {A,D} != {A,C}, and thus B becomes a junction.\n//\n// For a closed ring ABCA, the first point A’s adjacent points are the second\n// and last point {B,C}. For a line, the first and last point are always\n// considered junctions, even if the line is closed; this ensures that a closed\n// line is never rotated.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      indexes = index(),\n      visitedByIndex = new Int32Array(coordinates.length),\n      leftByIndex = new Int32Array(coordinates.length),\n      rightByIndex = new Int32Array(coordinates.length),\n      junctionByIndex = new Int8Array(coordinates.length),\n      junctionCount = 0, // upper bound on number of junctions\n      i, n,\n      previousIndex,\n      currentIndex,\n      nextIndex;\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = leftByIndex[i] = rightByIndex[i] = -1;\n  }\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineStart = line[0],\n        lineEnd = line[1];\n    currentIndex = indexes[lineStart];\n    nextIndex = indexes[++lineStart];\n    ++junctionCount, junctionByIndex[currentIndex] = 1; // start\n    while (++lineStart <= lineEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[lineStart]);\n    }\n    ++junctionCount, junctionByIndex[nextIndex] = 1; // end\n  }\n\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    visitedByIndex[i] = -1;\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0] + 1,\n        ringEnd = ring[1];\n    previousIndex = indexes[ringEnd - 1];\n    currentIndex = indexes[ringStart - 1];\n    nextIndex = indexes[ringStart];\n    sequence(i, previousIndex, currentIndex, nextIndex);\n    while (++ringStart <= ringEnd) {\n      sequence(i, previousIndex = currentIndex, currentIndex = nextIndex, nextIndex = indexes[ringStart]);\n    }\n  }\n\n  function sequence(i, previousIndex, currentIndex, nextIndex) {\n    if (visitedByIndex[currentIndex] === i) return; // ignore self-intersection\n    visitedByIndex[currentIndex] = i;\n    var leftIndex = leftByIndex[currentIndex];\n    if (leftIndex >= 0) {\n      var rightIndex = rightByIndex[currentIndex];\n      if ((leftIndex !== previousIndex || rightIndex !== nextIndex)\n        && (leftIndex !== nextIndex || rightIndex !== previousIndex)) {\n        ++junctionCount, junctionByIndex[currentIndex] = 1;\n      }\n    } else {\n      leftByIndex[currentIndex] = previousIndex;\n      rightByIndex[currentIndex] = nextIndex;\n    }\n  }\n\n  function index() {\n    var indexByPoint = hashmap(coordinates.length * 1.4, hashIndex, equalIndex, Int32Array, -1, Int32Array),\n        indexes = new Int32Array(coordinates.length);\n\n    for (var i = 0, n = coordinates.length; i < n; ++i) {\n      indexes[i] = indexByPoint.maybeSet(i, i);\n    }\n\n    return indexes;\n  }\n\n  function hashIndex(i) {\n    return hashPoint(coordinates[i]);\n  }\n\n  function equalIndex(i, j) {\n    return equalPoint(coordinates[i], coordinates[j]);\n  }\n\n  visitedByIndex = leftByIndex = rightByIndex = null;\n\n  var junctionByPoint = hashset(junctionCount * 1.4, hashPoint, equalPoint), j;\n\n  // Convert back to a standard hashset by point for caller convenience.\n  for (i = 0, n = coordinates.length; i < n; ++i) {\n    if (junctionByIndex[j = indexes[i]]) {\n      junctionByPoint.add(coordinates[j]);\n    }\n  }\n\n  return junctionByPoint;\n}\n","import join from \"./join\";\n\n// Given an extracted (pre-)topology, cuts (or rotates) arcs so that all shared\n// point sequences are identified. The topology can then be subsequently deduped\n// to remove exact duplicate arcs.\nexport default function(topology) {\n  var junctions = join(topology),\n      coordinates = topology.coordinates,\n      lines = topology.lines,\n      rings = topology.rings,\n      next,\n      i, n;\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    var line = lines[i],\n        lineMid = line[0],\n        lineEnd = line[1];\n    while (++lineMid < lineEnd) {\n      if (junctions.has(coordinates[lineMid])) {\n        next = {0: lineMid, 1: line[1]};\n        line[1] = lineMid;\n        line = line.next = next;\n      }\n    }\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    var ring = rings[i],\n        ringStart = ring[0],\n        ringMid = ringStart,\n        ringEnd = ring[1],\n        ringFixed = junctions.has(coordinates[ringStart]);\n    while (++ringMid < ringEnd) {\n      if (junctions.has(coordinates[ringMid])) {\n        if (ringFixed) {\n          next = {0: ringMid, 1: ring[1]};\n          ring[1] = ringMid;\n          ring = ring.next = next;\n        } else { // For the first junction, we can rotate rather than cut.\n          rotateArray(coordinates, ringStart, ringEnd, ringEnd - ringMid);\n          coordinates[ringEnd] = coordinates[ringStart];\n          ringFixed = true;\n          ringMid = ringStart; // restart; we may have skipped junctions\n        }\n      }\n    }\n  }\n\n  return topology;\n}\n\nfunction rotateArray(array, start, end, offset) {\n  reverse(array, start, end);\n  reverse(array, start, start + offset);\n  reverse(array, start + offset, end);\n}\n\nfunction reverse(array, start, end) {\n  for (var mid = start + ((end-- - start) >> 1), t; start < mid; ++start, --end) {\n    t = array[start], array[start] = array[end], array[end] = t;\n  }\n}\n","import hashmap from \"./hash/hashmap\";\nimport equalPoint from \"./hash/point-equal\";\nimport hashPoint from \"./hash/point-hash\";\n\n// Given a cut topology, combines duplicate arcs.\nexport default function(topology) {\n  var coordinates = topology.coordinates,\n      lines = topology.lines, line,\n      rings = topology.rings, ring,\n      arcCount = lines.length + rings.length,\n      i, n;\n\n  delete topology.lines;\n  delete topology.rings;\n\n  // Count the number of (non-unique) arcs to initialize the hashmap safely.\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i]; while (line = line.next) ++arcCount;\n  }\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i]; while (ring = ring.next) ++arcCount;\n  }\n\n  var arcsByEnd = hashmap(arcCount * 2 * 1.4, hashPoint, equalPoint),\n      arcs = topology.arcs = [];\n\n  for (i = 0, n = lines.length; i < n; ++i) {\n    line = lines[i];\n    do {\n      dedupLine(line);\n    } while (line = line.next);\n  }\n\n  for (i = 0, n = rings.length; i < n; ++i) {\n    ring = rings[i];\n    if (ring.next) { // arc is no longer closed\n      do {\n        dedupLine(ring);\n      } while (ring = ring.next);\n    } else {\n      dedupRing(ring);\n    }\n  }\n\n  function dedupLine(arc) {\n    var startPoint,\n        endPoint,\n        startArcs, startArc,\n        endArcs, endArc,\n        i, n;\n\n    // Does this arc match an existing arc in order?\n    if (startArcs = arcsByEnd.get(startPoint = coordinates[arc[0]])) {\n      for (i = 0, n = startArcs.length; i < n; ++i) {\n        startArc = startArcs[i];\n        if (equalLine(startArc, arc)) {\n          arc[0] = startArc[0];\n          arc[1] = startArc[1];\n          return;\n        }\n      }\n    }\n\n    // Does this arc match an existing arc in reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[1]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (reverseEqualLine(endArc, arc)) {\n          arc[1] = endArc[0];\n          arc[0] = endArc[1];\n          return;\n        }\n      }\n    }\n\n    if (startArcs) startArcs.push(arc); else arcsByEnd.set(startPoint, [arc]);\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function dedupRing(arc) {\n    var endPoint,\n        endArcs,\n        endArc,\n        i, n;\n\n    // Does this arc match an existing line in order, or reverse order?\n    // Rings are closed, so their start point and end point is the same.\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0]])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    // Otherwise, does this arc match an existing ring in order, or reverse order?\n    if (endArcs = arcsByEnd.get(endPoint = coordinates[arc[0] + findMinimumOffset(arc)])) {\n      for (i = 0, n = endArcs.length; i < n; ++i) {\n        endArc = endArcs[i];\n        if (equalRing(endArc, arc)) {\n          arc[0] = endArc[0];\n          arc[1] = endArc[1];\n          return;\n        }\n        if (reverseEqualRing(endArc, arc)) {\n          arc[0] = endArc[1];\n          arc[1] = endArc[0];\n          return;\n        }\n      }\n    }\n\n    if (endArcs) endArcs.push(arc); else arcsByEnd.set(endPoint, [arc]);\n    arcs.push(arc);\n  }\n\n  function equalLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, ++ib) if (!equalPoint(coordinates[ia], coordinates[ib])) return false;\n    return true;\n  }\n\n  function reverseEqualLine(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1];\n    if (ia - ja !== ib - jb) return false;\n    for (; ia <= ja; ++ia, --jb) if (!equalPoint(coordinates[ia], coordinates[jb])) return false;\n    return true;\n  }\n\n  function equalRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[ib + (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  function reverseEqualRing(arcA, arcB) {\n    var ia = arcA[0], ib = arcB[0],\n        ja = arcA[1], jb = arcB[1],\n        n = ja - ia;\n    if (n !== jb - ib) return false;\n    var ka = findMinimumOffset(arcA),\n        kb = n - findMinimumOffset(arcB);\n    for (var i = 0; i < n; ++i) {\n      if (!equalPoint(coordinates[ia + (i + ka) % n], coordinates[jb - (i + kb) % n])) return false;\n    }\n    return true;\n  }\n\n  // Rings are rotated to a consistent, but arbitrary, start point.\n  // This is necessary to detect when a ring and a rotated copy are dupes.\n  function findMinimumOffset(arc) {\n    var start = arc[0],\n        end = arc[1],\n        mid = start,\n        minimum = mid,\n        minimumPoint = coordinates[mid];\n    while (++mid < end) {\n      var point = coordinates[mid];\n      if (point[0] < minimumPoint[0] || point[0] === minimumPoint[0] && point[1] < minimumPoint[1]) {\n        minimum = mid;\n        minimumPoint = point;\n      }\n    }\n    return minimum - start;\n  }\n\n  return topology;\n}\n","// Given an array of arcs in absolute (but already quantized!) coordinates,\n// converts to fixed-point delta encoding.\n// This is a destructive operation that modifies the given arcs!\nexport default function(arcs) {\n  var i = -1,\n      n = arcs.length;\n\n  while (++i < n) {\n    var arc = arcs[i],\n        j = 0,\n        k = 1,\n        m = arc.length,\n        point = arc[0],\n        x0 = point[0],\n        y0 = point[1],\n        x1,\n        y1;\n\n    while (++j < m) {\n      point = arc[j], x1 = point[0], y1 = point[1];\n      if (x1 !== x0 || y1 !== y0) arc[k++] = [x1 - x0, y1 - y0], x0 = x1, y0 = y1;\n    }\n\n    if (k === 1) arc[k++] = [0, 0]; // Each arc must be an array of two or more positions.\n\n    arc.length = k;\n  }\n\n  return arcs;\n}\n","// Extracts the lines and rings from the specified hash of geometry objects.\n//\n// Returns an object with three properties:\n//\n// * coordinates - shared buffer of [x, y] coordinates\n// * lines - lines extracted from the hash, of the form [start, end]\n// * rings - rings extracted from the hash, of the form [start, end]\n//\n// For each ring or line, start and end represent inclusive indexes into the\n// coordinates buffer. For rings (and closed lines), coordinates[start] equals\n// coordinates[end].\n//\n// For each line or polygon geometry in the input hash, including nested\n// geometries as in geometry collections, the `coordinates` array is replaced\n// with an equivalent `arcs` array that, for each line (for line string\n// geometries) or ring (for polygon geometries), points to one of the above\n// lines or rings.\nexport default function(objects) {\n  var index = -1,\n      lines = [],\n      rings = [],\n      coordinates = [];\n\n  function extractGeometry(geometry) {\n    if (geometry && extractGeometryType.hasOwnProperty(geometry.type)) extractGeometryType[geometry.type](geometry);\n  }\n\n  var extractGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(extractGeometry); },\n    LineString: function(o) { o.arcs = extractLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(extractLine); },\n    Polygon: function(o) { o.arcs = o.arcs.map(extractRing); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(extractMultiRing); }\n  };\n\n  function extractLine(line) {\n    for (var i = 0, n = line.length; i < n; ++i) coordinates[++index] = line[i];\n    var arc = {0: index - n + 1, 1: index};\n    lines.push(arc);\n    return arc;\n  }\n\n  function extractRing(ring) {\n    for (var i = 0, n = ring.length; i < n; ++i) coordinates[++index] = ring[i];\n    var arc = {0: index - n + 1, 1: index};\n    rings.push(arc);\n    return arc;\n  }\n\n  function extractMultiRing(rings) {\n    return rings.map(extractRing);\n  }\n\n  for (var key in objects) {\n    extractGeometry(objects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    coordinates: coordinates,\n    lines: lines,\n    rings: rings,\n    objects: objects\n  };\n}\n","// Given a hash of GeoJSON objects, returns a hash of GeoJSON geometry objects.\n// Any null input geometry objects are represented as {type: null} in the output.\n// Any feature.{id,properties,bbox} are transferred to the output geometry object.\n// Each output geometry object is a shallow copy of the input (e.g., properties, coordinates)!\nexport default function(inputs) {\n  var outputs = {}, key;\n  for (key in inputs) outputs[key] = geomifyObject(inputs[key]);\n  return outputs;\n}\n\nfunction geomifyObject(input) {\n  return input == null ? {type: null}\n      : (input.type === \"FeatureCollection\" ? geomifyFeatureCollection\n      : input.type === \"Feature\" ? geomifyFeature\n      : geomifyGeometry)(input);\n}\n\nfunction geomifyFeatureCollection(input) {\n  var output = {type: \"GeometryCollection\", geometries: input.features.map(geomifyFeature)};\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nfunction geomifyFeature(input) {\n  var output = geomifyGeometry(input.geometry), key; // eslint-disable-line no-unused-vars\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  for (key in input.properties) { output.properties = input.properties; break; }\n  return output;\n}\n\nfunction geomifyGeometry(input) {\n  if (input == null) return {type: null};\n  var output = input.type === \"GeometryCollection\" ? {type: \"GeometryCollection\", geometries: input.geometries.map(geomifyGeometry)}\n      : input.type === \"Point\" || input.type === \"MultiPoint\" ? {type: input.type, coordinates: input.coordinates}\n      : {type: input.type, arcs: input.coordinates}; // TODO Check for unknown types?\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n","export default function(objects, bbox, n) {\n  var x0 = bbox[0],\n      y0 = bbox[1],\n      x1 = bbox[2],\n      y1 = bbox[3],\n      kx = x1 - x0 ? (n - 1) / (x1 - x0) : 1,\n      ky = y1 - y0 ? (n - 1) / (y1 - y0) : 1;\n\n  function quantizePoint(input) {\n    return [Math.round((input[0] - x0) * kx), Math.round((input[1] - y0) * ky)];\n  }\n\n  function quantizePoints(input, m) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        pi,\n        px,\n        py,\n        x,\n        y;\n\n    while (++i < n) {\n      pi = input[i];\n      x = Math.round((pi[0] - x0) * kx);\n      y = Math.round((pi[1] - y0) * ky);\n      if (x !== px || y !== py) output[j++] = [px = x, py = y]; // non-coincident points\n    }\n\n    output.length = j;\n    while (j < m) j = output.push([output[0][0], output[0][1]]);\n    return output;\n  }\n\n  function quantizeLine(input) {\n    return quantizePoints(input, 2);\n  }\n\n  function quantizeRing(input) {\n    return quantizePoints(input, 4);\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizeRing);\n  }\n\n  function quantizeGeometry(o) {\n    if (o != null && quantizeGeometryType.hasOwnProperty(o.type)) quantizeGeometryType[o.type](o);\n  }\n\n  var quantizeGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(quantizeGeometry); },\n    Point: function(o) { o.coordinates = quantizePoint(o.coordinates); },\n    MultiPoint: function(o) { o.coordinates = o.coordinates.map(quantizePoint); },\n    LineString: function(o) { o.arcs = quantizeLine(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(quantizeLine); },\n    Polygon: function(o) { o.arcs = quantizePolygon(o.arcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(quantizePolygon); }\n  };\n\n  for (var key in objects) {\n    quantizeGeometry(objects[key]);\n  }\n\n  return {\n    scale: [1 / kx, 1 / ky],\n    translate: [x0, y0]\n  };\n}\n","import bounds from \"./bounds\";\nimport cut from \"./cut\";\nimport dedup from \"./dedup\";\nimport delta from \"./delta\";\nimport extract from \"./extract\";\nimport geometry from \"./geometry\";\nimport hashmap from \"./hash/hashmap\";\nimport prequantize from \"./prequantize\";\n\n// Constructs the TopoJSON Topology for the specified hash of features.\n// Each object in the specified hash must be a GeoJSON object,\n// meaning FeatureCollection, a Feature or a geometry object.\nexport default function(objects, quantization) {\n  var bbox = bounds(objects = geometry(objects)),\n      transform = quantization > 0 && bbox && prequantize(objects, bbox, quantization),\n      topology = dedup(cut(extract(objects))),\n      coordinates = topology.coordinates,\n      indexByArc = hashmap(topology.arcs.length * 1.4, hashArc, equalArc);\n\n  objects = topology.objects; // for garbage collection\n  topology.bbox = bbox;\n  topology.arcs = topology.arcs.map(function(arc, i) {\n    indexByArc.set(arc, i);\n    return coordinates.slice(arc[0], arc[1] + 1);\n  });\n\n  delete topology.coordinates;\n  coordinates = null;\n\n  function indexGeometry(geometry) {\n    if (geometry && indexGeometryType.hasOwnProperty(geometry.type)) indexGeometryType[geometry.type](geometry);\n  }\n\n  var indexGeometryType = {\n    GeometryCollection: function(o) { o.geometries.forEach(indexGeometry); },\n    LineString: function(o) { o.arcs = indexArcs(o.arcs); },\n    MultiLineString: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    Polygon: function(o) { o.arcs = o.arcs.map(indexArcs); },\n    MultiPolygon: function(o) { o.arcs = o.arcs.map(indexMultiArcs); }\n  };\n\n  function indexArcs(arc) {\n    var indexes = [];\n    do {\n      var index = indexByArc.get(arc);\n      indexes.push(arc[0] < arc[1] ? index : ~index);\n    } while (arc = arc.next);\n    return indexes;\n  }\n\n  function indexMultiArcs(arcs) {\n    return arcs.map(indexArcs);\n  }\n\n  for (var key in objects) {\n    indexGeometry(objects[key]);\n  }\n\n  if (transform) {\n    topology.transform = transform;\n    topology.arcs = delta(topology.arcs);\n  }\n\n  return topology;\n}\n\nfunction hashArc(arc) {\n  var i = arc[0], j = arc[1], t;\n  if (j < i) t = i, i = j, j = t;\n  return i + 31 * j;\n}\n\nfunction equalArc(arcA, arcB) {\n  var ia = arcA[0], ja = arcA[1],\n      ib = arcB[0], jb = arcB[1], t;\n  if (ja < ia) t = ia, ia = ja, ja = t;\n  if (jb < ib) t = ib, ib = jb, jb = t;\n  return ia === ib && ja === jb;\n}\n","export {default as topology} from \"./src/topology\";\n","export default function(topology) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      oldArcs = topology.arcs,\n      oldArcsLength = oldArcs.length,\n      oldIndex = -1,\n      newIndexByOldIndex = new Array(oldArcsLength),\n      newArcsLength = 0,\n      newArcs,\n      newIndex = -1,\n      key;\n\n  function scanGeometry(input) {\n    switch (input.type) {\n      case \"GeometryCollection\": input.geometries.forEach(scanGeometry); break;\n      case \"LineString\": scanArcs(input.arcs); break;\n      case \"MultiLineString\": input.arcs.forEach(scanArcs); break;\n      case \"Polygon\": input.arcs.forEach(scanArcs); break;\n      case \"MultiPolygon\": input.arcs.forEach(scanMultiArcs); break;\n    }\n  }\n\n  function scanArc(index) {\n    if (index < 0) index = ~index;\n    if (!newIndexByOldIndex[index]) newIndexByOldIndex[index] = 1, ++newArcsLength;\n  }\n\n  function scanArcs(arcs) {\n    arcs.forEach(scanArc);\n  }\n\n  function scanMultiArcs(arcs) {\n    arcs.forEach(scanArcs);\n  }\n\n  function reindexGeometry(input) {\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(reindexGeometry)}; break;\n      case \"LineString\": output = {type: \"LineString\", arcs: reindexArcs(input.arcs)}; break;\n      case \"MultiLineString\": output = {type: \"MultiLineString\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"Polygon\": output = {type: \"Polygon\", arcs: input.arcs.map(reindexArcs)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", arcs: input.arcs.map(reindexMultiArcs)}; break;\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function reindexArc(oldIndex) {\n    return oldIndex < 0 ? ~newIndexByOldIndex[~oldIndex] : newIndexByOldIndex[oldIndex];\n  }\n\n  function reindexArcs(arcs) {\n    return arcs.map(reindexArc);\n  }\n\n  function reindexMultiArcs(arcs) {\n    return arcs.map(reindexArcs);\n  }\n\n  for (key in oldObjects) {\n    scanGeometry(oldObjects[key]);\n  }\n\n  newArcs = new Array(newArcsLength);\n\n  while (++oldIndex < oldArcsLength) {\n    if (newIndexByOldIndex[oldIndex]) {\n      newIndexByOldIndex[oldIndex] = ++newIndex;\n      newArcs[newIndex] = oldArcs[oldIndex];\n    }\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = reindexGeometry(oldObjects[key]);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: newArcs\n  };\n}\n","import prune from \"./prune\";\n\nexport default function(topology, filter) {\n  var oldObjects = topology.objects,\n      newObjects = {},\n      key;\n\n  if (filter == null) filter = filterTrue;\n\n  function filterGeometry(input) {\n    var output, arcs;\n    switch (input.type) {\n      case \"Polygon\": {\n        arcs = filterRings(input.arcs);\n        output = arcs ? {type: \"Polygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"MultiPolygon\": {\n        arcs = input.arcs.map(filterRings).filter(filterIdentity);\n        output = arcs.length ? {type: \"MultiPolygon\", arcs: arcs} : {type: null};\n        break;\n      }\n      case \"GeometryCollection\": {\n        arcs = input.geometries.map(filterGeometry).filter(filterNotNull);\n        output = arcs.length ? {type: \"GeometryCollection\", geometries: arcs} : {type: null};\n        break;\n      }\n      default: return input;\n    }\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    if (input.properties != null) output.properties = input.properties;\n    return output;\n  }\n\n  function filterRings(arcs) {\n    return arcs.length && filterExteriorRing(arcs[0]) // if the exterior is small, ignore any holes\n        ? [arcs[0]].concat(arcs.slice(1).filter(filterInteriorRing))\n        : null;\n  }\n\n  function filterExteriorRing(ring) {\n    return filter(ring, false);\n  }\n\n  function filterInteriorRing(ring) {\n    return filter(ring, true);\n  }\n\n  for (key in oldObjects) {\n    newObjects[key] = filterGeometry(oldObjects[key]);\n  }\n\n  return prune({\n    type: \"Topology\",\n    bbox: topology.bbox,\n    transform: topology.transform,\n    objects: newObjects,\n    arcs: topology.arcs\n  });\n}\n\nfunction filterTrue() {\n  return true;\n}\n\nfunction filterIdentity(x) {\n  return x;\n}\n\nfunction filterNotNull(geometry) {\n  return geometry.type != null;\n}\n","export default function(topology) {\n  var ownerByArc = new Array(topology.arcs.length), // arc index -> index of unique associated ring, or -1 if used by multiple rings\n      ownerIndex = 0,\n      key;\n\n  function testGeometry(o) {\n    switch (o.type) {\n      case \"GeometryCollection\": o.geometries.forEach(testGeometry); break;\n      case \"Polygon\": testArcs(o.arcs); break;\n      case \"MultiPolygon\": o.arcs.forEach(testArcs); break;\n    }\n  }\n\n  function testArcs(arcs) {\n    for (var i = 0, n = arcs.length; i < n; ++i, ++ownerIndex) {\n      for (var ring = arcs[i], j = 0, m = ring.length; j < m; ++j) {\n        var arc = ring[j];\n        if (arc < 0) arc = ~arc;\n        var owner = ownerByArc[arc];\n        if (owner == null) ownerByArc[arc] = ownerIndex;\n        else if (owner !== ownerIndex) ownerByArc[arc] = -1;\n      }\n    }\n  }\n\n  for (key in topology.objects) {\n    testGeometry(topology.objects[key]);\n  }\n\n  return function(ring) {\n    for (var j = 0, m = ring.length, arc; j < m; ++j) {\n      if (ownerByArc[(arc = ring[j]) < 0 ? ~arc : arc] === -1) {\n        return true;\n      }\n    }\n    return false;\n  };\n}\n","export function planarTriangleArea(triangle) {\n  var a = triangle[0], b = triangle[1], c = triangle[2];\n  return Math.abs((a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1])) / 2;\n}\n\nexport function planarRingArea(ring) {\n  var i = -1, n = ring.length, a, b = ring[n - 1], area = 0;\n  while (++i < n) a = b, b = ring[i], area += a[0] * b[1] - a[1] * b[0];\n  return Math.abs(area) / 2;\n}\n","import {feature} from \"topojson-client\";\nimport {planarRingArea} from \"./planar\";\n\nexport default function(topology, minWeight, weight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  if (weight == null) weight = planarRingArea;\n\n  return function(ring, interior) {\n    return weight(feature(topology, {type: \"Polygon\", arcs: [ring]}).geometry.coordinates[0], interior) >= minWeight;\n  };\n}\n","import filterAttached from \"./filterAttached\";\nimport filterWeight from \"./filterWeight\";\n\nexport default function(topology, minWeight, weight) {\n  var a = filterAttached(topology),\n      w = filterWeight(topology, minWeight, weight);\n  return function(ring, interior) {\n    return a(ring, interior) || w(ring, interior);\n  };\n}\n","function compare(a, b) {\n  return a[1][2] - b[1][2];\n}\n\nexport default function() {\n  var heap = {},\n      array = [],\n      size = 0;\n\n  heap.push = function(object) {\n    up(array[object._ = size] = object, size++);\n    return size;\n  };\n\n  heap.pop = function() {\n    if (size <= 0) return;\n    var removed = array[0], object;\n    if (--size > 0) object = array[size], down(array[object._ = 0] = object, 0);\n    return removed;\n  };\n\n  heap.remove = function(removed) {\n    var i = removed._, object;\n    if (array[i] !== removed) return; // invalid request\n    if (i !== --size) object = array[size], (compare(object, removed) < 0 ? up : down)(array[object._ = i] = object, i);\n    return i;\n  };\n\n  function up(object, i) {\n    while (i > 0) {\n      var j = ((i + 1) >> 1) - 1,\n          parent = array[j];\n      if (compare(object, parent) >= 0) break;\n      array[parent._ = i] = parent;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  function down(object, i) {\n    while (true) {\n      var r = (i + 1) << 1,\n          l = r - 1,\n          j = i,\n          child = array[j];\n      if (l < size && compare(array[l], child) < 0) child = array[j = l];\n      if (r < size && compare(array[r], child) < 0) child = array[j = r];\n      if (j === i) break;\n      array[child._ = i] = child;\n      array[object._ = i = j] = object;\n    }\n  }\n\n  return heap;\n}\n","import {transform} from \"topojson-client\";\nimport newHeap from \"./heap\";\nimport {planarTriangleArea} from \"./planar\";\n\nfunction copy(point) {\n  return [point[0], point[1], 0];\n}\n\nexport default function(topology, weight) {\n  var point = topology.transform ? transform(topology.transform) : copy,\n      heap = newHeap();\n\n  if (weight == null) weight = planarTriangleArea;\n\n  var arcs = topology.arcs.map(function(arc) {\n    var triangles = [],\n        maxWeight = 0,\n        triangle,\n        i,\n        n;\n\n    arc = arc.map(point);\n\n    for (i = 1, n = arc.length - 1; i < n; ++i) {\n      triangle = [arc[i - 1], arc[i], arc[i + 1]];\n      triangle[1][2] = weight(triangle);\n      triangles.push(triangle);\n      heap.push(triangle);\n    }\n\n    // Always keep the arc endpoints!\n    arc[0][2] = arc[n][2] = Infinity;\n\n    for (i = 0, n = triangles.length; i < n; ++i) {\n      triangle = triangles[i];\n      triangle.previous = triangles[i - 1];\n      triangle.next = triangles[i + 1];\n    }\n\n    while (triangle = heap.pop()) {\n      var previous = triangle.previous,\n          next = triangle.next;\n\n      // If the weight of the current point is less than that of the previous\n      // point to be eliminated, use the latter’s weight instead. This ensures\n      // that the current point cannot be eliminated without eliminating\n      // previously- eliminated points.\n      if (triangle[1][2] < maxWeight) triangle[1][2] = maxWeight;\n      else maxWeight = triangle[1][2];\n\n      if (previous) {\n        previous.next = next;\n        previous[2] = triangle[2];\n        update(previous);\n      }\n\n      if (next) {\n        next.previous = previous;\n        next[0] = triangle[0];\n        update(next);\n      }\n    }\n\n    return arc;\n  });\n\n  function update(triangle) {\n    heap.remove(triangle);\n    triangle[1][2] = weight(triangle);\n    heap.push(triangle);\n  }\n\n  return {\n    type: \"Topology\",\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n","export default function(topology, p) {\n  var array = [];\n\n  topology.arcs.forEach(function(arc) {\n    arc.forEach(function(point) {\n      if (isFinite(point[2])) { // Ignore endpoints, whose weight is Infinity.\n        array.push(point[2]);\n      }\n    });\n  });\n\n  return array.length && quantile(array.sort(descending), p);\n}\n\nfunction quantile(array, p) {\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return array[0];\n  if (p >= 1) return array[n - 1];\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = array[i],\n      b = array[i + 1];\n  return a + (b - a) * (h - i);\n}\n\nfunction descending(a, b) {\n  return b - a;\n}\n","export default function(topology, minWeight) {\n  minWeight = minWeight == null ? Number.MIN_VALUE : +minWeight;\n\n  // Remove points whose weight is less than the minimum weight.\n  var arcs = topology.arcs.map(function(input) {\n    var i = -1,\n        j = 0,\n        n = input.length,\n        output = new Array(n), // pessimistic\n        point;\n\n    while (++i < n) {\n      if ((point = input[i])[2] >= minWeight) {\n        output[j++] = [point[0], point[1]];\n      }\n    }\n\n    output.length = j;\n    return output;\n  });\n\n  return {\n    type: \"Topology\",\n    transform: topology.transform,\n    bbox: topology.bbox,\n    objects: topology.objects,\n    arcs: arcs\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    quarterPi = pi / 4,\n    radians = pi / 180,\n    abs = Math.abs,\n    atan2 = Math.atan2,\n    cos = Math.cos,\n    sin = Math.sin;\n\nfunction halfArea(ring, closed) {\n  var i = 0,\n      n = ring.length,\n      sum = 0,\n      point = ring[closed ? i++ : n - 1],\n      lambda0, lambda1 = point[0] * radians,\n      phi1 = (point[1] * radians) / 2 + quarterPi,\n      cosPhi0, cosPhi1 = cos(phi1),\n      sinPhi0, sinPhi1 = sin(phi1);\n\n  for (; i < n; ++i) {\n    point = ring[i];\n    lambda0 = lambda1, lambda1 = point[0] * radians;\n    phi1 = (point[1] * radians) / 2 + quarterPi;\n    cosPhi0 = cosPhi1, cosPhi1 = cos(phi1);\n    sinPhi0 = sinPhi1, sinPhi1 = sin(phi1);\n\n    // Spherical excess E for a spherical triangle with vertices: south pole,\n    // previous point, current point.  Uses a formula derived from Cagnoli’s\n    // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n    // See https://github.com/d3/d3-geo/blob/master/README.md#geoArea\n    var dLambda = lambda1 - lambda0,\n        sdLambda = dLambda >= 0 ? 1 : -1,\n        adLambda = sdLambda * dLambda,\n        k = sinPhi0 * sinPhi1,\n        u = cosPhi0 * cosPhi1 + k * cos(adLambda),\n        v = k * sdLambda * sin(adLambda);\n    sum += atan2(v, u);\n  }\n\n  return sum;\n}\n\nexport function sphericalRingArea(ring, interior) {\n  var sum = halfArea(ring, true);\n  if (interior) sum *= -1;\n  return (sum < 0 ? tau + sum : sum) * 2;\n}\n\nexport function sphericalTriangleArea(t) {\n  return abs(halfArea(t, false)) * 2;\n}\n","export {default as filter} from \"./src/filter\";\nexport {default as filterAttached} from \"./src/filterAttached\";\nexport {default as filterAttachedWeight} from \"./src/filterAttachedWeight\";\nexport {default as filterWeight} from \"./src/filterWeight\";\nexport {planarRingArea, planarTriangleArea} from \"./src/planar\";\nexport {default as presimplify} from \"./src/presimplify\";\nexport {default as quantile} from \"./src/quantile\";\nexport {default as simplify} from \"./src/simplify\";\nexport {sphericalRingArea, sphericalTriangleArea} from \"./src/spherical\";\n","export * from \"topojson-client\";\nexport * from \"topojson-server\";\nexport * from \"topojson-simplify\";\n","module.exports={type:\"Topology\",transform:{scale:[.0066467997375138105,.004557992068082281],translate:[-179.9989067921917,-55.37326325101178]},arcs:[[[32361,19407],[57,-2],[32,52]],[[32450,19457],[-13,-106],[4,-34]],[[32441,19317],[-9,-63]],[[32432,19254],[-62,33]],[[32370,19287],[-22,-58]],[[32348,19229],[-3,-48],[-2,-47],[22,-1],[13,-16]],[[32378,19117],[-40,-40],[-10,-42],[9,-9],[44,6],[38,26]],[[32419,19058],[-2,-21],[1,-46],[-42,-142],[-8,-80],[-28,-142],[-9,-9]],[[32331,18618],[-42,196]],[[32289,18814],[-54,180]],[[32235,18994],[46,75],[-11,13]],[[32270,19082],[62,248],[29,77]],[[32976,19191],[192,-24],[646,-607],[268,-35]],[[34082,18525],[130,-20],[154,-95]],[[34366,18410],[102,-212],[167,-189],[-20,-199],[101,-156]],[[34716,17654],[18,-68],[84,-34]],[[34818,17552],[10,-57]],[[34828,17495],[8,-47],[147,-268],[393,-62]],[[35376,17118],[89,-115],[-100,-465],[-462,-218]],[[34903,16320],[-571,-150],[-156,-270],[-294,7],[-284,75],[-64,-256]],[[33534,15726],[-421,851],[-150,207],[9,273],[-99,309],[-142,112],[-369,852],[-73,-19],[42,307]],[[32331,18618],[178,-64],[86,116],[119,55],[88,115],[-149,222],[323,129]],[[32914,19477],[62,-286]],[[32419,19058],[10,63],[-7,73],[10,60]],[[32441,19317],[40,13],[31,-47],[111,-50],[291,244]],[[34828,17495],[360,-70],[248,327],[80,109]],[[35516,17861],[39,-44]],[[35555,17817],[8,-80]],[[35563,17737],[-87,-131],[18,-176],[-54,-75],[-64,-237]],[[34903,16320],[59,-163],[95,-337]],[[35057,15820],[-133,-238],[-450,-288],[-580,-289],[-128,-97],[-147,19],[-35,127],[5,109],[-81,325],[26,238]],[[39261,18805],[-131,-327],[479,-333],[167,22],[62,-90],[201,-118],[286,-17],[2,64],[29,269]],[[40356,18275],[82,-6],[151,90]],[[40589,18359],[-107,-163],[-40,-119],[131,-79],[185,51],[178,-10],[-53,224]],[[40883,18263],[151,40],[240,254],[59,21],[243,13],[46,-215],[112,-34]],[[41734,18342],[-66,-197],[-263,-152],[-155,-604],[-135,39],[-16,-418],[-81,-67]],[[41018,16943],[-58,423],[-100,-181],[-62,237],[127,34],[62,204],[-383,45],[-38,196],[-167,46],[-89,-118],[112,-119],[-89,-158],[85,-107],[39,-209],[39,-333]],[[40496,16903],[-302,-28],[-23,-186],[-98,-136],[-336,-389],[-267,-282],[0,-96],[-155,-57],[-108,-79],[-54,-293],[-62,-948],[-78,-102],[-23,-118],[-151,-159],[-100,-146],[-121,175],[-219,642],[-264,966],[-120,819],[39,225],[-78,345],[-54,-277],[-194,-96],[-298,361],[173,53],[95,105],[-190,-67],[-236,225]],[[37272,17360],[518,153],[-271,570],[221,163],[136,23],[445,728],[-35,141],[139,79]],[[38425,19217],[-201,209],[-23,310],[429,12],[143,192]],[[38773,19940],[194,-266],[58,-395],[-135,17]],[[38890,19296],[85,-271],[286,-220]],[[34503,22304],[-174,321],[-245,139],[121,404],[210,-59],[301,385],[434,-64],[335,-204],[408,128],[433,-73],[-189,265],[214,229],[-63,219],[1122,329],[329,-39],[493,-363],[351,128],[546,-713],[526,18],[257,-320],[251,-119]],[[40163,22915],[-226,-265],[-353,-155],[-412,-557],[-19,-542]],[[39153,21396],[-159,130],[-310,39],[-279,21],[-35,-8],[-185,55],[-55,-161],[-181,59],[-143,17],[-176,-183]],[[37630,21365],[-258,-268],[-247,79],[-113,434],[-162,141],[-85,-39],[-204,-9],[-259,127],[-406,322],[-388,-125],[15,-692],[-19,-120]],[[35504,21215],[-62,-25],[-230,256],[-240,-106]],[[34972,21340],[-368,637],[223,135],[186,5],[52,316],[-279,50],[-283,-179]],[[14702,14227],[160,-153],[237,187],[249,-73],[94,-159]],[[15442,14029],[0,-199],[-86,-74]],[[15356,13756],[-191,369],[-198,-176],[82,-164],[-113,-63],[-199,216],[-140,17]],[[14597,13955],[105,272]],[[30862,19091],[597,-186],[272,182],[262,-109],[235,41]],[[32228,19019],[61,-205]],[[32331,18618],[-104,-387],[-253,496],[22,-237],[446,-1097],[0,-164],[-243,-287],[-56,-36],[-75,68],[-1227,-5],[21,2122]],[[15442,14029],[366,556],[502,306],[85,-90],[-147,-97]],[[16248,14704],[-215,-545],[94,17],[105,-471],[202,-29],[513,-146],[-51,-495],[68,-125],[-78,-130],[93,-148]],[[16979,12632],[-140,-102],[-257,11],[-11,-147],[101,-12],[4,-90],[-148,-23],[117,-397],[-81,-662]],[[16564,11210],[-126,111],[101,244],[-144,97],[-260,-57],[-390,522]],[[15745,12127],[-292,117],[-111,63],[-171,182]],[[15171,12489],[279,450],[-94,817]],[[15745,12127],[16,-182],[-47,-147],[-171,-227],[-194,-137],[-156,-380],[-183,119],[0,239]],[[15010,11412],[78,198],[-82,-56],[-105,90],[7,296],[133,386],[130,163]],[[16564,11210],[-281,-42],[-164,-137],[-51,-283],[-81,-103],[-39,-153],[167,-323],[-64,-78],[177,-132],[101,-12],[133,125],[-4,-335],[159,6]],[[16617,9743],[133,-329],[-105,-682],[81,-164],[-101,-244]],[[16625,8324],[-128,-205]],[[16497,8119],[-168,222],[-549,414],[-155,244],[-296,919],[-265,733],[-194,187],[-32,398],[172,176]],[[27215,14561],[81,90],[142,109]],[[27438,14760],[73,117],[114,-157]],[[27625,14720],[10,-383],[-141,-202],[5,-589]],[[27499,13546],[-173,-37]],[[27326,13509],[-6,610],[-57,239],[-71,77],[23,126]],[[33165,9844],[-2,-234],[35,-271],[12,-254],[12,-255],[-138,-272],[-125,-130],[-141,-87],[-141,-87],[-153,-254],[-33,0],[-175,-219],[-21,-111],[125,-388],[3,-371],[-61,-165],[-275,-143],[-92,-134],[37,-214]],[[32032,6255],[-110,5]],[[31922,6260],[-33,245],[-32,245],[-32,245],[-32,245]],[[31793,7240],[166,234]],[[31959,7474],[43,317],[43,317]],[[32045,8108],[-4,375],[-138,68],[-110,78],[-126,9],[-6,87]],[[31661,8725],[3,40],[-27,96],[147,72],[147,71],[147,72]],[[32078,9076],[64,-121],[107,36],[34,-192],[-59,-143],[144,-281],[99,255],[9,127],[0,42],[-1,129]],[[32475,8928],[-184,267]],[[32291,9195],[-42,282],[40,134]],[[32289,9611],[237,-12]],[[32526,9599],[181,-25],[161,74],[148,98],[149,98]],[[16240,16494],[447,-171],[86,-125],[-461,-15]],[[16312,16183],[-72,311]],[[30224,6420],[-135,289]],[[30089,6709],[0,605],[148,9],[3,802],[489,52],[119,66],[-1,61]],[[30847,8304],[24,-58]],[[30871,8246],[171,-401],[455,-559]],[[31497,7286],[-45,-17],[-319,-313],[-13,-124],[-138,-114],[-54,-206],[-238,13],[-126,92],[-211,-357],[-160,-5],[-16,101]],[[30177,6356],[47,64],[0,0]],[[28146,23873],[220,66],[76,66],[-75,63],[1,68]],[[28368,24136],[227,-1]],[[28595,24135],[224,-132],[194,116],[215,-149]],[[29228,23970],[64,-347],[45,-299]],[[29337,23324],[-93,23],[-231,-139],[-106,-44],[122,-220],[49,3],[73,-120]],[[29151,22827],[-148,-107],[32,-123]],[[29035,22597],[-196,-23],[-195,-23]],[[28644,22551],[-30,-31],[-43,63],[-40,-18]],[[28531,22565],[-70,47],[-178,7]],[[28283,22619],[1,266],[-222,102]],[[28062,22987],[11,101],[-24,59]],[[28049,23147],[-21,103]],[[28028,23250],[-27,231],[144,131],[1,261]],[[28028,23250],[-70,33],[-22,81],[-112,82],[-196,35]],[[27628,23481],[100,83],[90,236],[121,78],[207,-5]],[[34432,20584],[14,-160],[144,-71],[286,-180],[302,80],[24,100]],[[35202,20353],[110,20],[271,151],[134,-15],[151,-105],[426,-231],[7,-220]],[[36301,19953],[-110,-446],[48,-451],[117,-20],[38,-75],[-31,-57],[-117,-214]],[[36246,18690],[139,-285],[140,-91],[20,-195],[62,-20],[-14,-90],[-189,-90],[-58,-271]],[[36346,17648],[-639,160],[-72,266],[-316,-125],[-230,110],[-265,220],[-210,486],[-257,-69]],[[34357,18696],[-93,265],[21,155],[-79,165],[-296,316],[114,250],[27,146],[-130,55],[-83,255]],[[33838,20303],[-58,146],[-60,340],[78,96]],[[33798,20885],[26,-41]],[[33824,20844],[90,-150],[106,-20]],[[34020,20674],[64,5]],[[34084,20679],[208,180],[10,-215],[95,-75],[35,15]],[[30823,9647],[157,-54],[158,-53]],[[31138,9540],[217,-134],[208,-214],[0,285],[-116,-49],[-104,188]],[[31343,9616],[8,250],[7,250]],[[31358,10116],[69,175],[282,61]],[[31709,10352],[44,-98],[142,-83],[143,-82]],[[32038,10089],[8,-66],[31,4],[67,-207],[-64,-63],[13,-103],[27,-217],[-88,-80],[-16,-188],[62,-93]],[[31661,8725],[-220,-68]],[[31441,8657],[-119,-177],[-119,-176]],[[31203,8304],[-61,-119],[-271,61]],[[30847,8304],[-88,9],[-94,-8]],[[30665,8305],[-74,-18]],[[30591,8287],[-200,278]],[[30391,8565],[0,243],[0,243],[0,243]],[[30391,9294],[295,0]],[[30686,9294],[4,234],[3,233]],[[30693,9761],[130,-114]],[[31080,22738],[103,-127],[151,-257],[-26,-229]],[[31308,22125],[85,-57],[167,13]],[[31560,22081],[-173,-331],[-66,-19]],[[31321,21731],[-153,101]],[[31168,21832],[-218,-94],[-406,32],[-41,103]],[[30503,21873],[-20,57],[-154,22],[-13,112],[-205,216]],[[30111,22280],[154,32],[170,319],[109,37]],[[30544,22668],[85,15],[223,-66],[228,121]],[[23479,26664],[323,74],[184,-125],[727,142],[285,-258],[18,-139],[-770,-336],[-599,184],[118,269],[-286,189]],[[9457,19307],[340,0],[562,-283],[266,13],[442,73],[243,-283],[49,-189],[194,-142],[130,220],[194,-70],[303,-725],[275,-95]],[[12455,17826],[-97,-819],[243,-662],[270,-212],[503,181],[85,192],[56,293],[510,68],[-164,-755]],[[13861,16112],[-15,170],[-182,-239]],[[13664,16043],[-270,23],[-15,-130],[-63,0],[144,-148],[20,-113],[-202,0],[-72,-330]],[[13206,15345],[-287,338],[-96,48],[-276,-166],[-989,583],[-329,292],[-65,662],[-918,1315],[-189,465],[-238,252],[16,-370],[254,-323],[540,-1174],[-102,-95],[-324,402],[-22,315],[-405,355],[162,118],[-254,331],[-227,614]],[[13861,16112],[-62,-312],[-132,-171]],[[13667,15629],[-3,414]],[[13667,15629],[136,-39]],[[13803,15590],[-117,-131]],[[13686,15459],[-163,-289]],[[13523,15170],[-199,45],[-118,130]],[[13611,15326],[285,-208]],[[13896,15118],[-54,-90],[-319,142]],[[13523,15170],[88,156]],[[14566,15448],[-237,-74],[-164,-176],[-97,-29],[-102,-198]],[[13966,14971],[-70,147]],[[13611,15326],[75,133]],[[13803,15590],[90,45],[506,-6],[167,-181]],[[16312,16183],[-416,50],[155,69],[-131,59],[203,129],[117,4]],[[15292,16219],[356,-50],[13,-58],[-157,-69],[-254,113],[42,64]],[[14566,15448],[-4,-193],[-62,-792]],[[14500,14463],[-152,116],[-156,-11]],[[14192,14568],[-292,380],[66,23]],[[14500,14463],[202,-236]],[[14597,13955],[-241,312],[-82,-11],[-72,22],[-56,171],[46,119]],[[18089,13995],[396,-523]],[[18485,13472],[-140,-429],[117,-176],[104,-292]],[[18566,12575],[-223,-64],[-98,-87],[-121,92],[-46,142],[36,355],[-73,273],[-69,-41]],[[17972,13245],[-125,199],[16,159],[148,85],[-70,102],[148,205]],[[18485,13472],[321,-16],[144,-38]],[[18950,13418],[-60,-219],[56,-260],[-29,-213],[-51,-64]],[[18866,12662],[-300,-87]],[[18950,13418],[150,-54],[218,-253]],[[19318,13111],[-134,-356],[-67,-127],[-251,34]],[[17811,14533],[197,3],[-59,-75],[11,-109],[-166,33],[29,37],[-12,111]],[[18333,7802],[-142,103],[-408,-58],[-128,-574]],[[17655,7273],[-27,49],[-165,-1],[-51,-166],[-10,-17],[-36,139],[-167,24],[-38,18],[-49,55],[-109,-254]],[[17003,7120],[-125,23],[-136,511],[27,238],[-144,432]],[[16617,9743],[150,-20],[358,278],[124,39],[3,-438],[187,-205],[144,-25],[221,-194],[117,-10],[76,-68],[34,-522],[274,-15],[-17,-195],[100,-68],[51,-146],[-106,-352]],[[18912,6593],[-49,-64],[-26,-225],[-252,-111],[-278,59],[117,303],[-41,82],[-333,238],[-151,50],[-175,265],[-69,83]],[[18333,7802],[26,-496],[199,-35],[122,-10],[65,-361],[118,23],[64,-50],[-38,-200],[23,-80]],[[18500,5563],[161,-163],[50,-7],[255,-241],[129,-179],[-64,-105],[19,-126]],[[19050,4742],[-67,-143],[-166,-116],[-115,39],[-79,-35],[-140,98],[-164,73],[-16,203],[41,46],[-22,122]],[[18322,5029],[10,55],[82,444],[86,35]],[[31272,25438],[-456,-130],[-313,-61],[-219,183],[42,208],[-87,248],[72,115],[463,367],[121,0],[-3,136],[-167,78]],[[30725,26582],[-72,93],[20,78],[22,49],[-63,75],[26,66],[-54,3],[35,112],[-131,109],[-94,15],[-238,118]],[[30176,27300],[82,0],[45,55],[104,-76],[56,-64],[367,-23],[126,97],[36,157],[286,80],[77,-65],[126,-52],[-46,-110]],[[31435,27299],[-28,-58],[-10,-130],[200,-122],[-143,-158],[168,-262],[-114,-158],[173,-180],[-79,-104],[225,-178],[-331,-358],[-224,-153]],[[30725,26582],[-280,-15],[-120,-133],[9,-141],[-97,-128],[-206,-83],[-312,-237],[-39,-384],[193,-64],[92,-134],[-338,-269],[-12,-361],[-115,-170],[-242,-45],[-48,-116],[-123,-38],[-109,218],[39,64],[-252,411],[25,156]],[[28790,25113],[165,215],[53,279],[-114,309],[70,248],[68,41],[165,14],[157,470],[200,176],[-26,78],[150,143],[109,-10],[37,105],[250,-41],[70,96],[-19,64],[51,0]],[[30588,24068],[103,-338]],[[30691,23730],[-133,-118],[78,-54]],[[30636,23558],[74,-317]],[[30710,23241],[-197,-168],[-30,-143]],[[30483,22930],[-254,69],[-125,-36],[-195,61]],[[29909,23024],[-29,70],[-144,42],[-281,135],[-118,53]],[[29228,23970],[647,224],[90,-131]],[[29965,24063],[148,16]],[[30113,24079],[475,-11]],[[25902,24266],[97,-265]],[[25999,24001],[151,1],[-50,-327],[-287,-136],[-284,-69],[55,200],[69,62],[-13,133],[-81,66],[-13,132],[71,63],[70,1],[69,69],[146,70]],[[28049,23147],[-57,9],[-59,-55],[66,-85]],[[27999,23016],[-146,1],[-73,63],[-290,134],[-76,132]],[[27414,23346],[214,135]],[[28531,22565],[-16,-84]],[[28515,22481],[124,-33]],[[28639,22448],[-3,-158],[-109,16],[-104,-81],[-71,67],[0,-67],[-137,1]],[[28215,22226],[-141,0],[-72,67],[0,66],[71,128],[70,69],[77,42],[63,21]],[[29627,22863],[-274,39],[-135,-89],[-67,14]],[[29909,23024],[-122,-121],[-66,-29],[-94,-11]],[[29661,22682],[181,-41]],[[29842,22641],[149,51],[149,51]],[[30140,22743],[276,9]],[[30416,22752],[128,-84]],[[30111,22280],[-190,-66]],[[29921,22214],[-176,-9]],[[29745,22205],[-180,145]],[[29565,22350],[-26,84]],[[29539,22434],[122,248]],[[30043,21512],[129,-94]],[[30172,21418],[-7,-225],[90,-107]],[[30255,21086],[-45,-141],[-102,-121]],[[30108,20824],[-116,154],[0,365]],[[29992,21343],[-6,84],[57,85]],[[31924,19852],[330,59],[-106,-106],[-184,-53],[-40,100]],[[32479,20006],[24,-8],[43,148],[49,44],[116,-2],[86,63],[152,-71],[202,61],[65,52],[177,-6],[52,14]],[[33445,20301],[-60,-118],[-83,-15],[-24,-421],[-249,-202],[-115,-68]],[[32450,19457],[144,180],[-10,85],[-93,30]],[[32491,19752],[-12,254]],[[32361,19407],[59,182],[17,5],[5,76],[49,82]],[[28820,19406],[540,-157],[574,-463],[115,44],[74,156],[-47,208],[272,189],[195,-67],[35,-95],[284,-130]],[[30862,19091],[-21,-2122],[0,-428],[-150,-4],[0,-103]],[[30691,16434],[-680,503],[-521,363],[-149,-106]],[[29341,17194],[-115,-84],[-111,123],[-230,78]],[[28885,17311],[-284,280],[-107,318],[77,67],[-54,810]],[[28517,18786],[115,296],[194,178],[-6,146]],[[28383,20266],[211,72],[149,-72],[8,-391],[-157,-212],[30,-112],[196,-145]],[[28517,18786],[-73,402],[-103,100],[-100,162],[-15,224],[97,73],[60,519]],[[26749,19847],[589,346],[1045,73]],[[28885,17311],[-682,-580],[-114,-153],[-140,-166],[-227,-68]],[[27722,16344],[-147,-28],[-316,455],[-912,869]],[[26347,17640],[-567,491]],[[25780,18131],[-2,89]],[[25778,18220],[2,246],[724,477],[42,65],[93,173],[263,11],[-153,655]],[[25778,18220],[-676,0]],[[25102,18220],[257,148],[254,338],[-23,286],[92,297],[535,718],[295,-132],[237,-28]],[[29414,13800],[-150,-315],[85,-373],[155,-328],[14,-149]],[[29518,12635],[-17,-124],[-208,109],[-213,3]],[[29080,12623],[-3,25],[-292,9]],[[28785,12657],[0,-35]],[[28785,12622],[-233,30]],[[28552,12652],[21,206],[-214,298]],[[28359,13156],[231,516],[194,-117],[155,451],[88,146],[129,422],[130,194],[-86,252]],[[29200,15020],[52,-6],[93,-215],[-3,-279],[40,-112],[59,-66],[-39,-12],[-186,15],[-37,-73],[184,-250],[51,-222]],[[31680,11622],[37,-192],[-211,-257]],[[31506,11173],[-25,115],[-35,261]],[[31446,11549],[97,-12],[43,102],[94,-17]],[[32981,11126],[-67,-357],[114,-157],[-33,-299],[73,-340],[97,-129]],[[32526,9599],[-177,9]],[[32349,9608],[2,14],[1,10],[-35,98],[-43,232],[-74,100],[-162,27]],[[31709,10352],[-100,277],[-102,227],[-1,317]],[[31680,11622],[43,15],[-1,152],[-59,126]],[[31663,11915],[56,16]],[[31719,11931],[155,1],[156,2],[155,1]],[[32185,11935],[142,-116],[142,-117],[143,-116],[142,-116]],[[32754,11470],[114,-172],[113,-172]],[[26649,13251],[-57,365],[87,354],[-3,259]],[[26676,14229],[-4,330],[414,26]],[[27086,14585],[-16,-92],[107,-530],[-24,-310],[108,-169]],[[27261,13484],[-44,-73],[-568,-160]],[[32349,9608],[-60,3]],[[32291,9195],[36,-7],[38,-44],[110,-216]],[[25780,18131],[0,-25],[4,-251]],[[25784,17855],[-513,4],[5,-563],[-164,-80],[17,-383],[-612,-27]],[[24517,16806],[175,573],[216,520],[194,321]],[[26347,17640],[-255,-1],[156,-2084],[-185,-14],[-383,52],[-322,-11],[-118,-196]],[[25240,15386],[-322,420],[-325,-124]],[[24593,15682],[9,112],[68,239],[-59,444],[-50,166],[-44,163]],[[25784,17855],[-4,276]],[[25240,15386],[59,-310],[69,-202]],[[25368,14874],[-138,-27],[-112,70],[-99,15]],[[25019,14932],[-457,-84]],[[24562,14848],[-15,174]],[[24547,15022],[400,29],[60,41],[-60,59],[-133,30],[-228,-50]],[[24586,15131],[-134,249],[141,302]],[[25019,14932],[-2,-44],[2,-165],[-169,-159],[-62,0]],[[24788,14564],[-182,198],[-44,86]],[[25368,14874],[341,9],[173,-503]],[[25882,14380],[-26,-34],[49,-306],[-103,-230]],[[25802,13810],[-93,-80],[-23,113],[-51,163],[-96,3]],[[25539,14009],[-141,331],[-105,-6],[-211,-202]],[[25082,14132],[-294,432]],[[25340,13647],[199,362]],[[25802,13810],[-11,-234],[177,-147],[-17,-325]],[[25951,13104],[-257,157],[-176,230],[-178,156]],[[27722,16344],[-36,-789],[-408,-56],[-170,-83]],[[27108,15416],[-118,40],[-330,-176],[-287,-394],[-121,-445]],[[26252,14441],[-370,-61]],[[26252,14441],[138,-168],[286,-44]],[[26649,13251],[-227,59],[-471,-206]],[[27108,15416],[65,-263],[54,-141],[99,-95],[68,21],[44,-178]],[[27215,14561],[-129,24]],[[29341,17194],[141,-586],[-73,-564],[-1,-66],[-2,-62],[7,-57],[-306,-558],[28,-144]],[[29135,15157],[-169,-136],[-296,52],[-145,-123],[-322,83],[-285,152],[-167,-32],[-116,-255],[-10,-178]],[[29135,15157],[65,-137]],[[28359,13156],[-380,-68],[-245,484],[-235,-26]],[[28785,12622],[3,-253]],[[28788,12369],[-302,-8]],[[28486,12361],[66,291]],[[28788,12369],[-3,288]],[[29080,12623],[-14,-207],[158,33],[38,-100],[-98,-244],[84,-58],[8,-237],[-53,-210],[-34,4],[-16,86],[-42,-72],[-73,18],[-61,113],[-57,-122],[-99,10],[46,-300],[-56,41],[-55,-87]],[[28756,11291],[-374,699],[85,38],[19,333]],[[30691,16434],[2,-832],[-150,-11],[-138,-424],[7,-241],[112,-379]],[[30524,14547],[-158,-54],[-205,-333],[-213,-36],[-38,-15],[44,-61],[-76,-135],[-270,-109],[-45,67],[-149,-71]],[[30524,14547],[123,-246],[-28,-236],[101,-52],[164,-144],[-12,-71],[184,-192],[3,-122],[122,-99],[33,-133]],[[31214,13252],[-330,28],[-232,-63],[-295,-129],[-177,27],[-166,162],[-143,-172],[12,-193]],[[29883,12912],[-174,43],[-128,-29],[-63,-291]],[[29883,12912],[-113,-541],[12,-133],[-38,-194],[-226,-376],[3,-253],[-5,-31],[-232,-315],[-40,142],[-194,-75]],[[29050,11136],[-36,59],[-126,-145]],[[28888,11050],[-132,241]],[[28919,10880],[46,12],[6,172],[79,72]],[[31214,13252],[101,-150],[205,75],[194,-226]],[[31714,12951],[72,-333],[-199,-309],[-44,-199],[-11,-266]],[[31532,11844],[-39,-28],[-71,-193],[24,-74]],[[31358,10116],[-15,-500]],[[31138,9540],[-315,107]],[[30693,9761],[-274,-64],[22,174],[-78,197],[3,472],[-192,10],[3,82],[-157,-14],[0,-96],[-22,-27],[-16,-101],[-264,-19],[-150,491],[-519,-9],[-126,-46]],[[28923,10811],[-4,69]],[[31714,12951],[200,-19],[215,47],[72,105]],[[32201,13084],[57,-179],[78,-207],[18,-173],[-58,-122],[-91,-180],[-20,-57],[0,-231]],[[32185,11935],[-466,-4]],[[31663,11915],[-79,-85],[-52,14]],[[33569,14936],[45,-124],[-118,-117],[94,-27]],[[33590,14668],[-51,-110]],[[33539,14558],[-35,28],[-139,-43],[-5,140],[96,204]],[[33456,14887],[68,-25],[45,74]],[[33338,11782],[-91,180],[-4,55],[4,747],[142,258]],[[33389,13022],[225,187],[236,20],[451,672],[-151,4],[-450,215],[-204,360],[43,78]],[[33590,14668],[166,-239],[1032,355],[54,-66],[-234,-966],[-309,-578],[-245,-515],[-228,-63],[-410,-646],[-78,-168]],[[31203,8304],[238,353]],[[32045,8108],[-86,-634]],[[31793,7240],[-148,10],[-148,36]],[[28841,8368],[1016,-28],[415,-128]],[[30272,8212],[393,93]],[[30089,6709],[0,-798],[-182,-91],[-192,32],[-75,133],[-76,-101]],[[29564,5884],[-56,27],[-145,316],[-113,885],[-393,1068],[-16,188]],[[31761,6473],[79,14],[62,-165],[-64,-113],[-106,56],[29,208]],[[31255,5802],[184,1],[7,-128],[-115,-199],[-129,132],[53,194]],[[34514,9521],[168,-711],[-31,-154],[-88,82],[-12,-319],[-368,-1739],[-269,-155],[-219,136],[-24,319],[-94,301],[187,482],[0,119],[-69,428],[75,282],[370,176],[55,66],[250,632],[69,55]],[[34357,18696],[-137,72],[-77,-113],[-61,-130]],[[33445,20301],[80,52],[173,-60],[51,-2],[89,12]],[[34357,18696],[-59,-91],[55,-126],[13,-69]],[[34716,17654],[-1,87],[45,120],[33,31],[47,-56],[6,-207],[-28,-77]],[[36301,19953],[212,-87],[97,158],[178,91],[62,197],[240,45]],[[37090,20357],[186,-50]],[[37276,20307],[46,-68],[228,152],[97,11],[80,159],[40,28],[101,-124],[-20,-260],[271,169],[205,-17]],[[38324,20357],[-33,-115]],[[38291,20242],[-78,-10]],[[38213,20232],[-246,-50],[-122,-107],[-58,-389],[-140,-79],[8,-153],[-108,-51],[-89,-310],[-109,45],[-278,-203],[-8,-220],[-325,-113],[-263,-11],[-229,99]],[[40589,18359],[294,-96]],[[41018,16943],[-54,-237]],[[40964,16706],[-128,434],[-73,-158],[-267,-79]],[[39137,14330],[112,-153],[167,-451],[-85,-232],[-171,-50],[-103,388],[80,498]],[[42307,16898],[-116,-175],[-60,-50]],[[42131,16673],[-242,-202],[-81,-31],[-51,-208],[26,-194],[164,-280],[-92,-307],[138,-247],[4,-175],[55,-287]],[[42052,14742],[-138,-434],[2,642],[-112,520],[-139,474],[-43,-170],[-178,-191],[-186,56],[47,373],[-279,609],[-62,85]],[[41734,18342],[50,57],[148,-209],[0,-372],[-190,-283],[89,-113],[33,-5],[157,-186],[59,-267],[227,-66]],[[42922,15278],[-274,39],[-92,-61],[-67,-176],[50,-305]],[[42539,14775],[-271,164],[4,169],[-155,-22],[16,-265],[-136,-407],[24,-254],[96,57],[55,-266],[77,-276],[104,-34],[98,-103]],[[42451,13538],[-43,-116],[-56,24],[-61,-64],[9,157],[-144,114],[-16,-93]],[[42140,13560],[-220,420],[-46,-62],[-16,214],[194,610]],[[42131,16673],[74,-94],[9,-178],[105,34],[-32,-173],[4,-267],[189,137],[107,-5],[107,59],[155,-214],[-8,-198],[126,-188],[-45,-308]],[[43259,15362],[-8,-513],[-240,-164],[51,-141],[-174,0],[-89,-124]],[[42799,14420],[-12,-34],[-174,90],[-74,299]],[[42922,15278],[116,-68],[221,152]],[[44397,13244],[43,-148],[-102,-74],[-97,131]],[[44241,13153],[52,91],[104,0]],[[51753,7691],[50,25],[380,-386],[-51,-5],[-379,366]],[[46409,20623],[144,-316],[38,-254],[-58,-226],[-274,-119],[-182,-22],[19,197],[62,130],[-93,220],[77,215]],[[46142,20448],[58,96],[209,79]],[[46719,21464],[-132,-362],[-332,-344],[154,-135]],[[46142,20448],[-135,28],[-85,-40],[-78,68],[109,282],[-177,115]],[[45776,20901],[413,433],[530,130]],[[40189,22897],[137,110],[239,57],[407,235],[307,-55],[107,-137],[376,-27],[126,128],[-107,137],[157,238],[508,-156],[31,-201],[264,-73],[269,110],[615,-330],[656,241],[81,0],[271,-96]],[[44633,23078],[-168,-401],[420,9],[220,-279],[-377,-59],[-564,-402],[-276,82],[-44,-137],[63,-156],[-263,-246],[-389,-28],[-307,-131],[-120,-79],[-426,201],[-809,73],[-48,102],[-55,54],[-355,347],[-426,55],[63,293],[-138,256],[-445,265]],[[24547,15022],[39,109]],[[25340,13647],[-60,66],[-121,198],[-77,221]],[[39261,18805],[461,-237],[318,-178],[316,-115]],[[31769,27611],[-334,-312]],[[28790,25113],[-120,68],[-420,-338],[-348,195],[-116,663],[599,451],[127,-51],[85,188],[631,637],[145,248],[168,85],[186,146],[177,127],[145,37],[192,-31],[170,123],[387,82],[347,-5],[162,17],[255,-90],[207,-54]],[[19814,30354],[4390,124],[118,-133],[-1300,-292],[1243,27],[-550,-146],[108,-65],[1103,289],[505,-195],[-273,-138],[-199,64],[-185,-3],[-87,-68],[9,-67],[-817,-212],[23,-134],[463,8],[59,-402],[-570,124],[-128,-334],[635,12],[-264,-603],[-708,-15],[38,-200],[158,71],[389,-193],[-207,-334],[-567,250],[-101,65],[-377,-272],[890,-116],[-1034,-418],[-356,57],[-507,-348],[-194,-206],[-186,61],[-132,-133],[-288,-447],[-317,-757],[-365,140],[-377,89],[11,-89],[-568,784],[-100,267],[-107,62],[-122,329],[106,348],[264,10],[23,210],[-438,-59],[-130,215],[378,122],[-138,112],[-297,-24],[-178,683],[-337,279],[-694,96],[-1107,74],[-88,184],[745,-24],[22,71],[-940,119],[-27,102],[1188,213],[-64,126],[-351,47],[2020,465],[110,-172],[52,183],[725,117]],[[31285,25207],[17,-193],[-74,-265]],[[31228,24749],[-42,21]],[[31186,24770],[-307,113],[-150,-43]],[[30729,24840],[-163,35],[-184,-32],[-36,102],[11,126],[516,213],[165,-4],[247,-73]],[[31186,24770],[90,-45]],[[31276,24725],[10,-98],[42,-152]],[[31328,24475],[-90,-76],[-165,-40]],[[31073,24359],[-98,82],[-165,61],[-411,22],[-151,-73]],[[30248,24451],[7,164],[89,168],[124,30],[176,-168],[106,52],[-21,143]],[[31073,24359],[42,-85],[-132,-70],[-69,-146],[-301,-73]],[[30613,23985],[-25,83]],[[30588,24068],[-96,3]],[[30492,24071],[22,126],[-228,70],[-61,3]],[[30225,24270],[23,181]],[[31328,24475],[407,-119],[0,-201],[278,-301],[-207,-37],[73,-222]],[[31879,23595],[-125,-31],[-174,-208],[-160,22],[-204,151],[-206,46],[-221,-39],[-134,-60]],[[30655,23476],[-19,82]],[[30691,23730],[-78,255]],[[31080,22738],[31,8],[127,34],[218,-107],[27,-104],[94,-91],[34,-149],[-170,25],[11,-95],[-144,-134]],[[31879,23595],[218,60],[122,-48],[218,-421],[401,-45],[200,-125],[84,-33],[-43,-343],[-148,8],[-116,-161]],[[32815,22487],[-188,-71],[-343,-157],[99,-166],[199,17],[-23,-83],[-411,-157],[-182,223],[199,124],[-148,75],[-244,29],[-213,-240]],[[30416,22752],[67,178]],[[30710,23241],[-55,235]],[[33107,21667],[85,41],[500,-190],[267,-37],[96,-129],[-20,-85]],[[34035,21267],[85,-55],[-16,-75],[-267,69]],[[33837,21206],[-221,-36]],[[33616,21170],[-52,70],[-210,26]],[[33354,21266],[-31,239],[-216,162]],[[33798,20885],[-24,37],[-127,20],[8,174],[-39,54]],[[33837,21206],[111,-86],[-38,-75],[83,-90],[0,-75],[91,-49],[0,-152]],[[34020,20674],[-62,115],[-103,80],[-31,-25]],[[35202,20353],[-21,336],[-165,256],[35,220],[-79,175]],[[35504,21215],[165,-20],[-17,180],[128,87],[102,69],[233,-101],[19,-209],[251,-40],[90,-259],[507,-367],[119,-68],[-11,-130]],[[37748,20984],[-89,35],[62,61],[-23,73],[-148,-90],[-147,-215],[-131,17],[-74,-90],[143,-79],[24,-141],[-89,-248]],[[37630,21365],[176,59],[-155,-169],[213,-12],[213,-135],[-213,-152],[-116,28]],[[37748,20984],[-47,-51],[-178,0],[-23,-113],[290,23],[360,-51]],[[38150,20792],[27,-158],[175,-51],[31,-248],[-59,22]],[[39153,21396],[-318,-237],[-178,-12],[-77,-141],[-232,12],[-198,-226]],[[29181,22310],[179,62],[179,62]],[[29565,22350],[-4,4]],[[29561,22354],[0,0],[-25,14]],[[29536,22368],[-80,-154],[-97,-74],[-218,-20]],[[29141,22120],[-38,42]],[[29103,22162],[78,148]],[[30172,21418],[159,-3],[49,22],[60,11]],[[30440,21448],[107,-133]],[[30547,21315],[-28,-133]],[[30519,21182],[-148,-40],[-116,-56]],[[31168,21832],[110,-72],[43,-29]],[[31321,21731],[51,-27],[-62,-70],[-93,-166],[82,-112]],[[31299,21356],[-145,21],[-113,-54],[43,-97]],[[31084,21226],[-65,5],[-122,-28],[-179,74],[-54,1],[-136,-54]],[[30528,21224],[19,91]],[[30440,21448],[43,8],[-22,89],[48,9],[29,61],[-100,126],[65,132]],[[29880,21465],[-126,98]],[[29754,21563],[-199,248],[-83,220],[191,18],[145,-1],[158,-45]],[[29966,22003],[36,-164],[9,-135]],[[30011,21704],[-125,-103]],[[29886,21601],[-6,-136]],[[33456,14887],[-99,186],[-77,50],[-143,198],[-224,-1],[-128,90],[-52,-166],[-156,42]],[[32577,15286],[-13,187],[77,242],[6,181],[77,53],[118,51],[44,117],[177,-665],[18,91],[193,-185],[280,-382],[15,-40]],[[33389,13022],[-174,62],[-180,-179],[-204,27],[-343,231]],[[32488,13163],[-34,165],[-62,-1],[-73,238],[-139,243],[-137,62],[38,137],[123,-8],[64,536],[54,-20],[4,15],[119,400],[70,8],[17,139],[45,209]],[[30140,22743],[-298,-102]],[[29661,22682],[-34,181]],[[35361,7562],[109,67],[40,-228],[-122,17],[-27,144]],[[35697,7778],[153,-82],[-50,-136],[-120,13],[17,205]],[[33568,9553],[223,-9],[-86,-154],[-118,18],[-19,145]],[[29195,20093],[112,-52],[-83,-104],[-29,156]],[[33338,11782],[-212,-284],[-145,-372]],[[32981,11126],[-227,344]],[[32754,11470],[-569,465]],[[32201,13084],[51,75]],[[32252,13159],[236,4]],[[43336,16875],[-189,-175],[-174,-378],[495,-813],[74,-542],[-47,-338],[-348,-243],[-35,-169],[-244,-209],[-11,339],[-58,73]],[[43259,15362],[-35,328],[-336,542],[-206,180],[198,158],[-48,43],[-223,110],[-228,355]],[[42381,17078],[108,62],[232,-56],[213,197],[205,-135],[-8,-164],[205,-107]],[[16248,14704],[38,-244],[-11,-312],[93,-6],[-39,409],[257,136],[152,-28],[105,-188],[292,-13],[195,-100],[184,153],[232,-23],[-152,-62],[102,-74],[194,-108],[199,-249]],[[17972,13245],[-106,-122],[-178,-65],[-88,-186],[-274,220],[128,-397],[101,-17],[-132,-176],[-202,-205],[-179,85],[-63,250]],[[34674,17906],[18,1],[5,-73],[-10,-24],[-15,35],[2,61]],[[27326,13509],[-65,-25]],[[17877,15081],[44,-109],[-84,-20],[-17,127],[57,2]],[[17956,15266],[29,-88],[-114,-20],[15,97],[70,11]],[[17908,15711],[-106,-66],[-32,191],[138,-125]],[[18137,15105],[48,-109],[-85,-16],[-21,123],[58,2]],[[17911,15435],[46,-109],[-84,-20],[-20,127],[58,2]],[[17353,16175],[-33,-150],[-28,157],[61,-7]],[[16992,16094],[-40,190],[269,-183],[-229,-7]],[[26774,21640],[134,0],[69,-133],[314,1],[13,0]],[[27304,21508],[-9,-16]],[[27295,21492],[1,-34]],[[27296,21458],[16,1],[33,4]],[[27345,21463],[2,33]],[[27347,21496],[-26,12]],[[27321,21508],[46,0],[39,0],[58,0],[63,-5]],[[27527,21503],[45,-64],[3,-90],[-165,-141],[-102,-22],[-100,-96],[-168,-291],[65,-163],[-125,-227],[-183,-218],[-352,14],[-199,-150],[-91,33],[-135,193]],[[26020,20281],[-33,514],[54,133],[39,387],[-202,61],[-137,-1]],[[25741,21375],[-62,214],[178,212],[917,-161]],[[26020,20281],[-126,-31],[-175,23],[35,267],[-131,96],[162,504],[-44,235]],[[37272,17360],[-205,373],[-384,-23],[-337,-62]],[[38291,20242],[123,8],[359,-310]],[[17928,15511],[-101,-67],[-32,191],[133,-124]],[[37851,13122],[23,80],[53,57],[74,21],[68,-23],[46,-59],[15,-80],[-23,-80],[-51,-57],[-71,-21],[-71,23],[-48,59],[-15,80]],[[35323,11189],[18,80],[50,57],[72,21],[71,-22],[52,-56],[22,-80],[-16,-81],[-48,-59],[-70,-22],[-73,22],[-55,59],[-23,81]],[[29539,22434],[-358,-124]],[[29181,22310],[12,44],[-161,13],[-114,54],[-279,27]],[[28639,22448],[-90,24]],[[28549,22472],[-9,24]],[[28540,22496],[-16,29]],[[28524,22525],[7,40]],[[28644,22551],[391,46]],[[42307,16898],[31,-91],[63,3],[-20,268]],[[15349,17676],[79,-287],[-9,-28],[-34,-9],[-103,202],[34,128],[33,-6]],[[17741,15919],[-11,64],[117,2],[-47,-65],[-59,-1]],[[17817,14843],[42,-109],[-84,-19],[-16,127],[58,1]],[[27295,21492],[12,22]],[[27307,21514],[40,-18]],[[27345,21463],[-49,-5]],[[28958,21779],[-10,1],[-2,12],[9,7],[8,1],[0,-12],[-5,-9]],[[45927,10106],[-13,79]],[[45914,10185],[96,59],[138,-13],[-221,-125]],[[28062,22987],[-63,29]],[[42671,12452],[67,20]],[[42738,12472],[66,-22],[47,-55],[16,-79],[-21,-76],[-49,-52],[-67,-20],[-66,21],[-45,54],[-16,76],[20,79],[48,54]],[[30224,6420],[-47,-64]],[[31793,7240],[129,-980]],[[32032,6255],[-51,-330],[-103,-128],[-296,-532],[-88,-115],[-286,-325],[-261,-142],[-581,-73],[-280,-106],[-239,124],[-78,321],[75,73],[-280,862]],[[18160,18312],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-3,-1],[-2,0],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,0],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,1],[-2,1],[-3,0],[-2,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,1],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-2,2],[-1,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,2],[-1,3],[-2,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[0,3],[-1,4],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[2,2],[1,3],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,0],[2,1],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,0],[2,-1],[3,0],[2,-1],[2,0],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[1,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[19086,15913],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-2],[-2,0],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-3,0],[-2,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,0],[-3,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[1,4],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[1,2],[2,1],[3,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,0],[2,1],[2,1],[3,0],[2,1],[2,0],[2,1],[2,0],[3,0],[2,1],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[3,-2],[2,-1],[2,-2],[2,-1],[2,-2],[1,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-4],[0,-3],[1,-3],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[18724,14713],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,0],[-2,1],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[1,3],[0,4],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,3],[1,2],[2,3],[1,2],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[1,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[3,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,0],[2,1],[2,1],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,0],[3,-1],[2,0],[2,-1],[2,0],[2,-1],[3,-1],[2,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[1,-3],[0,-3],[1,-3],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3]],[[48994,15111],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-3,-1],[-2,1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,2],[-2,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,3],[1,3],[1,2],[2,3],[1,2],[1,3],[2,3],[1,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[1,3],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,0],[3,1],[2,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,-1],[2,0],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[1,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-3],[1,-2],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[49630,13837],[0,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-4],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,-1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-2,1],[-3,0],[-2,1],[-2,1],[-2,0],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,1],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,4],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,4],[0,3],[1,3],[0,3],[1,3],[1,4],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[2,2],[1,3],[1,3],[1,2],[2,3],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[2,2],[1,3],[2,2],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[3,1],[2,1],[2,0],[2,1],[2,1],[2,1],[3,0],[2,1],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,1],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-1],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-4]],[[51449,10244],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-1,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,4],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[2,2],[1,3],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[1,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,0],[2,1],[2,1],[3,0],[2,1],[2,0],[2,0],[2,1],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-4],[0,-3]],[[53865,10511],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,0],[-3,0],[-2,-1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,0],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,0],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-2,2],[-1,3],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-2,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,4],[0,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[1,3],[0,4],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,4],[1,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[1,3],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[2,3],[1,2],[1,3],[2,2],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,0],[2,1],[2,1],[3,0],[2,1],[2,0],[2,1],[3,0],[2,0],[2,1],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[2,0],[3,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-3],[2,-2],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-4],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[53441,12095],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-2],[-2,-1],[-3,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,-1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,0],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,2],[-2,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,4],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,3],[2,2],[1,3],[1,2],[2,3],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[2,3],[1,2],[2,2],[2,2],[1,2],[2,3],[2,2],[2,1],[1,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,0],[2,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,0],[2,0],[3,1],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[3,-2],[2,-1],[2,-2],[1,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-1],[1,-2],[2,-3],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-4]],[[52819,13589],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-4],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,0],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,2],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,2],[-2,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[1,4],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,0],[2,1],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,1],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,0],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-3],[1,-2],[2,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-4],[0,-3]],[[52328,12044],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-3,1],[-2,2],[-2,1],[-2,2],[-2,1],[-1,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,3],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,2],[-2,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[1,3],[0,4],[0,3],[0,3],[1,3],[0,4],[0,3],[1,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[1,4],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[1,3],[2,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[2,2],[1,3],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[1,2],[2,1],[2,2],[2,1],[2,2],[3,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,0],[2,1],[2,1],[3,0],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-4],[0,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-4],[0,-3]],[[18961,15279],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[1,3],[2,2],[2,2],[2,2],[2,1],[1,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,-1],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,0],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[1,-2],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[2,-2],[1,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[0,-3],[1,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3]],[[18885,17287],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-1,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-3,-1],[-2,1],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-1,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,4],[0,3],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[1,2],[2,2],[2,3],[2,2],[1,2],[2,2],[2,1],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[3,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,0],[2,1],[2,0],[3,1],[2,1],[2,0],[2,0],[2,1],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[1,-2],[2,-1],[2,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[19061,16588],[0,-3],[-1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-3,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,2],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,4],[0,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,3],[1,3],[2,3],[1,2],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,2],[1,3],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[3,2],[2,1],[2,1],[2,0],[2,1],[2,1],[2,1],[3,1],[2,0],[2,1],[2,0],[2,1],[3,0],[2,1],[2,0],[2,0],[3,0],[2,1],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,0],[2,-1],[3,-1],[2,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-2],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[1,-4]],[[18406,14297],[0,-3],[-1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-2,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-2,2],[-1,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[1,3],[0,3],[1,4],[1,3],[1,3],[1,3],[1,3],[1,3],[0,3],[1,3],[2,2],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[3,1],[2,0],[2,1],[2,1],[2,1],[3,0],[2,1],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,1],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[2,0],[3,-1],[2,0],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[2,0],[3,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[2,-2],[1,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[2,-2],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[1,-3],[0,-4]],[[18577,17878],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,2],[-1,3],[-2,3],[-1,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,4],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,2],[2,3],[1,3],[2,2],[1,3],[1,2],[2,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,0],[2,1],[2,1],[3,0],[2,1],[2,0],[2,1],[2,0],[3,0],[2,1],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[0,-4],[1,-3],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3]],[[27797,20969],[0,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-1],[-2,-2],[-3,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[2,3],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,0],[2,1],[2,1],[3,1],[2,0],[2,1],[2,0],[2,1],[3,0],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,-1],[3,0],[2,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,0],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[3,-2],[2,-1],[2,-2],[1,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-3]],[[29298,21803],[0,-3],[0,-2],[0,-2],[0,-2],[0,-3],[-1,-2],[0,-2],[0,-2],[0,-3],[0,-2],[-1,-2],[0,-2],[0,-3],[-1,-2],[0,-2],[0,-2],[-1,-2],[0,-2],[-1,-3],[0,-2],[-1,-2],[0,-2],[-1,-2],[-1,-2],[0,-2],[-1,-2],[-1,-2],[0,-2],[-1,-2],[-1,-2],[-1,-2],[0,-2],[-1,-2],[-1,-2],[-1,-2],[-1,-2],[-1,-1],[-1,-2],[-1,-2],[0,-2],[-1,-1],[-1,-2],[-1,-2],[-2,-1],[-1,-2],[-1,-2],[-1,-1],[-1,-2],[-1,-1],[-1,-2],[-1,-1],[-2,-2],[-1,-1],[-1,-1],[-1,-2],[-1,-1],[-2,-1],[-1,-1],[-1,-2],[-2,-1],[-1,-1],[-1,-1],[-2,-1],[-1,-1],[-1,-1],[-2,-1],[-1,-1],[-2,-1],[-1,0],[-1,-1],[-2,-1],[-1,-1],[-2,0],[-1,-1],[-2,-1],[-1,0],[-2,-1],[-1,0],[-2,-1],[-1,0],[-2,0],[-1,-1],[-2,0],[-1,0],[-2,-1],[-1,0],[-2,0],[-1,0],[-2,0],[-1,0],[-2,0],[-1,0],[-2,0],[-1,0],[-2,0],[-1,1],[-2,0],[-1,0],[-2,1],[-1,0],[-2,0],[-1,1],[-2,0],[-1,1],[-2,0],[-1,1],[-2,1],[-1,0],[-1,1],[-2,1],[-1,1],[-2,0],[-1,1],[-2,1],[-1,1],[-1,1],[-2,1],[-1,1],[-1,1],[-2,1],[-1,1],[-1,2],[-2,1],[-1,1],[-1,1],[-1,2],[-1,1],[-2,1],[-1,2],[-1,1],[-3,0],[-1,2],[0,2],[-1,2],[-1,2],[-1,1],[-1,2],[0,2],[-1,2],[-1,2],[-1,2],[-1,2],[-1,2],[0,1],[-1,2],[-1,2],[-1,2],[-1,2],[0,2],[-1,2],[-1,2],[-1,2],[-1,2],[-1,2],[0,1],[-1,2],[-1,2],[-1,2],[-1,2],[0,2],[-1,2],[-1,1],[-1,2],[-1,2],[2,4],[-1,2],[0,2],[0,3],[-1,2],[0,2],[0,2],[0,3],[0,2],[-1,2],[0,2],[0,3],[0,2],[0,2],[0,2],[0,3],[0,2],[0,2],[0,2],[0,3],[0,2],[0,2],[1,2],[0,3],[0,2],[0,2],[0,2],[1,3],[0,2],[0,2],[1,2],[0,2],[1,3],[0,2],[1,2],[0,2],[1,2],[0,2],[1,2],[0,2],[1,3],[1,2],[0,2],[1,2],[1,2],[1,2],[0,2],[1,1],[1,2],[1,2],[1,2],[0,2],[1,2],[1,2],[1,1],[1,2],[1,2],[1,2],[1,1],[1,2],[1,1],[1,2],[2,2],[1,1],[1,2],[1,1],[1,2],[1,1],[2,1],[1,2],[1,1],[1,1],[1,2],[2,1],[1,1],[1,1],[2,1],[1,1],[1,1],[2,1],[1,1],[1,1],[2,1],[1,1],[2,1],[1,1],[2,0],[1,1],[1,1],[2,0],[1,1],[2,1],[1,0],[2,1],[1,0],[2,0],[1,1],[2,0],[1,0],[2,1],[1,0],[2,0],[1,0],[2,0],[1,0],[2,0],[1,0],[2,0],[1,0],[2,0],[1,0],[2,0],[1,-1],[2,0],[1,0],[2,-1],[1,0],[2,0],[1,-1],[2,0],[1,-1],[2,-1],[1,0],[2,-1],[1,-1],[2,0],[1,-1],[1,-1],[2,-1],[1,-1],[2,-1],[1,-1],[1,-1],[2,-1],[1,-1],[1,-1],[2,-1],[1,-1],[1,-1],[2,-2],[1,-1],[1,-1],[1,-2],[1,-1],[2,-1],[1,-2],[1,-1],[1,-2],[1,-1],[1,-2],[1,-2],[1,-1],[2,-2],[1,-1],[1,-2],[1,-2],[0,-2],[1,-1],[1,-2],[1,-2],[1,-2],[1,-2],[1,-2],[1,-2],[0,-1],[1,-2],[1,-2],[1,-2],[0,-2],[1,-2],[1,-2],[0,-3],[1,-2],[1,-2],[0,-2],[1,-2],[0,-2],[1,-2],[0,-2],[1,-3],[0,-2],[0,-2],[1,-2],[0,-2],[0,-3],[1,-2],[0,-2],[0,-2],[0,-3],[0,-2],[1,-2],[0,-2],[0,-3],[0,-2],[0,-2],[0,-2]],[[23593,15620],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[0,-3],[-1,-4],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-1,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-3,0],[-2,0],[-2,0],[-2,1],[-3,0],[-2,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,1],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,3],[0,4],[0,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[2,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,0],[3,1],[2,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,0],[2,1],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,-1],[2,0],[2,0],[2,-1],[2,0],[3,-1],[2,0],[2,-1],[2,-1],[2,0],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[1,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[28225,12249],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,1],[-2,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-3,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-1,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,2],[-1,3],[-1,3],[-2,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,4],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[0,3],[1,4],[0,3],[1,3],[0,3],[0,4],[1,3],[1,3],[0,3],[1,3],[0,3],[1,3],[1,4],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[2,3],[1,3],[1,2],[1,3],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,2],[2,3],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[1,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[3,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,0],[3,1],[2,1],[2,1],[2,0],[2,1],[3,1],[2,0],[2,0],[2,1],[2,0],[3,0],[2,1],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,-1],[2,0],[2,0],[2,-1],[3,0],[2,0],[2,-1],[2,-1],[2,0],[3,-1],[2,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[1,-3],[1,-3],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4]],[[47343,13620],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-3,-1],[-2,1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,3],[-1,2],[-2,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,3],[1,3],[1,2],[2,3],[1,3],[2,2],[1,3],[1,2],[2,3],[1,2],[2,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,0],[2,1],[2,1],[2,0],[2,1],[3,0],[2,1],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,0],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[2,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-4],[0,-3]],[[30693,9761],[-7,-467]],[[30391,9294],[0,-729]],[[30591,8287],[-319,-75]],[[28841,8368],[10,302],[88,390],[47,238],[110,101],[69,335],[-126,421],[60,110],[-176,546]],[[28919,10880],[-31,170]],[[16701,696],[-130,44],[-82,-1],[-268,47],[-7,272],[-139,-20],[-48,212],[318,939],[-113,487],[62,766],[125,238],[-35,398],[202,550],[-62,710],[35,375],[99,268],[103,282],[12,449],[230,408]],[[18912,6593],[129,-187],[-57,-184],[-269,-273],[-199,-321],[-16,-65]],[[18322,5029],[0,-114],[-27,-25],[-29,-105],[32,-207],[191,-160],[-32,-159],[124,-120],[-151,-353],[-612,-200],[-118,45],[6,-91],[27,-134],[-24,-232],[-230,-57],[-175,101],[-28,-59],[18,-215],[198,-31],[16,-147],[-188,27],[84,-78],[-207,-403],[-200,-109],[-91,-173],[18,-85],[126,-120],[125,-5],[20,-56],[-9,-132],[-211,-174],[-305,-477],[42,-181],[87,-137],[-98,33]],[[16754,116],[6,397],[523,-346],[-31,-68],[-498,17]],[[48613,9514],[210,-492],[120,-159],[131,-613],[26,-274],[368,-284],[169,-504],[113,33],[367,-651],[74,-793],[-160,-739],[-124,-126],[-277,-876],[7,-125],[-251,-66],[-271,-279],[-221,230],[-218,-175],[-469,191],[-97,175],[-72,334],[-365,91],[165,518],[-353,-450],[-298,615],[-369,141],[-372,-52],[-522,-181],[-303,-306],[-202,-9],[-286,29],[-356,-269],[-386,181],[105,386],[-118,687],[-207,591],[-108,242],[97,-97],[-14,113],[121,-221],[-5,164],[-130,314],[83,599],[41,-52],[191,76],[193,185],[653,221],[176,551],[114,149],[88,-237],[253,647],[235,185],[204,-209],[174,-32],[71,318],[353,502],[485,-245],[243,273],[-3,-293],[-217,-543],[521,-466],[259,-165],[97,826],[173,701],[94,-285]],[[48857,3216],[247,-104],[240,87],[45,-38],[-18,-372],[-196,-214],[-123,28],[-83,131],[-52,115],[-83,301],[23,66]],[[34035,21267],[221,-7],[135,63]],[[34391,21323],[176,-239],[97,-66],[-138,-95],[-94,-339]],[[19484,11754],[-45,136],[20,197],[38,36],[310,-28],[-79,-274],[-130,-50],[-114,-17]],[[19318,13111],[79,-117],[81,-430],[94,-39],[2,-127],[-390,-588],[66,-22],[171,163],[16,-152],[57,-86],[165,58],[-21,-178],[43,142],[32,9],[134,257],[95,17],[364,-186],[164,-225],[652,-151],[642,-467],[93,-634],[-238,-513],[-114,-136],[-269,-468],[-41,-996],[-435,-1131],[-352,-15],[-631,-498],[-21,-664],[-165,-242],[-166,-422],[-176,-164],[-113,-266],[-86,-98]],[[12807,29361],[-25,-126],[-417,25],[-97,183],[539,-82]],[[18014,22435],[-43,-126],[108,-32],[-65,-118],[-144,-11],[-47,92],[137,218],[54,-23]],[[6956,24420],[115,105],[177,-412],[-292,307]],[[7280,24026],[-65,-165],[151,-300],[-329,386],[38,87],[205,-8]],[[5865,27398],[790,-181],[1017,232],[408,-25],[24,71],[366,-177],[186,92],[1027,-238],[-21,-200],[564,-17],[318,-175],[141,282],[430,36],[818,-137],[76,141],[302,-44],[129,-58],[296,-114],[259,315],[-113,189],[-357,181],[184,315],[270,-16],[319,-315],[65,-163],[555,-487],[374,343],[-87,181],[633,-110],[-6,-473],[-799,-110],[102,-63],[-205,-189],[-340,142],[-260,-16],[427,-142],[254,-24],[-232,-260],[-243,24],[-81,-87],[-514,87],[541,-181],[-422,-260],[-216,-331],[-21,-268],[54,-134],[194,0],[92,-378],[265,47],[837,-417],[432,-55],[16,-457],[243,-339],[119,-47],[211,220],[-173,536],[475,378],[-86,315],[-254,174],[216,244],[-135,575],[659,24],[627,-323],[-22,-323],[373,-276],[383,496],[443,-725],[54,-244],[179,-212],[427,-126],[-524,-174],[97,-118],[405,221],[243,-205],[27,-237],[-200,-165],[-276,-79],[-145,-181],[-1005,-8],[-335,-268],[-281,-370],[-16,-102],[281,323],[421,205],[260,-79],[10,-111],[-356,-86],[308,-47],[-87,-166],[616,-394],[-702,-409],[-33,267],[249,182],[-49,55],[-378,-158]],[[16982,22017],[-113,473],[-206,79],[-155,-422],[-174,-114],[-529,-8],[-298,-307],[-332,-3],[35,-160],[-548,-269],[-87,73],[94,739],[-157,109],[-193,233],[-535,310],[-141,-68],[-319,13],[-228,123],[-172,0],[-134,169],[-32,-88],[-4176,0]],[[8582,22899],[-886,875],[-259,331]],[[7437,24105],[56,168],[46,139],[-281,165],[-556,717],[-286,-205],[-260,308],[-113,-32],[-108,-8],[-65,24],[-5,2017]],[[14308,28335],[-286,-228],[302,-308],[-119,379],[411,165],[243,-32],[65,-315],[248,24],[244,87],[170,-30],[512,-100],[748,-429],[-22,-332],[831,-487],[-116,-316],[-584,441],[-119,-291],[524,-418],[-70,-228],[-578,275],[0,-126],[459,-299],[-21,-71],[-821,410],[-265,205],[-488,-37],[-209,-3],[-43,150],[135,94],[253,-26],[503,420],[-446,315],[-1504,276],[-713,299],[-11,213],[254,292],[513,31]],[[15810,30375],[2080,-149],[-805,-244],[-465,-197],[-291,-142],[-816,-63],[308,-142],[-141,-181],[-302,-79],[-584,-55],[616,-118],[-426,-161],[-223,54],[-1193,28],[367,166],[-145,118],[556,23],[-438,71],[281,158],[373,0],[-492,315],[892,-150],[-384,189],[-1323,260],[1318,205],[1237,94]],[[9246,27975],[176,170],[502,130],[420,-168],[232,-184],[81,142],[426,278],[232,-402],[378,-261],[333,-322],[-529,-167],[-393,36],[-938,-80],[-756,292],[835,189],[-434,-38],[-565,147],[0,238]],[[18738,23467],[-216,-418],[135,103],[119,-189],[248,0],[33,-292],[102,-71],[-59,-228],[-162,78],[-65,111],[-114,-118],[-86,141],[-324,24],[-259,-24],[199,197],[22,158],[238,496],[189,32]],[[13318,28976],[609,-254],[928,66],[202,-74],[76,-37],[-135,-152],[-185,-41],[-928,-10],[-633,61],[-741,512],[807,-71]],[[9486,28788],[236,147],[369,-65],[247,-122],[372,0],[-212,76],[-28,106],[219,87],[511,-208],[35,-87],[-177,-136],[-345,15],[-653,-137],[-206,71],[487,101],[-967,10],[112,142]],[[8419,28466],[409,30],[623,-74],[255,-149],[-562,-224],[-572,-312],[-388,193],[235,536]],[[13057,29945],[-118,66],[1266,-423],[-644,-333],[-653,213],[-435,289],[584,188]],[[8574,28849],[567,263],[412,52],[169,-45],[-469,-412],[-679,142]],[[14254,26610],[778,-473],[-475,63],[-324,-181],[-55,95],[-221,7],[146,245],[54,244],[97,0]],[[11750,28312],[726,71],[80,-477],[-323,-142],[-629,355],[146,193]],[[11388,28971],[403,-51],[272,-116],[-265,177],[591,-10],[80,-355],[-448,-30],[-612,207],[-21,178]],[[13523,28378],[-264,-254],[-282,-20],[-28,-162],[-187,0],[-101,197],[10,274],[852,-35]],[[7863,23301],[319,-110],[281,-276],[43,-154],[-255,57],[-523,475],[135,8]],[[10049,29367],[379,65],[209,-65],[-49,-87],[-62,-132],[-317,-35],[-459,117],[299,137]],[[16586,78],[144,-8],[40,-70],[-217,12],[33,66]],[[16263,199],[163,10],[71,-178],[-254,133],[20,35]],[[15752,1220],[48,-54],[-61,-173],[-14,178],[27,49]],[[15712,1309],[81,336],[61,-79],[27,-237],[-169,-20]],[[16701,696],[-269,-126],[-45,-263],[-235,143],[-156,153],[-41,306],[-44,60],[24,34],[-81,138],[57,144],[-6,261],[20,84],[-54,114],[67,93],[-253,69],[155,168],[173,55],[142,814],[-244,99],[138,417],[-53,428],[318,957],[-12,749],[168,895],[27,1631]],[[16754,116],[-277,17],[-62,198],[97,244],[249,12],[-7,-471]],[[16162,263],[-278,242],[-44,93],[393,-266],[-71,-69]],[[15745,890],[112,39],[51,-187],[-68,-65],[-95,213]],[[15993,2963],[20,-331],[-129,25],[109,306]],[[15989,2178],[-115,0],[98,350],[17,-350]],[[14389,17203],[327,78],[1225,-577],[-22,-127],[-449,-80],[-50,187],[-700,408],[-58,-3],[-136,-132],[-174,-8],[37,254]],[[14517,16849],[91,-122],[-83,-58],[-28,53],[20,127]],[[28832,24465],[124,-22],[15,-241],[-94,-72],[-132,38],[13,199],[74,98]],[[28368,24136],[1,69],[-75,129],[12,308],[369,185],[8,-162],[-48,-23],[92,-109],[-22,-301],[-110,-97]],[[18377,876],[23,-62],[-230,-159],[-62,74],[133,179],[136,-32]],[[18103,919],[-77,-194],[-71,3],[148,191]],[[53923,8279],[78,-48],[16,-111],[-127,44],[2,168],[31,-53]],[[53870,8548],[166,-40],[-108,-65],[-58,105]],[[28500,21571],[25,-191],[-53,-149],[-72,90],[-34,155],[134,95]],[[28215,22226],[0,-67],[-71,-198],[70,-261]],[[28214,21700],[-208,-132],[-413,67],[-66,-132]],[[27321,21508],[-14,6]],[[27307,21514],[-3,-6]],[[26774,21640],[76,67],[74,423],[-236,440],[-265,73],[-59,159],[34,27],[93,-11],[103,56],[259,-59],[-50,245],[78,5],[211,-55],[203,141],[28,177],[91,18]],[[30519,21182],[9,42]],[[31084,21226],[-65,-145]],[[31019,21081],[-135,47],[-83,-14],[-83,-42],[-68,14],[100,-136],[-84,56],[23,-98],[-81,75],[26,-89],[-141,145],[103,-295],[-49,-70],[74,-14],[74,-141],[19,-107],[-144,37],[32,-122],[-96,56],[67,-177],[-10,-99],[-70,117],[-23,-89],[-70,127],[-45,-56],[-10,154],[-90,80],[36,84],[77,28],[163,-56],[39,33],[-113,51],[-205,-28],[-144,272]],[[30634,19953],[398,-75],[-19,-56],[-186,-19],[-215,75],[22,75]],[[44776,13045],[43,-485],[168,-199],[-168,-6],[-61,-435],[-134,-32],[-79,-615],[-203,-34],[-429,126],[-74,96],[-172,29],[-195,592],[-11,335]],[[43461,12417],[119,103],[138,-187],[249,80],[71,85],[148,-80],[137,63],[82,313],[62,23],[34,281],[212,3],[63,-56]],[[41345,13355],[405,-70],[157,-313],[114,-59],[394,-557],[525,-799],[25,-426],[-165,-123],[-617,612],[-7,243],[-291,496],[-111,306],[-114,66],[8,187],[-328,375],[5,62]],[[48293,11582],[-3,-1432]],[[48290,10150],[-161,211],[-347,-54],[182,340],[-122,314],[-326,199],[-366,103],[-99,2],[-125,283],[309,108],[-238,-17],[-293,323],[304,108],[235,-83],[35,-120],[-18,-161],[43,-166],[34,54],[114,-190],[161,264],[119,38],[-22,45],[116,91],[306,-215],[74,0],[88,-45]],[[45899,12533],[37,-66],[-134,-219],[-584,12],[-85,-161],[116,-265],[128,141],[244,74],[37,-58],[17,-182],[-338,-70],[169,-299],[176,-179],[-31,-353],[-229,45],[-156,430],[9,199],[-105,-79],[34,-66],[-17,-530],[-97,-16],[-54,58],[23,422],[-88,0],[-17,194],[125,579],[54,153],[130,145],[451,-116],[185,207]],[[43158,10851],[591,-118],[110,62],[239,-120],[72,-116],[238,-59],[7,-60],[-49,-61],[-281,-65],[-367,180],[-462,-6],[-72,122],[-187,41],[-53,15],[158,185],[56,0]],[[46424,12727],[22,-521],[-82,-426],[-119,-12],[-48,223],[28,331],[96,306],[103,99]],[[46353,11520],[201,20],[170,-62],[51,-120],[-14,-54],[-215,83],[-236,-54],[43,187]],[[45927,10106],[-226,-120],[-11,60],[224,139]],[[45170,10215],[47,61],[337,6],[10,-60],[-394,-7]],[[44633,10275],[291,-56],[-273,-65],[-18,121]],[[43276,11585],[75,-6],[6,-140],[-107,3],[26,143]],[[46225,11350],[-125,-37],[-59,144],[141,9],[43,-116]],[[45211,9921],[-176,70],[-17,47],[183,-57],[10,-60]],[[43139,11470],[-254,246],[131,121],[123,-367]],[[29103,22162],[-74,0],[-71,-182],[214,-485],[332,-203],[66,-62],[68,-1],[238,-257],[-34,-86],[-80,77],[-139,-65],[59,-199],[-142,-193],[-88,-38],[-27,432],[-66,67],[-401,269],[-331,462],[-139,67],[-140,-66],[-134,1]],[[28998,20518],[417,18],[-31,-272],[-52,-87],[-381,236],[47,105]],[[28518,20718],[-186,-32],[-22,467],[190,32],[40,-227],[-22,-240]],[[48290,21253],[170,-410],[-85,-267],[-78,-48],[-7,-247],[-78,-401],[-85,-66],[-183,-67],[-114,-8],[-174,65],[33,-172],[-182,-191],[-109,139],[0,79],[60,86],[-214,-13],[-237,-105],[-57,-77],[-58,78],[-120,-28],[4,107],[67,-12],[198,242],[256,28],[144,44],[177,101],[77,304],[46,-210],[216,210],[183,315],[0,352],[150,172]],[[48369,22130],[98,-19],[241,-276],[288,57],[-13,-324],[-216,9],[-130,-229],[-380,124],[-98,-238],[-45,219],[78,181],[163,96],[53,219],[-39,181]],[[46729,19588],[55,-11],[117,-60],[39,-165],[-93,-325],[-81,-91],[-187,109],[9,115],[95,167],[-85,-19],[-59,139],[190,141]],[[47009,19343],[-8,145],[-43,-18],[122,163],[99,-30],[22,68],[65,24],[69,-45],[24,-79],[-83,-133],[-118,2],[-62,-135],[-87,38]],[[44397,13244],[233,415],[76,52],[85,-125],[-7,-149],[89,-17],[196,-113],[-117,-75],[-79,6],[63,-119],[-160,-74]],[[43461,12417],[46,138],[66,34],[203,-131],[59,279],[246,103],[77,173],[83,140]],[[42451,13538],[146,-194],[52,-169],[-2,-265],[-2,-143],[57,-45],[71,-257],[0,-5],[-35,12]],[[42671,12452],[-19,-21],[-20,52],[-315,297],[16,60],[-101,160],[-48,235],[-2,144],[-42,181]],[[52879,2991],[96,91],[70,198],[194,-102],[59,-203],[-231,-332],[58,-102],[-47,-32],[-59,27],[-151,-91],[-36,-161],[-88,-214],[-147,-155],[-173,5],[-245,86],[-55,80],[106,214],[183,188],[210,112],[190,177],[66,214]],[[53115,4610],[198,-196],[99,-337],[66,-80],[-8,251],[103,-347],[173,-86],[132,102],[55,-27],[-30,-182],[-58,-161],[-114,6],[-7,-129],[-136,-299],[-140,-102],[-95,64],[95,241],[-216,155],[-19,54],[144,107],[22,251],[-321,707],[57,8]],[[32228,19019],[42,63]],[[32235,18994],[-7,25]],[[48293,11582],[501,-280],[219,-174],[9,-174],[275,-140],[40,-151],[-148,-7],[615,-841],[-110,-21],[-395,146],[-243,424],[-210,111],[-77,-50],[-80,-179],[-162,-146],[-214,23],[-23,27]],[[49899,11232],[110,-48],[-38,-237],[-263,-180],[-123,-7],[-191,125],[5,69],[167,-20],[185,6],[148,146],[0,146]],[[49772,11582],[185,-146],[145,-178],[22,-66],[-33,-111],[-31,36],[-55,215],[-251,215],[18,35]],[[45287,16256],[200,-45],[31,-336],[-172,-342],[43,-171],[12,-141],[105,-5],[67,-138],[-58,-44],[-220,112],[-58,57],[-12,68],[47,64],[-8,67],[-74,-85],[-39,85],[-51,336],[94,-45],[-24,205],[59,313],[58,45]],[[45580,13967],[65,86],[56,-23],[51,-86],[51,109],[47,-46],[-4,148],[113,142],[137,-193],[35,-370],[-63,-205],[-62,222],[-70,-154],[74,-91],[-51,-165],[-187,159],[-43,171],[39,125],[-106,74],[-15,-51],[-82,-57],[-43,103],[-51,-188],[-55,-17],[47,244],[117,63]],[[45061,14650],[82,-193],[-129,-103],[-297,-398],[4,74],[102,171],[168,222],[70,227]],[[45608,14673],[-180,-233],[-4,319],[184,-86]],[[45627,14178],[-129,108],[141,273],[-12,-381]],[[45791,14725],[94,-109],[43,-290],[-55,23],[-86,199],[4,177]],[[45779,14901],[145,11],[59,-341],[-99,80],[-105,250]],[[45612,14793],[19,119],[121,-136],[-4,-57],[-86,108],[-50,-34]],[[29965,24063],[107,215],[153,-8]],[[30492,24071],[-379,8]],[[31769,27611],[461,-278],[333,-25],[732,-327],[35,-155],[-207,-138],[-330,-60],[-803,215],[325,-206],[35,-327],[384,-173],[-166,293],[302,-69],[242,-17],[-71,198],[413,224],[159,447],[479,0],[-119,-396],[266,9],[41,258],[1075,259],[649,-78],[101,-52],[153,61],[-372,301],[739,-92],[371,-149],[360,-181],[118,95],[-354,181],[0,318],[407,422],[526,-43],[-136,-293],[118,-94],[-47,-422],[177,-138],[-218,-275],[-296,-190],[290,17],[377,302],[-17,206],[277,43],[124,-275],[272,-52],[-6,43],[-213,35],[12,215],[-189,86],[-401,-17],[-30,155],[118,181],[-189,154],[290,319],[590,-43],[508,-189],[100,-190],[77,-25],[-6,215],[-401,163],[-101,215],[227,98],[1323,471],[1160,111],[425,18],[166,179],[471,96],[209,-209],[1173,-127],[-83,-215],[-1015,-396],[-260,-206],[903,292],[484,-51],[697,-26],[1116,-52],[714,-585],[148,275],[1121,-112],[124,302],[1370,-147],[378,-284],[838,43],[348,-112],[-17,-198],[746,-40],[402,26],[157,131],[1044,-57],[659,-215],[-1,-856],[-142,-79],[-169,-11],[-163,73],[221,-144],[180,-332],[-63,-115],[-307,95],[-633,-476],[-397,-141],[-604,-6],[-367,23],[-55,-802],[-189,-338],[-310,-350],[-515,-520],[-170,932],[50,361],[1158,925],[100,294],[132,56],[-279,-5],[-23,-226],[-422,-203],[-97,62],[82,214],[-426,-28],[-468,-440],[158,-124],[-538,-74],[-1354,96],[-1010,-925],[592,-141],[220,-260],[0,-248],[-147,-695],[-348,-598],[-546,-750],[-441,45]],[[46870,21571],[-85,429],[131,107],[175,-73],[274,592],[-23,113],[-561,-130],[-54,249],[-407,186],[-313,750],[-410,113],[-372,-84],[-217,-678],[-375,-67]],[[40189,22897],[-26,18]],[[34503,22304],[-231,-197],[-142,-202],[156,-110],[105,-472]],[[33107,21667],[-497,389],[137,83],[5,236],[222,116],[-159,-4]],[[31276,24725],[-48,24]],[[31285,25207],[33,83],[311,18],[-357,130]],[[48526,22383],[-92,-163],[-4,592],[46,565],[-81,158],[8,322],[89,197],[77,40],[89,-333],[-27,-192],[232,-762],[-240,130],[-97,-288],[140,-378],[-140,112]],[[35827,28798],[685,100],[504,117],[464,-54],[-862,-215],[-868,-482],[-578,60],[655,474]],[[35809,27618],[-673,26],[-377,310],[389,327],[419,-77],[-141,-276],[383,-310]],[[40963,29874],[130,86],[372,69],[732,-362],[-142,-232],[-1180,163],[88,276]],[[49104,28729],[738,-26],[-100,-155],[-703,60],[65,121]],[[42510,29590],[413,-155],[6,-87],[-927,-94],[242,224],[266,112]],[[47953,28875],[992,-129],[-65,-129],[-968,-86],[-219,155],[260,189]],[[53945,27773],[204,56],[-3,-133],[-195,-43],[-6,120]],[[0,26425],[0,857],[758,-337],[79,-251],[42,175],[138,-3],[236,-36],[312,-183],[-226,-136],[-251,43],[96,-129],[-32,-147],[-130,-25],[-337,104],[-79,150],[-170,36],[-214,-25],[-105,197],[-69,-274],[-48,-16]],[[5,27686],[12,175],[251,-9],[114,-87],[-377,-79]],[[29835,29734],[248,88],[836,15],[362,-121],[-396,-144],[-575,-44],[-475,206]],[[29688,29711],[440,-268],[-296,-267],[-113,-264],[-560,217],[-13,112],[330,139],[-89,68],[-331,-163],[-227,125],[-222,268],[887,-33],[194,66]],[[30228,29472],[604,-274],[-663,-69],[59,343]],[[31472,21187],[-50,-57],[-140,15],[-162,-107],[-101,43]],[[31299,21356],[28,-103],[145,-66]],[[31472,21187],[148,17],[189,-9],[342,215],[678,-176],[525,32]],[[32479,20006],[-200,57],[-231,-5],[-157,80],[-266,-61],[-96,9],[-239,103],[-244,339],[-45,394],[159,78],[393,75],[-81,112]],[[26546,25035],[8,-134],[240,-127],[4,-66],[-63,-267],[555,-724],[-136,-328],[-71,-67],[-363,-1],[4,-66],[-147,-1],[-279,-135],[-73,-1],[64,134],[276,201],[-152,66],[-17,260],[224,2],[-86,199],[-12,197],[-152,-1],[-176,395],[195,462],[157,2]],[[25902,24266],[152,1],[162,-135],[9,-129],[-226,-2]],[[16982,22017],[-437,-268],[-157,-315],[146,-134],[-594,-149],[-87,-441],[-119,70],[60,-202],[-76,-184],[-108,276],[-32,-410],[162,-338],[-794,-670],[-125,-378],[222,-851],[-43,-331],[-103,-31],[-481,1103],[-124,-103],[-184,166],[-599,-24],[167,-268],[-740,122],[-448,-334],[-33,-497]],[[9457,19307],[-167,252],[-346,182],[-573,1276],[43,118],[6,126],[-65,307],[92,670],[-124,512],[362,-87],[-103,236]],[[7437,24105],[-708,984],[-200,-165],[-459,284],[-216,39],[-886,211],[-642,-337],[-91,10],[0,122],[76,211],[250,92],[-78,52],[-235,-113],[-363,-361],[132,-89],[-804,-634],[-279,-165],[-630,-175],[-42,46],[1092,677],[-126,275],[-500,-70],[-31,340],[-303,-52],[-325,392],[262,333],[555,86],[-36,288],[-577,-92],[-494,248],[533,231],[390,-158],[110,153],[-785,377],[44,116],[647,300],[825,195],[979,-120],[1343,-238]],[[6556,24869],[103,55],[113,-47],[60,-394],[-276,386]],[[1477,24115],[71,147],[222,-102],[-139,-93],[-154,48]],[[1026,23915],[369,55],[0,-68],[-294,-45],[-75,58]],[[52129,8909],[168,-156],[-48,-112],[-93,102],[-27,166]],[[52349,8536],[75,-50],[-49,-4],[-26,54]],[[45337,17647],[86,-69],[-72,-307],[-198,-231],[-9,125],[38,243],[155,239]],[[43534,16514],[248,34],[-51,-305],[-147,-107],[-178,79],[128,299]],[[46870,21571],[-151,-107]],[[45776,20901],[-408,-228],[-42,463],[-364,-392],[-182,-37],[-8,-135],[449,-153],[294,-67],[-19,-85],[-255,-96],[-233,-361],[403,-644],[35,-451],[-503,-1180],[-322,-344],[-398,-150],[-23,7],[-8,-35],[-42,-40],[-396,-137],[-50,-243],[-89,11],[-50,248],[-229,23]],[[28243,21315],[0,-2],[0,-3],[-1,-3],[0,-3],[0,-3],[0,-3],[0,-3],[-1,-3],[0,-3],[0,-3],[-1,-3],[0,-3],[0,-2],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-2],[0,-3],[-1,-3],[-1,-3],[-1,-2],[0,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-2],[-1,-3],[-1,-2],[-1,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-2],[-1,-3],[-1,-2],[-2,-2],[-1,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-2],[-2,-2],[-1,-2],[-2,-2],[-1,-1],[-2,-2],[-1,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-1],[-2,-2],[-2,-1],[-1,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-1,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-2,0],[-2,-1],[-2,0],[-2,0],[-2,0],[-2,0],[-2,0],[-2,0],[-2,0],[-2,0],[-2,1],[-2,0],[-2,0],[-2,1],[-2,0],[-2,1],[-2,0],[-2,1],[-2,0],[-2,1],[-2,1],[-2,1],[-2,0],[-2,1],[-1,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-1,1],[-2,1],[-2,2],[-2,1],[-2,2],[-1,1],[-2,2],[-2,1],[-1,2],[-2,2],[-2,1],[-1,2],[-2,2],[-2,2],[-1,1],[-2,2],[-1,2],[-2,2],[-1,2],[-2,2],[-1,2],[-1,3],[-2,2],[-1,2],[-1,2],[-2,2],[-1,3],[-1,2],[-1,2],[-1,3],[-2,2],[-1,3],[-1,2],[-1,3],[-1,2],[-1,3],[-1,2],[-1,3],[-1,3],[-1,2],[0,3],[-1,3],[-1,2],[-1,3],[0,3],[-1,3],[-1,2],[0,3],[-1,3],[0,3],[-1,3],[0,3],[-1,2],[0,3],[-1,3],[0,3],[0,3],[0,3],[-1,3],[0,3],[0,3],[0,3],[0,3],[0,3],[0,2],[0,3],[0,3],[0,3],[0,3],[0,3],[0,3],[1,3],[0,3],[0,3],[0,3],[1,3],[0,2],[1,3],[0,3],[1,3],[0,3],[1,3],[0,2],[1,3],[1,3],[0,3],[1,3],[1,2],[1,3],[0,3],[1,2],[1,3],[1,3],[1,2],[1,3],[1,2],[1,3],[1,2],[1,3],[2,2],[1,2],[1,3],[1,2],[1,2],[2,3],[1,2],[1,2],[2,2],[1,2],[1,3],[2,2],[1,2],[2,2],[1,2],[2,1],[1,2],[2,2],[2,2],[1,2],[2,1],[2,2],[1,2],[2,1],[2,2],[1,1],[2,2],[2,1],[2,1],[2,2],[1,1],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[1,1],[2,0],[2,1],[2,1],[2,1],[2,1],[2,0],[2,1],[2,0],[2,1],[2,0],[2,1],[2,0],[2,0],[2,0],[2,1],[2,0],[2,0],[2,0],[2,0],[2,0],[2,0],[2,-1],[2,0],[2,0],[2,0],[2,-1],[2,0],[2,-1],[2,0],[2,-1],[2,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,0],[2,-1],[2,-1],[2,-1],[1,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[1,-1],[2,-1],[2,-2],[2,-1],[1,-2],[2,-1],[2,-2],[1,-2],[2,-1],[2,-2],[1,-2],[2,-2],[1,-2],[2,-1],[1,-2],[2,-2],[1,-2],[2,-2],[1,-3],[2,-2],[1,-2],[1,-2],[2,-2],[1,-3],[1,-2],[1,-2],[2,-3],[1,-2],[1,-2],[1,-3],[1,-2],[1,-3],[1,-2],[1,-3],[1,-2],[1,-3],[1,-3],[1,-2],[1,-3],[0,-3],[1,-2],[1,-3],[1,-3],[0,-3],[1,-3],[1,-2],[0,-3],[1,-3],[0,-3],[1,-3],[0,-3],[0,-2],[1,-3],[0,-3],[0,-3],[1,-3],[0,-3],[0,-3],[0,-3],[0,-3],[1,-3],[0,-3],[0,-3]],[[1353,10157],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-2,-1],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-1,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,2],[-2,1],[-2,2],[-2,3],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[-1,3],[0,4],[0,3],[0,3],[1,3],[0,4],[0,3],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[1,2],[2,3],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,1],[2,2],[2,2],[1,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,0],[3,1],[2,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,0],[2,0],[2,0],[3,1],[2,0],[2,0],[2,-1],[3,0],[2,0],[2,0],[2,0],[3,-1],[2,0],[2,-1],[2,0],[3,-1],[2,-1],[2,0],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-3],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-4],[0,-3]],[[46470,9858],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,0],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,3],[-1,2],[-2,3],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,4],[1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[2,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,3],[1,2],[2,3],[1,2],[2,3],[1,2],[1,3],[2,2],[2,3],[1,2],[2,2],[1,3],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,1],[2,0],[2,1],[3,1],[2,0],[2,1],[2,0],[3,1],[2,0],[2,0],[2,0],[2,0],[3,1],[2,0],[2,0],[2,-1],[3,0],[2,0],[2,0],[2,0],[3,-1],[2,0],[2,-1],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[1,-3],[0,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4]],[[28515,22481],[9,44]],[[28524,22525],[11,-21],[5,-8]],[[28549,22472],[-34,9]],[[16182,16900],[68,67],[127,-110],[-195,43]],[[17411,16261],[-23,-58],[-38,-20],[31,86],[30,-8]],[[17579,16128],[6,24],[28,5],[-34,-29]],[[17623,15963],[40,1],[7,-66],[-47,65]],[[17719,15805],[2,35],[13,-34],[-15,-1]],[[35563,17737],[131,-350],[157,-34],[232,-275],[-302,-724],[-427,-465],[-297,-69]],[[35516,17861],[31,42],[8,-86],[0,0]],[[32191,14367],[-112,140],[-12,177]],[[32067,14684],[22,145]],[[32089,14829],[-79,4],[-3,-63],[-96,-1],[42,-55],[13,-143],[-179,-281]],[[31787,14290],[-63,-6],[-136,122],[-61,-44],[-3,-74],[-76,-10],[-39,-78],[-110,-2],[-20,59]],[[31279,14257],[-230,-7],[-77,188],[-115,-26],[-134,-402],[-3,3],[-101,52],[28,236],[-123,246],[-112,379],[-7,241],[138,424],[150,11],[-2,832],[0,103],[150,4],[0,428],[1227,5],[75,-68],[56,36],[243,287],[191,-241],[81,-724],[172,-147],[-44,-117],[-118,-51],[-77,-53],[-6,-181],[-77,-242],[13,-187],[-45,-209],[-17,-139],[-70,-8],[-119,-400],[-4,-15],[-54,20],[-33,-279],[-1,-5],[-55,-6],[12,122]],[[29754,21563],[-96,-18],[-141,98],[-132,150],[-83,163],[-129,10],[-67,150],[35,4]],[[29536,22368],[25,-14]],[[29561,22354],[184,-149]],[[29921,22214],[45,-211]],[[29985,21682],[26,22]],[[30172,21418],[-77,56]],[[30095,21474],[20,30],[38,45],[-168,133]],[[29992,21343],[-112,122]],[[29886,21601],[99,81]],[[30095,21474],[-52,38]],[[945,7768],[0,-4],[1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-1,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-3,1],[-1,2],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,3],[-1,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,3],[-1,2],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-2,3],[-1,3],[-1,2],[-2,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,4],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,3],[1,2],[2,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,1],[2,2],[2,2],[1,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[3,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,0],[2,1],[3,1],[2,0],[2,1],[2,0],[2,1],[3,0],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,-1],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,-1],[2,0],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-3],[2,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[2,-3],[1,-2],[2,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-4],[1,-3],[0,-3],[1,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[1,-3],[0,-4],[0,-3],[1,-3],[0,-3],[0,-4],[0,-3],[0,-3]],[[1314,9144],[0,-3],[0,-4],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-1],[-1,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-3,-1],[-2,0],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-3,0],[-2,1],[-2,0],[-2,1],[-3,0],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-3,2],[-2,1],[-2,2],[-2,2],[-2,1],[-1,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,3],[-2,2],[-1,2],[-2,2],[-2,3],[-1,2],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-2,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,4],[0,3],[-1,3],[0,3],[-1,4],[0,3],[-1,3],[0,3],[0,3],[0,4],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,4],[1,3],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[1,2],[2,2],[2,2],[1,3],[2,2],[2,1],[2,2],[1,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[2,1],[3,1],[2,0],[2,1],[2,1],[2,0],[2,1],[3,0],[2,1],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,-1],[3,0],[2,-1],[2,0],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-1],[1,-2],[2,-3],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[2,-2],[1,-3],[2,-3],[1,-2],[1,-3],[2,-3],[1,-3],[1,-2],[1,-3],[1,-3],[1,-3],[1,-3],[2,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-4],[1,-3],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[1,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3]],[[1672,7972],[1,-3],[0,-3],[0,-3],[0,-4],[-1,-3],[0,-3],[0,-3],[0,-4],[0,-3],[0,-3],[-1,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[0,-3],[-1,-3],[0,-4],[-1,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-3],[-2,-2],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-3,0],[-2,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,0],[-2,-1],[-3,0],[-2,0],[-2,0],[-2,0],[-3,0],[-2,0],[-2,0],[-2,0],[-3,1],[-2,0],[-2,0],[-2,1],[-3,0],[-2,1],[-2,0],[-2,1],[-2,1],[-3,1],[-2,0],[-2,1],[-2,1],[-2,1],[-2,1],[-3,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,1],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,3],[-2,2],[-1,2],[-2,3],[-1,2],[-2,3],[-1,3],[-2,2],[-1,3],[-2,3],[-1,2],[-1,3],[-1,3],[-2,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,3],[-1,4],[-1,3],[0,3],[-1,3],[-1,3],[0,3],[-1,3],[-1,4],[0,3],[-1,3],[0,3],[0,4],[-1,3],[0,3],[0,3],[-1,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[1,3],[0,3],[0,3],[1,4],[0,3],[1,3],[0,3],[1,3],[0,3],[1,3],[0,4],[1,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[1,2],[2,3],[1,2],[2,3],[1,2],[2,2],[1,3],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,1],[2,2],[2,2],[2,1],[1,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[3,1],[2,1],[2,1],[2,1],[2,0],[2,1],[2,1],[2,1],[3,0],[2,1],[2,1],[2,0],[2,0],[3,1],[2,0],[2,0],[2,1],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,0],[3,-1],[2,0],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,0],[2,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[3,-1],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-1],[2,-2],[2,-2],[2,-1],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[2,-2],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-4],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[0,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-4],[0,-3],[0,-3],[0,-4]],[[3305,7602],[0,-4],[0,-3],[0,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-4],[0,-3],[-1,-3],[0,-3],[0,-3],[-1,-4],[0,-3],[-1,-3],[0,-3],[-1,-3],[-1,-3],[0,-3],[-1,-3],[-1,-4],[0,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-3],[-1,-2],[-1,-3],[-2,-3],[-1,-2],[-1,-3],[-1,-3],[-2,-2],[-1,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-3],[-1,-2],[-2,-2],[-1,-2],[-2,-3],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-2],[-2,-2],[-2,-2],[-1,-2],[-2,-1],[-2,-2],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,-1],[-2,-1],[-2,-2],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,-1],[-2,-1],[-2,-1],[-2,0],[-2,-1],[-3,0],[-2,-1],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,-1],[-2,0],[-3,0],[-2,0],[-2,0],[-2,1],[-2,0],[-3,0],[-2,0],[-2,1],[-2,0],[-3,1],[-2,0],[-2,1],[-2,0],[-3,1],[-2,1],[-2,1],[-2,1],[-2,0],[-2,1],[-3,1],[-2,2],[-2,1],[-2,1],[-2,1],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,1],[-2,2],[-2,2],[-2,1],[-2,2],[-2,2],[-2,2],[-2,2],[-2,2],[-1,2],[-2,2],[-2,2],[-2,2],[-1,3],[-2,2],[-2,2],[-1,2],[-2,3],[-2,2],[-1,3],[-2,2],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-2,2],[-1,3],[-1,3],[-1,3],[-2,3],[-1,3],[-1,3],[-1,2],[-1,3],[-1,3],[-1,3],[-1,4],[0,3],[-1,3],[-1,3],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[-1,3],[-1,3],[0,3],[-1,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[-1,3],[0,3],[0,4],[0,3],[0,3],[0,3],[0,4],[0,3],[0,3],[1,4],[0,3],[0,3],[0,3],[1,3],[0,4],[0,3],[1,3],[0,3],[1,3],[0,3],[1,4],[1,3],[0,3],[1,3],[1,3],[0,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,3],[1,2],[1,3],[1,3],[1,3],[1,2],[2,3],[1,3],[1,2],[1,3],[2,3],[1,2],[1,3],[2,2],[1,3],[2,2],[1,2],[2,3],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[1,2],[2,2],[2,2],[2,2],[2,2],[1,2],[2,1],[2,2],[2,2],[2,1],[2,2],[2,1],[2,2],[2,1],[2,1],[2,1],[2,2],[2,1],[2,1],[2,1],[2,1],[3,1],[2,1],[2,1],[2,0],[2,1],[2,1],[2,0],[3,1],[2,0],[2,1],[2,0],[3,0],[2,1],[2,0],[2,0],[2,0],[3,0],[2,0],[2,0],[2,0],[3,0],[2,-1],[2,0],[2,0],[3,-1],[2,0],[2,-1],[2,0],[2,-1],[3,-1],[2,0],[2,-1],[2,-1],[2,-1],[3,-1],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[2,-1],[2,-1],[2,-2],[2,-1],[3,-2],[2,-1],[1,-2],[2,-2],[2,-1],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-2],[1,-2],[2,-2],[2,-3],[1,-2],[2,-2],[2,-3],[1,-2],[2,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-2],[2,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[1,-3],[0,-3],[1,-3],[1,-3],[1,-4],[1,-3],[0,-3],[1,-3],[0,-3],[1,-3],[1,-4],[0,-3],[0,-3],[1,-3],[0,-3],[1,-4],[0,-3],[0,-3],[0,-4],[1,-3],[0,-3],[0,-3]],[[31279,14257],[11,-31],[1,-5],[8,-23],[108,2]],[[31407,14200],[0,-1],[2,1]],[[31409,14200],[39,78]],[[31448,14278],[0,1],[76,9]],[[31524,14288],[3,74],[61,44]],[[31588,14406],[136,-122]],[[31724,14284],[63,6]],[[31787,14290],[179,281]],[[31966,14571],[-13,143],[-42,55],[96,1],[3,63],[79,-4]],[[32067,14684],[12,-177]],[[32079,14507],[112,-140]],[[32191,14367],[-12,-122],[55,6]],[[32234,14251],[-30,-252],[-123,8],[-38,-137],[137,-62],[139,-243],[73,-238],[62,1],[34,-165],[-36,-1],[-15,0],[-18,-1],[-167,-2],[-51,-75],[-72,-105],[-215,-47],[-200,19],[-194,226],[-205,-75],[-101,150],[-33,133],[-122,99],[-3,122],[-184,192],[12,71],[-161,141]],[[30723,14010],[134,402],[115,26]],[[30972,14438],[77,-188]],[[31049,14250],[230,7]],[[46409,20623],[-209,-79],[-58,-96]],[[32442,17229],[-122,-143],[-121,-144],[-56,-36],[-75,68]],[[38294,19344],[-132,74]],[[38162,19418],[-41,296],[95,119],[-215,210]],[[38001,20043],[79,163]],[[38428,19214],[97,86]],[[38525,19300],[-4,59],[93,44],[110,-74],[168,-32]],[[30152,21549],[44,44],[-15,32],[34,20],[19,-34],[26,-3],[17,-41],[28,-12],[-4,-23],[57,-21],[-29,-73],[4,-19]],[[46022,10162],[222,-185]],[[18176,14415],[-321,317]],[[18472,14766],[-561,211]],[[18704,15274],[-513,-270]],[[18829,15885],[-862,-663]],[[17095,16203],[867,1954],[10,16]],[[18810,16526],[-890,-990]],[[32069,16974],[564,12]],[[18650,17181],[-823,-1195]],[[18359,17743],[-727,-1783]],[[40937,18039],[246,39],[90,111],[170,153],[261,-96]],[[38773,19940],[156,91],[97,21],[100,-130],[53,20],[-51,-186],[-73,-45],[-18,-85],[-59,-15],[-2,-1]],[[27602,21129],[-266,332]],[[28163,21478],[51,218]],[[29123,21806],[-158,-11]],[[32270,19082],[11,-13],[-46,-75]],[[32419,19058],[-38,-26],[-44,-6],[-9,9],[10,42],[40,40]],[[32378,19117],[-13,16],[-22,1],[2,47],[3,48]],[[32370,19287],[34,-18],[28,-15]],[[32252,13159],[11,25],[82,44],[22,17],[8,-6],[15,13],[5,0],[-4,-20],[15,-3],[2,5],[7,0],[-1,-18],[-4,-10],[-4,-12],[13,-33],[18,1],[0,11],[7,5],[6,-4],[2,-12]],[[38268,19356],[0,1],[0,1],[0,2],[0,1],[0,2],[0,0],[0,0],[-2,21],[-1,3],[-1,2],[-1,1],[-2,1],[-2,1],[-3,1],[-4,1],[-3,0],[-4,1],[-1,1],[-2,1],[-2,2],[-21,26],[0,1],[-2,2],[-1,2],[0,2],[0,4],[-1,3],[0,3],[1,4],[1,2],[0,1],[2,2],[2,1],[1,0],[4,2],[1,1],[2,2],[2,4],[2,3],[1,6],[7,25],[0,4],[0,2],[0,3],[-1,3],[-1,2],[-1,1],[-1,2],[-2,2],[-4,4],[-4,3],[-5,3],[-2,2],[-3,2],[-2,1],[-1,3],[-2,4],[-1,4],[0,2],[0,1],[1,6],[0,3],[1,1],[0,1],[1,3],[1,3],[3,7],[2,3],[1,1],[2,1],[2,1],[3,0],[4,0],[2,0],[3,1],[2,1],[3,2],[2,1],[2,2],[3,3],[3,3],[3,4],[0,1],[2,3],[1,5],[0,3],[0,1],[0,2],[-1,2],[-1,2],[-1,1],[-1,1],[-4,1],[-23,2],[-6,-1],[-3,-1],[-2,-1],[-2,-1],[-2,0],[-1,1],[-1,0],[-3,2],[-1,1],[-1,2],[-2,2],[-1,3],[-1,2],[-1,3],[0,3],[1,4],[1,2],[1,2],[2,2],[2,2],[2,1],[3,1],[2,2],[2,2],[1,3],[0,1],[0,2],[-1,3],[-4,15],[-2,3],[0,0],[-1,1],[-3,1],[-1,1],[-1,0],[-1,-1],[-3,0],[-4,0],[-4,1],[-1,1],[-4,3],[-1,3],[-1,2],[-1,2],[-1,1],[0,4],[0,1],[0,1],[2,4],[10,21],[4,6],[5,19],[0,1],[0,2],[1,2],[1,2],[1,1],[2,1],[3,2],[12,3],[9,1],[3,1],[2,1],[6,7],[2,1],[1,1],[4,3],[8,4],[4,1],[4,1],[3,0],[2,0],[9,-3],[4,-2],[2,-1],[4,-2],[3,-2],[4,-2],[12,-5],[5,-2],[3,-1],[56,-13],[7,-1],[4,-1],[7,0],[1,0],[8,0],[15,-11],[1,-1],[5,-3],[1,0],[37,-12],[4,0],[19,1],[2,0],[2,1],[1,1],[1,1],[1,2],[2,3],[2,3],[0,1],[1,1],[3,3],[6,6],[6,3],[3,2],[4,0],[2,0],[3,0],[3,-1],[3,-1],[4,-3],[3,-3],[3,-1],[1,-1],[1,1],[2,1],[6,3],[1,1],[1,1],[0,1],[1,2],[1,4],[5,9],[2,3],[1,1],[19,11],[3,2],[3,1],[1,0],[2,0],[2,-1],[2,-2],[21,-2],[7,0],[1,0],[3,-1],[2,-1],[1,-2],[2,-3],[1,-2],[2,-4],[1,-1],[2,-2],[2,-2],[3,-1],[1,0],[1,-1],[3,1],[5,2],[1,1]],[[31444,14270],[4,8]],[[31524,14288],[3,74],[61,44]],[[31724,14284],[63,6],[179,281]],[[32089,14829],[-22,-145],[12,-177]],[[32234,14251],[-1,-12]],[[30726,14008],[-3,2]],[[30723,14010],[134,402],[115,26]],[[31049,14250],[230,7]],[[31279,14257],[12,-36],[8,-23],[108,2]],[[31407,14200],[2,0]],[[31409,14200],[35,70]],[[38001,20043],[79,162],[0,0],[133,27]],[[38890,19296],[2,1]],[[38525,19300],[-100,-83]],[[38425,19217],[-108,113],[-24,15],[-131,73]],[[32077,12246],[31,13],[-12,-30],[23,0],[3,-37],[20,30],[29,-36],[25,25],[2,-68],[43,-77],[10,44],[51,22],[25,-43],[-119,-61],[11,-97],[-40,-54],[18,-25],[-29,7],[25,-41],[-46,10],[7,-44],[-25,-1],[17,-21],[-53,-36],[25,13],[14,-32],[-51,-3],[22,-29],[60,20],[11,-32],[-61,-72],[-72,36],[-13,-53],[25,-53],[-20,16],[-21,-46],[9,115],[-22,-6],[-3,30],[-20,-40],[5,26],[-50,42],[-24,-33],[15,-33],[-20,17],[-15,-27],[15,-35],[-19,26],[-17,-41],[11,47],[-22,17],[9,38],[-22,4],[-3,72],[37,159],[-23,107],[51,107],[-17,40],[67,23],[12,32],[17,-16],[13,54],[2,-44],[33,22],[14,-23],[32,75]],[[31475,10855],[29,62],[-43,121],[25,211],[-32,-42],[16,209],[28,-5],[-1,-87],[49,-147],[-11,-100],[29,-24],[-6,-96],[32,-94],[-36,-84],[36,-55],[30,11],[63,-112],[2,-119],[85,-201],[6,-70],[-24,-12],[-53,70],[-22,-23],[-14,33],[22,64],[-47,66],[-23,134],[-93,117],[-47,173]],[[32385,8992],[-55,89],[-25,-61],[-23,42],[12,83],[-48,73],[4,100],[-45,139],[43,138],[-9,265],[-54,136],[15,66],[75,-101],[41,-231],[36,-98],[-2,-28],[-47,-179],[26,-282],[31,-6],[25,-145]],[[36030,21829],[-60,5],[7,122],[18,27],[27,71],[-7,58],[3,43],[-58,6],[1,26],[-5,1],[-2,-8],[-2,-38],[-20,2],[-16,-34],[-1,-41],[24,-3],[-25,-22],[-11,-18],[-1,-15],[6,-1],[10,3],[5,13],[-2,-51],[11,-1],[-22,-71],[2,6],[-6,1],[1,11],[-5,-8],[0,-29],[-12,4],[-45,-11],[-11,109],[17,48],[9,15],[8,34],[20,27],[5,26],[10,17],[10,68],[74,6],[9,11],[9,3],[-9,-59],[51,1],[24,96],[-60,6],[28,24],[44,0],[-3,-58],[35,14],[101,-11],[0,-16],[-21,3],[-19,-40],[-37,15],[-69,-25],[-2,-42],[13,-4],[46,8],[26,-12],[-8,-103],[24,-72],[13,-11],[-8,-22],[-7,-39],[-24,-19],[-18,-30],[-35,-22],[-60,6]],[[13805,22900],[147,-49],[128,2],[87,-174],[152,-8],[-27,-74],[67,-70],[-30,-68],[65,-21],[-29,-13],[18,-28],[-25,-29],[11,-18],[51,15],[19,-50],[172,-34],[172,-34],[21,24],[12,-14],[-24,-9],[30,5],[-25,-21],[130,1],[61,-75],[8,-49],[43,0],[-10,-32],[21,-20],[-17,-5],[67,-82],[-67,15],[17,-30],[-15,-47],[-84,56],[-44,-28],[7,43],[-36,-8],[28,46],[-31,-12],[-20,74],[-62,4],[52,-64],[13,-79],[-72,-116],[0,-162],[-72,-52],[-29,-21],[-57,221],[-91,-22],[-41,-70],[-40,24],[12,60],[79,77],[4,107],[-23,40],[29,7],[-18,52],[-241,109],[-18,-54],[29,-25],[-71,-32],[-21,-109],[5,50],[-24,-31],[15,79],[-78,-66],[-68,-185],[14,-58],[-17,-36],[44,-83],[-16,-218],[-68,-110],[-57,-31],[-57,31],[-36,98],[7,125],[-22,98],[88,343],[-41,12],[-52,-69],[-16,9],[32,80],[29,12],[99,202],[1,-51],[64,45],[-25,-45],[14,-18],[59,78],[106,31],[116,-55],[17,45],[112,-10],[-55,44],[-11,56],[-104,6],[11,64],[-179,-22],[-76,-56],[-106,19],[-70,85],[-71,-16],[22,31],[-50,-45],[5,50],[-31,53],[-270,-146],[-46,29],[-30,-22],[29,65],[-16,15],[-137,-57],[-50,12],[200,187],[217,110],[30,81],[57,21],[-27,-58],[29,12],[39,106],[26,-21],[-37,-72],[34,50],[19,-11],[15,39],[-24,45]],[[13997,22085],[-38,-23],[-19,-73],[57,96]],[[13849,22537],[33,27],[-68,0],[-58,-61],[28,3],[-2,-45],[67,76]],[[14615,22237],[-50,-21],[172,-69],[46,31],[-35,-31],[20,-8],[41,61],[-14,23],[-18,-38],[-19,54],[-36,-31],[-20,34],[-43,-19],[7,-26],[-51,40]],[[15176,21640],[-29,-13],[-65,29],[103,111],[209,47],[85,-40],[43,19],[-29,1],[30,37],[-107,1],[82,20],[19,-8],[-15,-11],[179,81],[-44,-42],[-42,-40],[46,-25],[-36,-32],[17,-61],[-79,-55],[-127,-19],[-134,31],[-93,-25],[-13,-6]],[[15188,21564],[24,3],[4,-31],[-127,-109],[-149,-85],[-149,-85],[-114,-25],[-89,16],[54,18],[-114,40],[99,204],[26,5],[-3,-27],[10,-4],[25,-8],[-2,-32],[-88,-17],[-16,-45],[93,-35],[17,47],[80,29],[79,86],[183,-24],[-50,16],[37,39],[170,24]],[[31804,12633],[0,-80],[-116,-176],[-33,62],[164,240],[-15,-46]],[[16687,8592],[-57,2],[6,45],[-56,50],[0,-30],[-32,16],[12,61],[28,-34],[-29,68],[13,26],[26,9],[101,-148],[37,-7],[-21,-24],[11,-33],[38,-24],[-55,-24],[14,-35],[-36,24],[3,49],[33,8],[-40,39],[4,-38]],[[31268,14379],[176,0],[-1,-110],[-34,-69],[-35,-1],[-26,0],[-1,0],[-13,0],[-35,0],[0,-1],[-1,4],[-8,24],[-11,31],[0,0],[-11,37],[0,85]]],objects:{general:{type:\"GeometryCollection\",geometries:[{arcs:[[0,1,2,3,4,5,6,7,8,9,10,11]],type:\"Polygon\",properties:{CNTRY_TERR:\"Israel\",SOVEREIGN:\"Israel\",ISO_3_CODE:\"ISR\",ISO_2_CODE:\"IL\",UN_CODE:376,WHO_CODE:3150,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[12,13,14,15,16,17,18,19,20,21]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saudi Arabia\",SOVEREIGN:\"Saudi Arabia\",ISO_3_CODE:\"SAU\",ISO_2_CODE:\"SA\",UN_CODE:682,WHO_CODE:3340,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[22,-22,-8,23,-3,24]],type:\"Polygon\",properties:{CNTRY_TERR:\"Jordan\",SOVEREIGN:\"Jordan\",ISO_3_CODE:\"JOR\",ISO_2_CODE:\"JO\",UN_CODE:400,WHO_CODE:3170,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[25,26,27,28,-18]],type:\"Polygon\",properties:{CNTRY_TERR:\"United Arab Emirates\",SOVEREIGN:\"United Arab Emirates\",ISO_3_CODE:\"ARE\",ISO_2_CODE:\"AE\",UN_CODE:784,WHO_CODE:3405,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-20,29,30]],type:\"Polygon\",properties:{CNTRY_TERR:\"Yemen\",SOVEREIGN:\"Yemen\",ISO_3_CODE:\"YEM\",ISO_2_CODE:\"YE\",UN_CODE:887,WHO_CODE:3420,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:15}},{arcs:[[31,32,33,34,35,36,37,38,39,40,41]],type:\"Polygon\",properties:{CNTRY_TERR:\"India\",SOVEREIGN:\"India\",ISO_3_CODE:\"IND\",ISO_2_CODE:\"IN\",UN_CODE:356,WHO_CODE:3100,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:534}},{arcs:[[42,43,44,45,46,47]],type:\"Polygon\",properties:{CNTRY_TERR:\"Kazakhstan\",SOVEREIGN:\"Kazakhstan\",ISO_3_CODE:\"KAZ\",ISO_2_CODE:\"KZ\",UN_CODE:398,WHO_CODE:4182,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[48,49,50,51]],type:\"Polygon\",properties:{CNTRY_TERR:\"Panama\",SOVEREIGN:\"Panama\",ISO_3_CODE:\"PAN\",ISO_2_CODE:\"PA\",UN_CODE:591,WHO_CODE:2350,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[52,53,-9,54]],type:\"Polygon\",properties:{CNTRY_TERR:\"Egypt\",SOVEREIGN:\"Egypt\",ISO_3_CODE:\"EGY\",ISO_2_CODE:\"EG\",UN_CODE:818,WHO_CODE:1125,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:9}},{arcs:[[55,56,57,58,59,60,-50]],type:\"Polygon\",properties:{CNTRY_TERR:\"Colombia\",SOVEREIGN:\"Colombia\",ISO_3_CODE:\"COL\",ISO_2_CODE:\"CO\",UN_CODE:170,WHO_CODE:2130,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[-60,61,62]],type:\"Polygon\",properties:{CNTRY_TERR:\"Ecuador\",SOVEREIGN:\"Ecuador\",ISO_3_CODE:\"ECU\",ISO_2_CODE:\"EC\",UN_CODE:218,WHO_CODE:2180,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-62,-59,63,64,65,66]],type:\"Polygon\",properties:{CNTRY_TERR:\"Peru\",SOVEREIGN:\"Peru\",ISO_3_CODE:\"PER\",ISO_2_CODE:\"PE\",UN_CODE:604,WHO_CODE:2370,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[67,68,69,70,71]],type:\"Polygon\",properties:{CNTRY_TERR:\"Benin\",SOVEREIGN:\"Benin\",ISO_3_CODE:\"BEN\",ISO_2_CODE:\"BJ\",UN_CODE:204,WHO_CODE:1025,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:8}},{arcs:[[72,73,74,75,76,77,78,79,80,81,82,83]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mozambique\",SOVEREIGN:\"Mozambique\",ISO_3_CODE:\"MOZ\",ISO_2_CODE:\"MZ\",UN_CODE:508,WHO_CODE:1320,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:15}},{arcs:[[84,85]],type:\"Polygon\",properties:{CNTRY_TERR:\"Dominican Republic\",SOVEREIGN:\"Dominican Republic\",ISO_3_CODE:\"DOM\",ISO_2_CODE:\"DO\",UN_CODE:214,WHO_CODE:2170,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[86,87,88,89,90,91]],type:\"Polygon\",properties:{CNTRY_TERR:\"Botswana\",SOVEREIGN:\"Botswana\",ISO_3_CODE:\"BWA\",ISO_2_CODE:\"BW\",UN_CODE:72,WHO_CODE:1030,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[92,93,94,95,96,97,98,99,100,101,102,103,104]],type:\"Polygon\",properties:{CNTRY_TERR:\"Germany\",SOVEREIGN:\"Germany\",ISO_3_CODE:\"DEU\",ISO_2_CODE:\"DE\",UN_CODE:276,WHO_CODE:4085,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-105,105,106]],type:\"Polygon\",properties:{CNTRY_TERR:\"Netherlands\",SOVEREIGN:\"Netherlands\",ISO_3_CODE:\"NLD\",ISO_2_CODE:\"NL\",UN_CODE:528,WHO_CODE:4210,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[107,108,109,110,111,112,113,114,115,116,117]],type:\"Polygon\",properties:{CNTRY_TERR:\"Iran (Islamic Republic of)\",SOVEREIGN:\"Iran (Islamic Republic of)\",ISO_3_CODE:\"IRN\",ISO_2_CODE:\"IR\",UN_CODE:364,WHO_CODE:3130,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:7}},{arcs:[[118,119,120,121,122,123,-79,124,125,126,-89,127,128,129,130,131,132,133]],type:\"Polygon\",properties:{CNTRY_TERR:\"Zambia\",SOVEREIGN:\"Zambia\",ISO_3_CODE:\"ZMB\",ISO_2_CODE:\"ZM\",UN_CODE:894,WHO_CODE:1560,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:12}},{arcs:[[134,135,136,137,138,139,140,141]],type:\"Polygon\",properties:{CNTRY_TERR:\"Romania\",SOVEREIGN:\"Romania\",ISO_3_CODE:\"ROU\",ISO_2_CODE:\"RO\",UN_CODE:642,WHO_CODE:4270,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[142]],type:\"Polygon\",properties:{CNTRY_TERR:\"Iceland\",SOVEREIGN:\"Iceland\",ISO_3_CODE:\"ISL\",ISO_2_CODE:\"IS\",UN_CODE:352,WHO_CODE:4160,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[143,144,145,146,147]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mexico\",SOVEREIGN:\"Mexico\",ISO_3_CODE:\"MEX\",ISO_2_CODE:\"MX\",UN_CODE:484,WHO_CODE:2310,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[148,149,-146]],type:\"Polygon\",properties:{CNTRY_TERR:\"Belize\",SOVEREIGN:\"Belize\",ISO_3_CODE:\"BLZ\",ISO_2_CODE:\"BZ\",UN_CODE:84,WHO_CODE:2045,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-150,150,151,152,153,-147]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guatemala\",SOVEREIGN:\"Guatemala\",ISO_3_CODE:\"GTM\",ISO_2_CODE:\"GT\",UN_CODE:320,WHO_CODE:2250,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[154,155,156]],type:\"Polygon\",properties:{CNTRY_TERR:\"El Salvador\",SOVEREIGN:\"El Salvador\",ISO_3_CODE:\"SLV\",ISO_2_CODE:\"SV\",UN_CODE:222,WHO_CODE:2190,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[157,158,-155,159,-152,160]],type:\"Polygon\",properties:{CNTRY_TERR:\"Honduras\",SOVEREIGN:\"Honduras\",ISO_3_CODE:\"HND\",ISO_2_CODE:\"HN\",UN_CODE:340,WHO_CODE:2280,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-86,161]],type:\"Polygon\",properties:{CNTRY_TERR:\"Haiti\",SOVEREIGN:\"Haiti\",ISO_3_CODE:\"HTI\",ISO_2_CODE:\"HT\",UN_CODE:332,WHO_CODE:2270,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:5}},{arcs:[[162]],type:\"Polygon\",properties:{CNTRY_TERR:\"Jamaica\",SOVEREIGN:\"Jamaica\",ISO_3_CODE:\"JAM\",ISO_2_CODE:\"JM\",UN_CODE:388,WHO_CODE:2290,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[163,164,165,-158]],type:\"Polygon\",properties:{CNTRY_TERR:\"Nicaragua\",SOVEREIGN:\"Nicaragua\",ISO_3_CODE:\"NIC\",ISO_2_CODE:\"NI\",UN_CODE:558,WHO_CODE:2340,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-165,166,-52,167]],type:\"Polygon\",properties:{CNTRY_TERR:\"Costa Rica\",SOVEREIGN:\"Costa Rica\",ISO_3_CODE:\"CRI\",ISO_2_CODE:\"CR\",UN_CODE:188,WHO_CODE:2140,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[168,169,170,171]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guyana\",SOVEREIGN:\"Guyana\",ISO_3_CODE:\"GUY\",ISO_2_CODE:\"GY\",UN_CODE:328,WHO_CODE:2260,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[172,173,174,-170]],type:\"Polygon\",properties:{CNTRY_TERR:\"Suriname\",SOVEREIGN:\"Suriname\",ISO_3_CODE:\"SUR\",ISO_2_CODE:\"SR\",UN_CODE:740,WHO_CODE:2430,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[175,176,-174]],type:\"Polygon\",properties:{CNTRY_TERR:\"French Guiana\",SOVEREIGN:\"France\",ISO_3_CODE:\"GUF\",ISO_2_CODE:\"GF\",UN_CODE:254,WHO_CODE:2210,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[177]],type:\"Polygon\",properties:{CNTRY_TERR:\"Trinidad and Tobago\",SOVEREIGN:\"Trinidad and Tobago\",ISO_3_CODE:\"TTO\",ISO_2_CODE:\"TT\",UN_CODE:780,WHO_CODE:2440,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[178,179,180,-65,181]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bolivia (Plurinational State of)\",SOVEREIGN:\"Bolivia (Plurinational State of)\",ISO_3_CODE:\"BOL\",ISO_2_CODE:\"BO\",UN_CODE:68,WHO_CODE:2060,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[182,-179,183]],type:\"Polygon\",properties:{CNTRY_TERR:\"Paraguay\",SOVEREIGN:\"Paraguay\",ISO_3_CODE:\"PRY\",ISO_2_CODE:\"PY\",UN_CODE:600,WHO_CODE:2360,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[184,185,186]],type:\"Polygon\",properties:{CNTRY_TERR:\"Uruguay\",SOVEREIGN:\"Uruguay\",ISO_3_CODE:\"URY\",ISO_2_CODE:\"UY\",UN_CODE:858,WHO_CODE:2460,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[187,188,189,190]],type:\"Polygon\",properties:{CNTRY_TERR:\"Finland\",SOVEREIGN:\"Finland\",ISO_3_CODE:\"FIN\",ISO_2_CODE:\"FI\",UN_CODE:246,WHO_CODE:4070,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[191,192,-189]],type:\"Polygon\",properties:{CNTRY_TERR:\"Sweden\",SOVEREIGN:\"Sweden\",ISO_3_CODE:\"SWE\",ISO_2_CODE:\"SE\",UN_CODE:752,WHO_CODE:4290,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[193,194,195,196,197,198,-96,199,200,201]],type:\"Polygon\",properties:{CNTRY_TERR:\"Poland\",SOVEREIGN:\"Poland\",ISO_3_CODE:\"POL\",ISO_2_CODE:\"PL\",UN_CODE:616,WHO_CODE:4230,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[202,203]],type:\"Polygon\",properties:{CNTRY_TERR:\"Ireland\",SOVEREIGN:\"Ireland\",ISO_3_CODE:\"IRL\",ISO_2_CODE:\"IE\",UN_CODE:372,WHO_CODE:4170,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-106,-104,204,205,206]],type:\"Polygon\",properties:{CNTRY_TERR:\"Belgium\",SOVEREIGN:\"Belgium\",ISO_3_CODE:\"BEL\",ISO_2_CODE:\"BE\",UN_CODE:56,WHO_CODE:4020,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-101,207,208,209,210]],type:\"Polygon\",properties:{CNTRY_TERR:\"Switzerland\",SOVEREIGN:\"Switzerland\",ISO_3_CODE:\"CHE\",ISO_2_CODE:\"CH\",UN_CODE:756,WHO_CODE:4300,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[211,-97,-199,212]],type:\"Polygon\",properties:{CNTRY_TERR:\"Czech Republic\",SOVEREIGN:\"Czech Republic\",ISO_3_CODE:\"CZE\",ISO_2_CODE:\"CZ\",UN_CODE:203,WHO_CODE:4045,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[213,214,215,216,-141,217,218,219,220,221]],type:\"Polygon\",properties:{CNTRY_TERR:\"Hungary\",SOVEREIGN:\"Hungary\",ISO_3_CODE:\"HUN\",ISO_2_CODE:\"HU\",UN_CODE:348,WHO_CODE:4150,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[222,223,224,225,226]],type:\"Polygon\",properties:{CNTRY_TERR:\"Albania\",SOVEREIGN:\"Albania\",ISO_3_CODE:\"ALB\",ISO_2_CODE:\"AL\",UN_CODE:8,WHO_CODE:4005,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[227]],type:\"Polygon\",properties:{CNTRY_TERR:\"Cyprus\",SOVEREIGN:\"Cyprus\",ISO_3_CODE:\"CYP\",ISO_2_CODE:\"CY\",UN_CODE:196,WHO_CODE:3080,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[228,229,-25,-2,230,231]],type:\"Polygon\",properties:{CNTRY_TERR:\"Syrian Arab Republic\",SOVEREIGN:\"Syrian Arab Republic\",ISO_3_CODE:\"SYR\",ISO_2_CODE:\"SY\",UN_CODE:760,WHO_CODE:3370,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-231,-1,232]],type:\"Polygon\",properties:{CNTRY_TERR:\"Lebanon\",SOVEREIGN:\"Lebanon\",ISO_3_CODE:\"LBN\",ISO_2_CODE:\"LB\",UN_CODE:422,WHO_CODE:3210,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[233,234,235,236,237,238]],type:\"Polygon\",properties:{CNTRY_TERR:\"Libyan Arab Jamahiriya\",SOVEREIGN:\"Libyan Arab Jamahiriya\",ISO_3_CODE:\"LBY\",ISO_2_CODE:\"LY\",UN_CODE:434,WHO_CODE:1250,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[239,-239,240]],type:\"Polygon\",properties:{CNTRY_TERR:\"Tunisia\",SOVEREIGN:\"Tunisia\",ISO_3_CODE:\"TUN\",ISO_2_CODE:\"TN\",UN_CODE:788,WHO_CODE:1520,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[241,-241,-238,242,243,244,245,246]],type:\"Polygon\",properties:{CNTRY_TERR:\"Algeria\",SOVEREIGN:\"Algeria\",ISO_3_CODE:\"DZA\",ISO_2_CODE:\"DZ\",UN_CODE:12,WHO_CODE:1010,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:4}},{arcs:[[-247,247,248]],type:\"Polygon\",properties:{CNTRY_TERR:\"Morocco\",SOVEREIGN:\"Morocco\",ISO_3_CODE:\"MAR\",ISO_2_CODE:\"MA\",UN_CODE:504,WHO_CODE:1310,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:4}},{arcs:[[249,250,251,252,253,254,255,256]],type:\"Polygon\",properties:{CNTRY_TERR:\"Cameroon\",SOVEREIGN:\"Cameroon\",ISO_3_CODE:\"CMR\",ISO_2_CODE:\"CM\",UN_CODE:120,WHO_CODE:1045,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:13}},{arcs:[[257,258,259]],type:\"Polygon\",properties:{CNTRY_TERR:\"Burundi\",SOVEREIGN:\"Burundi\",ISO_3_CODE:\"BDI\",ISO_2_CODE:\"BI\",UN_CODE:108,WHO_CODE:1040,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:10}},{arcs:[[260,-84,261,262,-123,263,-258,264,265,266,267,268]],type:\"Polygon\",properties:{CNTRY_TERR:\"United Republic of Tanzania\",SOVEREIGN:\"United Republic of Tanzania\",ISO_3_CODE:\"TZA\",ISO_2_CODE:\"TZ\",UN_CODE:834,WHO_CODE:1546,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:25}},{arcs:[[269,270,271,272]],type:\"Polygon\",properties:{CNTRY_TERR:\"Ghana\",SOVEREIGN:\"Ghana\",ISO_3_CODE:\"GHA\",ISO_2_CODE:\"GH\",UN_CODE:288,WHO_CODE:1180,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:12}},{arcs:[[273,-82,274,-80,-124,-263]],type:\"Polygon\",properties:{CNTRY_TERR:\"Malawi\",SOVEREIGN:\"Malawi\",ISO_3_CODE:\"MWI\",ISO_2_CODE:\"MW\",UN_CODE:454,WHO_CODE:1270,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:15}},{arcs:[[-248,-246,275,276,277]],type:\"Polygon\",properties:{CNTRY_TERR:\"Western Sahara\",SOVEREIGN:\"Western Sahara\",ISO_3_CODE:\"ESH\",ISO_2_CODE:\"EH\",UN_CODE:732,WHO_CODE:33,WHO_REGION:\"AFRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[278,279,280,-277,281,-245]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mauritania\",SOVEREIGN:\"Mauritania\",ISO_3_CODE:\"MRT\",ISO_2_CODE:\"MR\",UN_CODE:478,WHO_CODE:1290,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[-280,282,283,284,285,286,287]],type:\"Polygon\",properties:{CNTRY_TERR:\"Senegal\",SOVEREIGN:\"Senegal\",ISO_3_CODE:\"SEN\",ISO_2_CODE:\"SN\",UN_CODE:686,WHO_CODE:1390,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:9}},{arcs:[[-285,288,289]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guinea-Bissau\",SOVEREIGN:\"Guinea-Bissau\",ISO_3_CODE:\"GNB\",ISO_2_CODE:\"GW\",UN_CODE:624,WHO_CODE:1192,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[-289,-284,290,291,292,293,294]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guinea\",SOVEREIGN:\"Guinea\",ISO_3_CODE:\"GIN\",ISO_2_CODE:\"GN\",UN_CODE:324,WHO_CODE:1190,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:10}},{arcs:[[295,-293,296,297]],type:\"Polygon\",properties:{CNTRY_TERR:\"Liberia\",SOVEREIGN:\"Liberia\",ISO_3_CODE:\"LBR\",ISO_2_CODE:\"LR\",UN_CODE:430,WHO_CODE:1240,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:7}},{arcs:[[-244,298,299,300,-291,-283,-279]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mali\",SOVEREIGN:\"Mali\",ISO_3_CODE:\"MLI\",ISO_2_CODE:\"ML\",UN_CODE:466,WHO_CODE:1280,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:24}},{arcs:[[-301,301,-270,302,-297,-292]],type:\"Polygon\",properties:{CNTRY_TERR:\"Côte d'Ivoire\",SOVEREIGN:\"Côte d'Ivoire\",ISO_3_CODE:\"CIV\",ISO_2_CODE:\"CI\",UN_CODE:384,WHO_CODE:1115,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:21}},{arcs:[[303,-68,304,-271,-302,-300]],type:\"Polygon\",properties:{CNTRY_TERR:\"Burkina Faso\",SOVEREIGN:\"Burkina Faso\",ISO_3_CODE:\"BFA\",ISO_2_CODE:\"BF\",UN_CODE:854,WHO_CODE:1035,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:19}},{arcs:[[-243,-237,305,306,-69,-304,-299]],type:\"Polygon\",properties:{CNTRY_TERR:\"Niger\",SOVEREIGN:\"Niger\",ISO_3_CODE:\"NER\",ISO_2_CODE:\"NE\",UN_CODE:562,WHO_CODE:1330,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:34}},{arcs:[[-70,-307,307,-256,308]],type:\"Polygon\",properties:{CNTRY_TERR:\"Nigeria\",SOVEREIGN:\"Nigeria\",ISO_3_CODE:\"NGA\",ISO_2_CODE:\"NG\",UN_CODE:566,WHO_CODE:1340,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:175}},{arcs:[[-254,309,310,311]],type:\"Polygon\",properties:{CNTRY_TERR:\"Equatorial Guinea\",SOVEREIGN:\"Equatorial Guinea\",ISO_3_CODE:\"GNQ\",ISO_2_CODE:\"GQ\",UN_CODE:226,WHO_CODE:1130,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-311,312,-252,313,314]],type:\"Polygon\",properties:{CNTRY_TERR:\"Gabon\",SOVEREIGN:\"Gabon\",ISO_3_CODE:\"GAB\",ISO_2_CODE:\"GA\",UN_CODE:266,WHO_CODE:1160,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-257,-308,-306,-236,315,316]],type:\"Polygon\",properties:{CNTRY_TERR:\"Chad\",SOVEREIGN:\"Chad\",ISO_3_CODE:\"TCD\",ISO_2_CODE:\"TD\",UN_CODE:148,WHO_CODE:1080,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:15}},{arcs:[[-250,-317,317,318,319]],type:\"Polygon\",properties:{CNTRY_TERR:\"Central African Republic\",SOVEREIGN:\"Central African Republic\",ISO_3_CODE:\"CAF\",ISO_2_CODE:\"CF\",UN_CODE:140,WHO_CODE:1070,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:5}},{arcs:[[-314,-251,-320,320,321,322]],type:\"Polygon\",properties:{CNTRY_TERR:\"Congo\",SOVEREIGN:\"Congo\",ISO_3_CODE:\"COG\",ISO_2_CODE:\"CG\",UN_CODE:178,WHO_CODE:1100,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[323,-321,-319,324,325,326,-259,-264,-122,327,-120,328,-134,329,330]],type:\"Polygon\",properties:{CNTRY_TERR:\"Democratic Republic of the Congo\",SOVEREIGN:\"Democratic Republic of the Congo\",ISO_3_CODE:\"COD\",ISO_2_CODE:\"CD\",UN_CODE:180,WHO_CODE:1555,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:95}},{arcs:[[331,332,333,-266,334,-326]],type:\"Polygon\",properties:{CNTRY_TERR:\"Uganda\",SOVEREIGN:\"Uganda\",ISO_3_CODE:\"UGA\",ISO_2_CODE:\"UG\",UN_CODE:800,WHO_CODE:1530,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:28}},{arcs:[[-265,-260,-327,-335]],type:\"Polygon\",properties:{CNTRY_TERR:\"Rwanda\",SOVEREIGN:\"Rwanda\",ISO_3_CODE:\"RWA\",ISO_2_CODE:\"RW\",UN_CODE:646,WHO_CODE:1370,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:12}},{arcs:[[335,336,337,338]],type:\"Polygon\",properties:{CNTRY_TERR:\"Djibouti\",SOVEREIGN:\"Djibouti\",ISO_3_CODE:\"DJI\",ISO_2_CODE:\"DJ\",UN_CODE:262,WHO_CODE:1120,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[339,340,-337,341]],type:\"Polygon\",properties:{CNTRY_TERR:\"Somalia\",SOVEREIGN:\"Somalia\",ISO_3_CODE:\"SOM\",ISO_2_CODE:\"SO\",UN_CODE:706,WHO_CODE:1420,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:14}},{arcs:[[342,-125,-78,343,-76,344,-90,-127]],type:\"Polygon\",properties:{CNTRY_TERR:\"Zimbabwe\",SOVEREIGN:\"Zimbabwe\",ISO_3_CODE:\"ZWE\",ISO_2_CODE:\"ZW\",UN_CODE:716,WHO_CODE:1570,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:6}},{arcs:[[345,346,-128,-88,347,348]],type:\"Polygon\",properties:{CNTRY_TERR:\"Namibia\",SOVEREIGN:\"Namibia\",ISO_3_CODE:\"NAM\",ISO_2_CODE:\"NA\",UN_CODE:516,WHO_CODE:1325,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[349]],type:\"Polygon\",properties:{CNTRY_TERR:\"Swaziland\",SOVEREIGN:\"Swaziland\",ISO_3_CODE:\"SWZ\",ISO_2_CODE:\"SZ\",UN_CODE:748,WHO_CODE:1480,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[350]],type:\"Polygon\",properties:{CNTRY_TERR:\"Lesotho\",SOVEREIGN:\"Lesotho\",ISO_3_CODE:\"LSO\",ISO_2_CODE:\"LS\",UN_CODE:426,WHO_CODE:1230,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[351]],type:\"Polygon\",properties:{CNTRY_TERR:\"Madagascar\",SOVEREIGN:\"Madagascar\",ISO_3_CODE:\"MDG\",ISO_2_CODE:\"MG\",UN_CODE:450,WHO_CODE:1260,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:14}},{arcs:[[352,-13,-23,-230,353,-113]],type:\"Polygon\",properties:{CNTRY_TERR:\"Iraq\",SOVEREIGN:\"Iraq\",ISO_3_CODE:\"IRQ\",ISO_2_CODE:\"IQ\",UN_CODE:368,WHO_CODE:3140,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:20}},{arcs:[[354,-14,-353]],type:\"Polygon\",properties:{CNTRY_TERR:\"Kuwait\",SOVEREIGN:\"Kuwait\",ISO_3_CODE:\"KWT\",ISO_2_CODE:\"KW\",UN_CODE:414,WHO_CODE:3190,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-16,355]],type:\"Polygon\",properties:{CNTRY_TERR:\"Qatar\",SOVEREIGN:\"Qatar\",ISO_3_CODE:\"QAT\",ISO_2_CODE:\"QA\",UN_CODE:634,WHO_CODE:3320,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[356,357,358,359,360,361,-110]],type:\"Polygon\",properties:{CNTRY_TERR:\"Afghanistan\",SOVEREIGN:\"Afghanistan\",ISO_3_CODE:\"AFG\",ISO_2_CODE:\"AF\",UN_CODE:4,WHO_CODE:3010,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:65}},{arcs:[[362,-34]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bhutan\",SOVEREIGN:\"Bhutan\",ISO_3_CODE:\"BTN\",ISO_2_CODE:\"BT\",UN_CODE:64,WHO_CODE:3027,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[363,364,-37]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bangladesh\",SOVEREIGN:\"Bangladesh\",ISO_3_CODE:\"BGD\",ISO_2_CODE:\"BD\",UN_CODE:50,WHO_CODE:3025,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:69}},{arcs:[[365]],type:\"Polygon\",properties:{CNTRY_TERR:\"Sri Lanka\",SOVEREIGN:\"Sri Lanka\",ISO_3_CODE:\"LKA\",ISO_2_CODE:\"LK\",UN_CODE:144,WHO_CODE:3365,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[366,367,368,-364,-36,369]],type:\"Polygon\",properties:{CNTRY_TERR:\"Myanmar\",SOVEREIGN:\"Myanmar\",ISO_3_CODE:\"MMR\",ISO_2_CODE:\"MM\",UN_CODE:104,WHO_CODE:3270,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:26}},{arcs:[[370,371,372,373,-368,374]],type:\"Polygon\",properties:{CNTRY_TERR:\"Thailand\",SOVEREIGN:\"Thailand\",ISO_3_CODE:\"THA\",ISO_2_CODE:\"TH\",UN_CODE:764,WHO_CODE:3380,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:4}},{arcs:[[375,376,-371,377]],type:\"Polygon\",properties:{CNTRY_TERR:\"Cambodia\",SOVEREIGN:\"Cambodia\",ISO_3_CODE:\"KHM\",ISO_2_CODE:\"KH\",UN_CODE:116,WHO_CODE:3050,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:10}},{arcs:[[378,379]],type:\"Polygon\",properties:{CNTRY_TERR:\"Brunei Darussalam\",SOVEREIGN:\"Brunei Darussalam\",ISO_3_CODE:\"BRN\",ISO_2_CODE:\"BN\",UN_CODE:96,WHO_CODE:3030,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[380]],type:\"Polygon\",properties:{CNTRY_TERR:\"New Caledonia\",SOVEREIGN:\"France\",ISO_3_CODE:\"NCL\",ISO_2_CODE:\"NC\",UN_CODE:540,WHO_CODE:5120,WHO_REGION:\"WPRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[381,382]],type:\"Polygon\",properties:{CNTRY_TERR:\"Republic of Korea\",SOVEREIGN:\"Republic of Korea\",ISO_3_CODE:\"KOR\",ISO_2_CODE:\"KR\",UN_CODE:410,WHO_CODE:3325,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[383,-383,384,385]],type:\"Polygon\",properties:{CNTRY_TERR:\"Democratic People's Republic of Korea\",SOVEREIGN:\"Democratic People's Republic of Korea\",ISO_3_CODE:\"PRK\",ISO_2_CODE:\"KP\",UN_CODE:408,WHO_CODE:3083,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:5}},{arcs:[[386,387]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mongolia\",SOVEREIGN:\"Mongolia\",ISO_3_CODE:\"MNG\",ISO_2_CODE:\"MN\",UN_CODE:496,WHO_CODE:3260,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-287,388]],type:\"Polygon\",properties:{CNTRY_TERR:\"Gambia\",SOVEREIGN:\"Gambia\",ISO_3_CODE:\"GMB\",ISO_2_CODE:\"GM\",UN_CODE:270,WHO_CODE:1170,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-294,-296,389]],type:\"Polygon\",properties:{CNTRY_TERR:\"Sierra Leone\",SOVEREIGN:\"Sierra Leone\",ISO_3_CODE:\"SLE\",ISO_2_CODE:\"SL\",UN_CODE:694,WHO_CODE:1410,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:12}},{arcs:[[-32,390]],type:\"Polygon\",properties:{CNTRY_TERR:\"Nepal\",SOVEREIGN:\"Nepal\",ISO_3_CODE:\"NPL\",ISO_2_CODE:\"NP\",UN_CODE:524,WHO_CODE:3280,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:14}},{arcs:[[391,-190,-193,392]],type:\"Polygon\",properties:{CNTRY_TERR:\"Norway\",SOVEREIGN:\"Norway\",ISO_3_CODE:\"NOR\",ISO_2_CODE:\"NO\",UN_CODE:578,WHO_CODE:4220,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[393]],type:\"Polygon\",properties:{CNTRY_TERR:\"Greenland\",SOVEREIGN:\"Denmark\",ISO_3_CODE:\"GRL\",ISO_2_CODE:\"GL\",UN_CODE:0,WHO_CODE:2220,WHO_REGION:\"EURO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[394,395,396,397]],type:\"Polygon\",properties:{CNTRY_TERR:\"Estonia\",SOVEREIGN:\"Estonia\",ISO_3_CODE:\"EST\",ISO_2_CODE:\"EE\",UN_CODE:233,WHO_CODE:4055,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[398,399,400,401,402,-397]],type:\"Polygon\",properties:{CNTRY_TERR:\"Latvia\",SOVEREIGN:\"Latvia\",ISO_3_CODE:\"LVA\",ISO_2_CODE:\"LV\",UN_CODE:428,WHO_CODE:4186,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-402,403,404,405,406,407]],type:\"Polygon\",properties:{CNTRY_TERR:\"Lithuania\",SOVEREIGN:\"Lithuania\",ISO_3_CODE:\"LTU\",ISO_2_CODE:\"LT\",UN_CODE:440,WHO_CODE:4188,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-401,408,409,410,-195,411,-404]],type:\"Polygon\",properties:{CNTRY_TERR:\"Belarus\",SOVEREIGN:\"Belarus\",ISO_3_CODE:\"BLR\",ISO_2_CODE:\"BY\",UN_CODE:112,WHO_CODE:4018,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-135,412]],type:\"Polygon\",properties:{CNTRY_TERR:\"Republic of Moldova\",SOVEREIGN:\"Republic of Moldova\",ISO_3_CODE:\"MDA\",ISO_2_CODE:\"MD\",UN_CODE:498,WHO_CODE:4260,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[413,414,-136,-413,-142,-217,415,-197,416,-410]],type:\"Polygon\",properties:{CNTRY_TERR:\"Ukraine\",SOVEREIGN:\"Ukraine\",ISO_3_CODE:\"UKR\",ISO_2_CODE:\"UA\",UN_CODE:804,WHO_CODE:4303,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[417,418,419,420,421]],type:\"Polygon\",properties:{CNTRY_TERR:\"Georgia\",SOVEREIGN:\"Georgia\",ISO_3_CODE:\"GEO\",ISO_2_CODE:\"GE\",UN_CODE:268,WHO_CODE:4084,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[422,-420,423,-117,424,-115]],type:\"Polygon\",properties:{CNTRY_TERR:\"Armenia\",SOVEREIGN:\"Armenia\",ISO_3_CODE:\"ARM\",ISO_2_CODE:\"AM\",UN_CODE:51,WHO_CODE:4007,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[425,-47,426,-357,-109]],type:\"Polygon\",properties:{CNTRY_TERR:\"Turkmenistan\",SOVEREIGN:\"Turkmenistan\",ISO_3_CODE:\"TKM\",ISO_2_CODE:\"TM\",UN_CODE:795,WHO_CODE:4302,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[427,-358,-427,-46,428]],type:\"Polygon\",properties:{CNTRY_TERR:\"Uzbekistan\",SOVEREIGN:\"Uzbekistan\",ISO_3_CODE:\"UZB\",ISO_2_CODE:\"UZ\",UN_CODE:860,WHO_CODE:4335,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:6}},{arcs:[[-359,-428,429,430]],type:\"Polygon\",properties:{CNTRY_TERR:\"Tajikistan\",SOVEREIGN:\"Tajikistan\",ISO_3_CODE:\"TJK\",ISO_2_CODE:\"TJ\",UN_CODE:762,WHO_CODE:4301,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:4}},{arcs:[[431,-430,-429,-45]],type:\"Polygon\",properties:{CNTRY_TERR:\"Kyrgyzstan\",SOVEREIGN:\"Kyrgyzstan\",ISO_3_CODE:\"KGZ\",ISO_2_CODE:\"KG\",UN_CODE:417,WHO_CODE:4184,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[432,-221,433,434,435,436,437]],type:\"Polygon\",properties:{CNTRY_TERR:\"Slovenia\",SOVEREIGN:\"Slovenia\",ISO_3_CODE:\"SVN\",ISO_2_CODE:\"SI\",UN_CODE:705,WHO_CODE:4276,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[438,439,440,441,-224]],type:\"Polygon\",properties:{CNTRY_TERR:\"The former Yugoslav Republic of Macedonia\",SOVEREIGN:\"The former Yugoslav Republic of Macedonia\",ISO_3_CODE:\"MKD\",ISO_2_CODE:\"MK\",UN_CODE:807,WHO_CODE:4195,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[442,443,444,445,446,-440,447,-139]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bulgaria\",SOVEREIGN:\"Bulgaria\",ISO_3_CODE:\"BGR\",ISO_2_CODE:\"BG\",UN_CODE:100,WHO_CODE:4030,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[448,449,450,451,452]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bosnia and Herzegovina\",SOVEREIGN:\"Bosnia and Herzegovina\",ISO_3_CODE:\"BIH\",ISO_2_CODE:\"BA\",UN_CODE:70,WHO_CODE:4025,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-339,453,454]],type:\"Polygon\",properties:{CNTRY_TERR:\"Eritrea\",SOVEREIGN:\"Eritrea\",ISO_3_CODE:\"ERI\",ISO_2_CODE:\"ER\",UN_CODE:232,WHO_CODE:1135,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[-338,-341,455,456,-454]],type:\"Polygon\",properties:{CNTRY_TERR:\"Ethiopia\",SOVEREIGN:\"Ethiopia\",ISO_3_CODE:\"ETH\",ISO_2_CODE:\"ET\",UN_CODE:231,WHO_CODE:1140,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:86}},{arcs:[[-416,-216,457,-214,458,-213,-198]],type:\"Polygon\",properties:{CNTRY_TERR:\"Slovakia\",SOVEREIGN:\"Slovakia\",ISO_3_CODE:\"SVK\",ISO_2_CODE:\"SK\",UN_CODE:703,WHO_CODE:4274,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[459]],type:\"Polygon\",properties:{CNTRY_TERR:\"Réunion\",SOVEREIGN:\"France\",ISO_3_CODE:\"REU\",ISO_2_CODE:\"RE\",UN_CODE:638,WHO_CODE:1360,WHO_REGION:\"AFRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[460]],type:\"Polygon\",properties:{CNTRY_TERR:\"Mauritius\",SOVEREIGN:\"Mauritius\",ISO_3_CODE:\"MUS\",ISO_2_CODE:\"MU\",UN_CODE:480,WHO_CODE:1300,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[461]],type:\"Polygon\",properties:{CNTRY_TERR:\"Comoros\",SOVEREIGN:\"Comoros\",ISO_3_CODE:\"COM\",ISO_2_CODE:\"KM\",UN_CODE:174,WHO_CODE:1090,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[462]],type:\"Polygon\",properties:{CNTRY_TERR:\"Malta\",SOVEREIGN:\"Malta\",ISO_3_CODE:\"MLT\",ISO_2_CODE:\"MT\",UN_CODE:470,WHO_CODE:4200,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-456,-340,463,464,465,-333,466,467]],type:\"Polygon\",properties:{CNTRY_TERR:\"Kenya\",SOVEREIGN:\"Kenya\",ISO_3_CODE:\"KEN\",ISO_2_CODE:\"KE\",UN_CODE:404,WHO_CODE:1220,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:22}},{arcs:[[468,-376,469,470]],type:\"Polygon\",properties:{CNTRY_TERR:\"Viet Nam\",SOVEREIGN:\"Viet Nam\",ISO_3_CODE:\"VNM\",ISO_2_CODE:\"VN\",UN_CODE:704,WHO_CODE:3408,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:5}},{arcs:[[471,-172,472,-57]],type:\"Polygon\",properties:{CNTRY_TERR:\"Venezuela (Bolivarian Republic of)\",SOVEREIGN:\"Venezuela (Bolivarian Republic of)\",ISO_3_CODE:\"VEN\",ISO_2_CODE:\"VE\",UN_CODE:862,WHO_CODE:2470,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[473]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bahrain\",SOVEREIGN:\"Bahrain\",ISO_3_CODE:\"BHR\",ISO_2_CODE:\"BH\",UN_CODE:48,WHO_CODE:3020,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-272,-305,-72,474]],type:\"Polygon\",properties:{CNTRY_TERR:\"Togo\",SOVEREIGN:\"Togo\",ISO_3_CODE:\"TGO\",ISO_2_CODE:\"TG\",UN_CODE:768,WHO_CODE:1510,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:5}},{arcs:[[475]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Vincent and the Grenadines\",SOVEREIGN:\"Saint Vincent and the Grenadines\",ISO_3_CODE:\"VCT\",ISO_2_CODE:\"VC\",UN_CODE:670,WHO_CODE:2420,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[476]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Lucia\",SOVEREIGN:\"Saint Lucia\",ISO_3_CODE:\"LCA\",ISO_2_CODE:\"LC\",UN_CODE:662,WHO_CODE:2400,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[477]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guadeloupe\",SOVEREIGN:\"France\",ISO_3_CODE:\"GLP\",ISO_2_CODE:\"GP\",UN_CODE:312,WHO_CODE:2240,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[478]],type:\"Polygon\",properties:{CNTRY_TERR:\"Barbados\",SOVEREIGN:\"Barbados\",ISO_3_CODE:\"BRB\",ISO_2_CODE:\"BB\",UN_CODE:52,WHO_CODE:2040,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[479]],type:\"Polygon\",properties:{CNTRY_TERR:\"Martinique\",SOVEREIGN:\"France\",ISO_3_CODE:\"MTQ\",ISO_2_CODE:\"MQ\",UN_CODE:474,WHO_CODE:2300,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[480]],type:\"Polygon\",properties:{CNTRY_TERR:\"United States Virgin Islands\",SOVEREIGN:\"United States of America\",ISO_3_CODE:\"VIR\",ISO_2_CODE:\"VI\",UN_CODE:850,WHO_CODE:2455,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[481]],type:\"Polygon\",properties:{CNTRY_TERR:\"Puerto Rico\",SOVEREIGN:\"United States of America\",ISO_3_CODE:\"PRI\",ISO_2_CODE:\"PR\",UN_CODE:630,WHO_CODE:2380,WHO_REGION:\"AMRO\",WHO_STATUS:\"Associate member\",REAL_VALUE:null}},{arcs:[[482,483,484,485,486,487,488,489,490,491]],type:\"Polygon\",properties:{CNTRY_TERR:\"Spain\",SOVEREIGN:\"Spain\",ISO_3_CODE:\"ESP\",ISO_2_CODE:\"ES\",UN_CODE:724,WHO_CODE:4280,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-491,492]],type:\"Polygon\",properties:{CNTRY_TERR:\"Portugal\",SOVEREIGN:\"Portugal\",ISO_3_CODE:\"PRT\",ISO_2_CODE:\"PT\",UN_CODE:620,WHO_CODE:4240,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-40,-39,493,-111,-362,-361,494]],type:\"Polygon\",properties:{CNTRY_TERR:\"Pakistan\",SOVEREIGN:\"Pakistan\",ISO_3_CODE:\"PAK\",ISO_2_CODE:\"PK\",UN_CODE:586,WHO_CODE:3290,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:77}},{arcs:[[495]],type:\"Polygon\",properties:{CNTRY_TERR:\"Dominica\",SOVEREIGN:\"Dominica\",ISO_3_CODE:\"DMA\",ISO_2_CODE:\"DM\",UN_CODE:212,WHO_CODE:2160,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[496]],type:\"Polygon\",properties:{CNTRY_TERR:\"Maldives\",SOVEREIGN:\"Maldives\",ISO_3_CODE:\"MDV\",ISO_2_CODE:\"MV\",UN_CODE:462,WHO_CODE:3255,WHO_REGION:\"SERAO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[497]],type:\"Polygon\",properties:{CNTRY_TERR:\"Seychelles\",SOVEREIGN:\"Seychelles\",ISO_3_CODE:\"SYC\",ISO_2_CODE:\"SC\",UN_CODE:690,WHO_CODE:1400,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-98,-212,-459,-222,498,499,500,501,502,503,-100,504]],type:\"Polygon\",properties:{CNTRY_TERR:\"Austria\",SOVEREIGN:\"Austria\",ISO_3_CODE:\"AUT\",ISO_2_CODE:\"AT\",UN_CODE:40,WHO_CODE:4010,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-470,-378,-375,-367,505]],type:\"Polygon\",properties:{CNTRY_TERR:\"Lao People's Democratic Republic\",SOVEREIGN:\"Lao People's Democratic Republic\",ISO_3_CODE:\"LAO\",ISO_2_CODE:\"LA\",UN_CODE:418,WHO_CODE:3200,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[506]],type:\"Polygon\",properties:{CNTRY_TERR:\"Bahamas\",SOVEREIGN:\"Bahamas\",ISO_3_CODE:\"BHS\",ISO_2_CODE:\"BS\",UN_CODE:44,WHO_CODE:2030,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[507]],type:\"Polygon\",properties:{CNTRY_TERR:\"Antigua and Barbuda\",SOVEREIGN:\"Antigua and Barbuda\",ISO_3_CODE:\"ATG\",ISO_2_CODE:\"AG\",UN_CODE:28,WHO_CODE:2010,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[508]],type:\"Polygon\",properties:{CNTRY_TERR:\"Grenada\",SOVEREIGN:\"Grenada\",ISO_3_CODE:\"GRD\",ISO_2_CODE:\"GD\",UN_CODE:308,WHO_CODE:2230,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-485,509,510,-487,511]],type:\"Polygon\",properties:{CNTRY_TERR:\"Andorra\",SOVEREIGN:\"Andorra\",ISO_3_CODE:\"AND\",ISO_2_CODE:\"AD\",UN_CODE:20,WHO_CODE:4008,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[512]],type:\"Polygon\",properties:{CNTRY_TERR:\"San Marino\",SOVEREIGN:\"San Marino\",ISO_3_CODE:\"SMR\",ISO_2_CODE:\"SM\",UN_CODE:674,WHO_CODE:4275,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[513,514]],type:\"Polygon\",properties:{CNTRY_TERR:\"Timor-Leste\",SOVEREIGN:\"Timor-Leste\",ISO_3_CODE:\"TLS\",ISO_2_CODE:\"TL\",UN_CODE:626,WHO_CODE:3087,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[-103,515,-205]],type:\"Polygon\",properties:{CNTRY_TERR:\"Luxembourg\",SOVEREIGN:\"Luxembourg\",ISO_3_CODE:\"LUX\",ISO_2_CODE:\"LU\",UN_CODE:442,WHO_CODE:4190,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[516,517]],type:\"Polygon\",properties:{CNTRY_TERR:\"Singapore\",SOVEREIGN:\"Singapore\",ISO_3_CODE:\"SGP\",ISO_2_CODE:\"SG\",UN_CODE:702,WHO_CODE:3350,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[-87,518,-91,-345,519,-74,520,-348],[-351],[-350]],type:\"Polygon\",properties:{CNTRY_TERR:\"South Africa\",SOVEREIGN:\"South Africa\",ISO_3_CODE:\"ZAF\",ISO_2_CODE:\"ZA\",UN_CODE:710,WHO_CODE:1430,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:7}},{arcs:[[521]],type:\"Polygon\",properties:{CNTRY_TERR:\"Puerto Rico\",SOVEREIGN:\"United States of America\",ISO_3_CODE:\"PRI\",ISO_2_CODE:\"PR\",UN_CODE:630,WHO_CODE:2380,WHO_REGION:\"AMRO\",WHO_STATUS:\"Associate member\",REAL_VALUE:0}},{arcs:[[522]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Lucia\",SOVEREIGN:\"Saint Lucia\",ISO_3_CODE:\"LCA\",ISO_2_CODE:\"LC\",UN_CODE:662,WHO_CODE:2400,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[523]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Vincent and the Grenadines\",SOVEREIGN:\"Saint Vincent and the Grenadines\",ISO_3_CODE:\"VCT\",ISO_2_CODE:\"VC\",UN_CODE:670,WHO_CODE:2420,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[524]],type:\"Polygon\",properties:{CNTRY_TERR:\"Guam\",SOVEREIGN:\"United States of America\",ISO_3_CODE:\"GUM\",ISO_2_CODE:\"GU\",UN_CODE:316,WHO_CODE:5100,WHO_REGION:\"WPRO\",WHO_STATUS:\"Associate member\",REAL_VALUE:null}},{arcs:[[525]],type:\"Polygon\",properties:{CNTRY_TERR:\"Micronesia (Federated States of)\",SOVEREIGN:\"Micronesia (Federated States of)\",ISO_3_CODE:\"FSM\",ISO_2_CODE:\"FM\",UN_CODE:583,WHO_CODE:5108,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[526]],type:\"Polygon\",properties:{CNTRY_TERR:\"Solomon Islands\",SOVEREIGN:\"Solomon Islands\",ISO_3_CODE:\"SLB\",ISO_2_CODE:\"SB\",UN_CODE:90,WHO_CODE:5198,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[527]],type:\"Polygon\",properties:{CNTRY_TERR:\"Tuvalu\",SOVEREIGN:\"Tuvalu\",ISO_3_CODE:\"TUV\",ISO_2_CODE:\"TV\",UN_CODE:798,WHO_CODE:5205,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[528]],type:\"Polygon\",properties:{CNTRY_TERR:\"Kiribati\",SOVEREIGN:\"Kiribati\",ISO_3_CODE:\"KIR\",ISO_2_CODE:\"KI\",UN_CODE:296,WHO_CODE:5105,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[529]],type:\"Polygon\",properties:{CNTRY_TERR:\"Marshall Islands\",SOVEREIGN:\"Marshall Islands\",ISO_3_CODE:\"MHL\",ISO_2_CODE:\"MH\",UN_CODE:584,WHO_CODE:5107,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[530]],type:\"Polygon\",properties:{CNTRY_TERR:\"Nauru\",SOVEREIGN:\"Nauru\",ISO_3_CODE:\"NRU\",ISO_2_CODE:\"NR\",UN_CODE:520,WHO_CODE:5110,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[531]],type:\"Polygon\",properties:{CNTRY_TERR:\"Barbados\",SOVEREIGN:\"Barbados\",ISO_3_CODE:\"BRB\",ISO_2_CODE:\"BB\",UN_CODE:52,WHO_CODE:2040,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[532]],type:\"Polygon\",properties:{CNTRY_TERR:\"Antigua and Barbuda\",SOVEREIGN:\"Antigua and Barbuda\",ISO_3_CODE:\"ATG\",ISO_2_CODE:\"AG\",UN_CODE:28,WHO_CODE:2010,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[533]],type:\"Polygon\",properties:{CNTRY_TERR:\"Dominica\",SOVEREIGN:\"Dominica\",ISO_3_CODE:\"DMA\",ISO_2_CODE:\"DM\",UN_CODE:212,WHO_CODE:2160,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[534]],type:\"Polygon\",properties:{CNTRY_TERR:\"Grenada\",SOVEREIGN:\"Grenada\",ISO_3_CODE:\"GRD\",ISO_2_CODE:\"GD\",UN_CODE:308,WHO_CODE:2230,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[535]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Kitts and Nevis\",SOVEREIGN:\"Saint Kitts and Nevis\",ISO_3_CODE:\"KNA\",ISO_2_CODE:\"KN\",UN_CODE:659,WHO_CODE:2385,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[536]],type:\"Polygon\",properties:{CNTRY_TERR:\"Andorra\",SOVEREIGN:\"Andorra\",ISO_3_CODE:\"AND\",ISO_2_CODE:\"AD\",UN_CODE:20,WHO_CODE:4008,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[537]],type:\"Polygon\",properties:{CNTRY_TERR:\"San Marino\",SOVEREIGN:\"San Marino\",ISO_3_CODE:\"SMR\",ISO_2_CODE:\"SM\",UN_CODE:674,WHO_CODE:4275,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[538]],type:\"Polygon\",properties:{CNTRY_TERR:\"Cape Verde\",SOVEREIGN:\"Cape Verde\",ISO_3_CODE:\"CPV\",ISO_2_CODE:\"CV\",UN_CODE:132,WHO_CODE:1060,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[539]],type:\"Polygon\",properties:{CNTRY_TERR:\"Sao Tome and Principe\",SOVEREIGN:\"Sao Tome and Principe\",ISO_3_CODE:\"STP\",ISO_2_CODE:\"ST\",UN_CODE:678,WHO_CODE:1385,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[540]],type:\"Polygon\",properties:{CNTRY_TERR:\"Palau\",SOVEREIGN:\"Palau\",ISO_3_CODE:\"PLW\",ISO_2_CODE:\"PW\",UN_CODE:585,WHO_CODE:5180,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-330,541,-132,542,-130,543,-346,544]],[[-324,545,-322]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Angola\",SOVEREIGN:\"Angola\",ISO_3_CODE:\"AGO\",ISO_2_CODE:\"AO\",UN_CODE:24,WHO_CODE:1020,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member state\",REAL_VALUE:34}},{arcs:[[[546,-180,-183,547,-187,548]],[[549]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Argentina\",SOVEREIGN:\"Argentina\",ISO_3_CODE:\"ARG\",ISO_2_CODE:\"AR\",UN_CODE:32,WHO_CODE:2020,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[550]],[[551]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Australia\",SOVEREIGN:\"Australia\",ISO_3_CODE:\"AUS\",ISO_2_CODE:\"AU\",UN_CODE:36,WHO_CODE:5020,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-118,-424,-419,552,553]],[[-116,-425]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Azerbaijan\",SOVEREIGN:\"Azerbaijan\",ISO_3_CODE:\"AZE\",ISO_2_CODE:\"AZ\",UN_CODE:31,WHO_CODE:4012,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:2}},{arcs:[[[554]],[[-185,-548,-184,-182,-64,-58,-473,-171,-175,-177,555]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Brazil\",SOVEREIGN:\"Brazil\",ISO_3_CODE:\"BRA\",ISO_2_CODE:\"BR\",UN_CODE:76,WHO_CODE:2070,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:17}},{arcs:[[[556]],[[557]],[[558]],[[559]],[[560,561,562,563]],[[564]],[[565]],[[566]],[[567]],[[568]],[[569]],[[570]],[[571]],[[572]],[[573]],[[574]],[[575]],[[576]],[[577]],[[578]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Canada\",SOVEREIGN:\"Canada\",ISO_3_CODE:\"CAN\",ISO_2_CODE:\"CA\",UN_CODE:124,WHO_CODE:2090,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[579]],[[580]],[[581]],[[582]],[[-547,583,-66,-181]],[[584]],[[585]],[[586]],[[587]],[[588]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Chile\",SOVEREIGN:\"Chile\",ISO_3_CODE:\"CHL\",ISO_2_CODE:\"CL\",UN_CODE:152,WHO_CODE:2120,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[589]],[[590]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Cuba\",SOVEREIGN:\"Cuba\",ISO_3_CODE:\"CUB\",ISO_2_CODE:\"CU\",UN_CODE:192,WHO_CODE:2150,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[591]],[[-94,592]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Denmark\",SOVEREIGN:\"Denmark\",ISO_3_CODE:\"DNK\",ISO_2_CODE:\"DK\",UN_CODE:208,WHO_CODE:4050,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[593]],[[594]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Falkland Islands (Malvinas)\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"FLK\",ISO_2_CODE:\"FK\",UN_CODE:238,WHO_CODE:2200,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[[595]],[[596]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Fiji\",SOVEREIGN:\"Fiji\",ISO_3_CODE:\"FJI\",ISO_2_CODE:\"FJ\",UN_CODE:242,WHO_CODE:5070,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[597]],[[-206,-516,-102,-211,598,599,-489,600,601,-483,602]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"France\",SOVEREIGN:\"France\",ISO_3_CODE:\"FRA\",ISO_2_CODE:\"FR\",UN_CODE:250,WHO_CODE:4080,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-225,-442,603,-446,604,605]],[[606]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Greece\",SOVEREIGN:\"Greece\",ISO_3_CODE:\"GRC\",ISO_2_CODE:\"GR\",UN_CODE:300,WHO_CODE:4140,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[607,608]],[[609]],[[610,611]],[[612]],[[613]],[[614]],[[615]],[[616,-514]],[[617]],[[618]],[[619]],[[620]],[[621]],[[622]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Indonesia\",SOVEREIGN:\"Indonesia\",ISO_3_CODE:\"IDN\",ISO_2_CODE:\"ID\",UN_CODE:360,WHO_CODE:3110,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:39}},{arcs:[[[-438,623,-599,-210,-500]],[[624]],[[625]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Italy\",SOVEREIGN:\"Italy\",ISO_3_CODE:\"ITA\",ISO_2_CODE:\"IT\",UN_CODE:380,WHO_CODE:4180,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[626]],[[627]],[[628]],[[629]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Japan\",SOVEREIGN:\"Japan\",ISO_3_CODE:\"JPN\",ISO_2_CODE:\"JP\",UN_CODE:392,WHO_CODE:3160,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-379,630,-609,631]],[[-373,632,-517,633]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Malaysia\",SOVEREIGN:\"Malaysia\",ISO_3_CODE:\"MYS\",ISO_2_CODE:\"MY\",UN_CODE:458,WHO_CODE:3236,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[[634]],[[635]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"New Zealand\",SOVEREIGN:\"New Zealand\",ISO_3_CODE:\"NZL\",ISO_2_CODE:\"NZ\",UN_CODE:554,WHO_CODE:5150,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-24,-7,-6,-5,-4]],[[636,-11,637]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"West Bank and Gaza Strip\",SOVEREIGN:\"West Bank and Gaza Strip\",ISO_3_CODE:\"PSE\",ISO_2_CODE:\"PS\",UN_CODE:0,WHO_CODE:12,WHO_REGION:\"EMRO\",WHO_STATUS:\"Other\",REAL_VALUE:0}},{arcs:[[[638,-611]],[[639]],[[640]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Papua New Guinea\",SOVEREIGN:\"Papua New Guinea\",ISO_3_CODE:\"PNG\",ISO_2_CODE:\"PG\",UN_CODE:598,WHO_CODE:5195,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:3}},{arcs:[[[641]],[[642]],[[643]],[[644]],[[645]],[[646]],[[647]],[[648]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Philippines\",SOVEREIGN:\"Philippines\",ISO_3_CODE:\"PHL\",ISO_2_CODE:\"PH\",UN_CODE:608,WHO_CODE:3300,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:10}},{arcs:[[[649,-407,650,-201]],[[651,652,-387,653,-43,654,-553,-418,655,-414,-409,-400,656,-395,657,-191,-392]],[[658]],[[659]],[[660]],[[661]],[[662]],[[663]],[[664]],[[665]],[[666]],[[667]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Russian Federation\",SOVEREIGN:\"Russian Federation\",ISO_3_CODE:\"RUS\",ISO_2_CODE:\"RU\",UN_CODE:643,WHO_CODE:4272,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[668]],[[669]],[[670]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Svalbard and Jan Mayen Islands\",SOVEREIGN:\"Norway\",ISO_3_CODE:\"SJM\",ISO_2_CODE:\"SJ\",UN_CODE:744,WHO_CODE:28,WHO_REGION:\"EURO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[[671,-605,-445,672]],[[673,-421,-423,-114,-354,-229,674]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Turkey\",SOVEREIGN:\"Turkey\",ISO_3_CODE:\"TUR\",ISO_2_CODE:\"TR\",UN_CODE:792,WHO_CODE:3400,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:7}},{arcs:[[[675]],[[676,-203]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"United Kingdom of Great Britain and Northern Ireland\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"GBR\",ISO_2_CODE:\"GB\",UN_CODE:826,WHO_CODE:4308,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[-562,677,-144,678]],[[-564,679]],[[680]],[[681]],[[682]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"United States of America\",SOVEREIGN:\"United States of America\",ISO_3_CODE:\"USA\",ISO_2_CODE:\"US\",UN_CODE:840,WHO_CODE:2450,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[683]],[[684]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Vanuatu\",SOVEREIGN:\"Vanuatu\",ISO_3_CODE:\"VUT\",ISO_2_CODE:\"VU\",UN_CODE:548,WHO_CODE:5207,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[[685]],[[686]],[[-653,687,-386,688,-471,-506,-370,-35,-363,-33,-391,-42,-41,-495,-360,-431,-432,-44,-654,-388]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"China\",SOVEREIGN:\"China\",ISO_3_CODE:\"CHN\",ISO_2_CODE:\"CN\",UN_CODE:156,WHO_CODE:3068,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:74}},{arcs:[[689]],type:\"Polygon\",properties:{CNTRY_TERR:\"Monaco\",SOVEREIGN:\"Monaco\",ISO_3_CODE:\"MCO\",ISO_2_CODE:\"MC\",UN_CODE:492,WHO_CODE:4205,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[690]],type:\"Polygon\",properties:{CNTRY_TERR:\"Tokelau\",SOVEREIGN:\"New Zealand\",ISO_3_CODE:\"TKL\",ISO_2_CODE:\"TK\",UN_CODE:772,WHO_CODE:5199,WHO_REGION:\"WPRO\",WHO_STATUS:\"Associate member\",REAL_VALUE:null}},{arcs:[[691]],type:\"Polygon\",properties:{CNTRY_TERR:\"Timor-Leste\",SOVEREIGN:\"Timor-Leste\",ISO_3_CODE:\"TLS\",ISO_2_CODE:\"TL\",UN_CODE:626,WHO_CODE:3087,WHO_REGION:\"SEARO\",WHO_STATUS:\"Member state\",REAL_VALUE:1}},{arcs:[[692,693,-502,694]],type:\"Polygon\",properties:{CNTRY_TERR:\"Liechtenstein\",SOVEREIGN:\"Liechtenstein\",ISO_3_CODE:\"LIE\",ISO_2_CODE:\"LI\",UN_CODE:438,WHO_CODE:4185,WHO_REGION:\"EURO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[695]],type:\"Polygon\",properties:{CNTRY_TERR:\"Turks and Caicos Islands\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"TCA\",ISO_2_CODE:\"TC\",UN_CODE:796,WHO_CODE:2445,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[696]],type:\"Polygon\",properties:{CNTRY_TERR:\"British Virgin Islands\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"VGB\",ISO_2_CODE:\"VG\",UN_CODE:92,WHO_CODE:30,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[697]],type:\"Polygon\",properties:{CNTRY_TERR:\"Anguilla\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"AIA\",ISO_2_CODE:\"AI\",UN_CODE:660,WHO_CODE:2005,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[698]],type:\"Polygon\",properties:{CNTRY_TERR:\"Saint Kitts and Nevis\",SOVEREIGN:\"Saint Kitts and Nevis\",ISO_3_CODE:\"KNA\",ISO_2_CODE:\"KN\",UN_CODE:659,WHO_CODE:2385,WHO_REGION:\"AMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[699]],type:\"Polygon\",properties:{CNTRY_TERR:\"Montserrat\",SOVEREIGN:\"United Kingdom of Great Britain and Northern Ireland\",ISO_3_CODE:\"MSR\",ISO_2_CODE:\"MS\",UN_CODE:500,WHO_CODE:2320,WHO_REGION:\"AMRO\",WHO_STATUS:\"Other\",REAL_VALUE:null}},{arcs:[[[-30,-19,-29,700]],[[-27,701]]],type:\"MultiPolygon\",properties:{CNTRY_TERR:\"Oman\",SOVEREIGN:\"Oman\",ISO_3_CODE:\"OMN\",ISO_2_CODE:\"OM\",UN_CODE:512,WHO_CODE:3285,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[702,703,704,705,706]],type:\"Polygon\",properties:{CNTRY_TERR:\"Sudan\",SOVEREIGN:\"Sudan\",ISO_3_CODE:\"SDN\",ISO_2_CODE:\"SD\",UN_CODE:729,WHO_CODE:1470,WHO_REGION:\"EMRO\",WHO_STATUS:\"Member state\",REAL_VALUE:16}},{arcs:[[-450,707,-436,708,709,-219,710]],type:\"Polygon\",properties:{CNTRY_TERR:\"Croatia\",SOVEREIGN:\"Croatia\",ISO_3_CODE:\"HRV\",ISO_2_CODE:\"HR\",UN_CODE:191,WHO_CODE:4038,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[711,-451,-711,-218,-140,-448,-439,712,713]],type:\"Polygon\",properties:{CNTRY_TERR:\"Serbia\",SOVEREIGN:\"Serbia\",ISO_3_CODE:\"SRB\",ISO_2_CODE:\"RS\",UN_CODE:0,WHO_CODE:0,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[714,-453,715,-714,716,-227]],type:\"Polygon\",properties:{CNTRY_TERR:\"Montenegro\",SOVEREIGN:\"Montenegro\",ISO_3_CODE:\"MNE\",ISO_2_CODE:\"ME\",UN_CODE:0,WHO_CODE:0,WHO_REGION:\"EURO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[717]],type:\"Polygon\",properties:{CNTRY_TERR:\"Tonga\",SOVEREIGN:\"Tonga\",ISO_3_CODE:\"TON\",ISO_2_CODE:\"TO\",UN_CODE:776,WHO_CODE:5200,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[718]],type:\"Polygon\",properties:{CNTRY_TERR:\"Samoa\",SOVEREIGN:\"Samoa\",ISO_3_CODE:\"WSM\",ISO_2_CODE:\"WS\",UN_CODE:882,WHO_CODE:5197,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[719]],type:\"Polygon\",properties:{CNTRY_TERR:\"Niue\",SOVEREIGN:\"New Zealand\",ISO_3_CODE:\"NIU\",ISO_2_CODE:\"NU\",UN_CODE:570,WHO_CODE:5170,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[720]],type:\"Polygon\",properties:{CNTRY_TERR:\"Cook Islands\",SOVEREIGN:\"New Zealand\",ISO_3_CODE:\"COK\",ISO_2_CODE:\"CK\",UN_CODE:184,WHO_CODE:5060,WHO_REGION:\"WPRO\",WHO_STATUS:\"Member state\",REAL_VALUE:0}},{arcs:[[721,722,723,724,725,726,727,728,729,-704,730,731,732,733,734,735,736]],type:\"Polygon\",properties:{CNTRY_TERR:\"South Sudan\",SOVEREIGN:\"South Sudan\",ISO_3_CODE:\"SSD\",ISO_2_CODE:\"SS\",UN_CODE:728,WHO_CODE:0,WHO_REGION:\"AFRO\",WHO_STATUS:\"Member State\",REAL_VALUE:0}}]},maskline_general:{type:\"GeometryCollection\",geometries:[{type:\"MultiLineString\",arcs:[[737],[738],[739,740,741],[742,743]],properties:{ID:31,COUNTRY:\"Wline\",LENGTH:14.488}},{type:\"LineString\",arcs:[744],properties:{ID:30,COUNTRY:\"Bline_Kosovo\",LENGTH:4.585}},{type:\"MultiLineString\",arcs:[[745],[746],[747],[748],[749],[750],[751],[752],[753],[754],[755],[756],[757],[758],[759]],properties:{ID:1,COUNTRY:\"Fline\",LENGTH:137.745}},{type:\"MultiLineString\",arcs:[[760],[761,762,-5,763]],properties:{ID:5,COUNTRY:\"Gaza\",LENGTH:3.15}},{type:\"LineString\",arcs:[764],properties:{ID:30,COUNTRY:\"Bline_Sudan\",LENGTH:4.585}},{type:\"LineString\",arcs:[765],properties:{ID:0,COUNTRY:\"Cont_ja_ka\",LENGTH:0}},{type:\"LineString\",arcs:[766,724,767,726,768,729,769,731,732,770],properties:{ID:0,COUNTRY:\"South_sud\",LENGTH:0}},{type:\"LineString\",arcs:[771,772,735,773],properties:{ID:0,COUNTRY:\"South_sud\",LENGTH:0}},{type:\"LineString\",arcs:[774,775,776],properties:{ID:0,COUNTRY:\"Abyei border\",LENGTH:0}},{type:\"LineString\",arcs:[774,775,776],properties:{ID:0,COUNTRY:\"Abyei border1\",LENGTH:0}}]},maskpoly_general:{type:\"GeometryCollection\",geometries:[{arcs:[[740,777,-361,494,40,778,-744,779,780]],type:\"Polygon\"},{arcs:[[[781]],[[782]],[[783]],[[784]],[[785],[786],[787],[788]],[[789]],[[790]],[[791]],[[792]]],type:\"MultiPolygon\"},{arcs:[[793]],type:\"Polygon\"}]}}};","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  var node;\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : defaultView(node = this.node())\n          .getComputedStyle(node, null)\n          .getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (event) {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","export {default as creator} from \"./src/creator\";\nexport {default as local} from \"./src/local\";\nexport {default as matcher} from \"./src/matcher\";\nexport {default as mouse} from \"./src/mouse\";\nexport {default as namespace} from \"./src/namespace\";\nexport {default as namespaces} from \"./src/namespaces\";\nexport {default as select} from \"./src/select\";\nexport {default as selectAll} from \"./src/selectAll\";\nexport {default as selection} from \"./src/selection/index\";\nexport {default as selector} from \"./src/selector\";\nexport {default as selectorAll} from \"./src/selectorAll\";\nexport {default as touch} from \"./src/touch\";\nexport {default as touches} from \"./src/touches\";\nexport {default as window} from \"./src/window\";\nexport {event, customEvent} from \"./src/selection/on\";\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDefault from \"./formatDefault\";\nimport formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","import formatTypes from \"./formatTypes\";\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nexport default function(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nfunction identity(x) {\n  return x;\n}\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal;\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? \"%\" : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Convert negative to positive, and compute the prefix.\n        // Note that -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = (value < 0 || 1 / value < 0) && (value *= -1, true);\n\n        // Perform the initial formatting.\n        value = formatType(value, precision);\n\n        // If the original value was negative, it may be rounded to zero during\n        // formatting; treat this as (positive) zero.\n        if (valueNegative) {\n          i = -1, n = value.length;\n          valueNegative = false;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), (48 < c && c < 58)\n                || (type === \"x\" && 96 < c && c < 103)\n                || (type === \"X\" && 64 < c && c < 71)) {\n              valueNegative = true;\n              break;\n            }\n          }\n        }\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": return valuePrefix + value + valueSuffix + padding;\n        case \"=\": return valuePrefix + padding + value + valueSuffix;\n        case \"^\": return padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);\n      }\n      return padding + valuePrefix + value + valueSuffix;\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","export {default as formatDefaultLocale, format, formatPrefix} from \"./src/defaultLocale\";\nexport {default as formatLocale} from \"./src/locale\";\nexport {default as formatSpecifier} from \"./src/formatSpecifier\";\nexport {default as precisionFixed} from \"./src/precisionFixed\";\nexport {default as precisionPrefix} from \"./src/precisionPrefix\";\nexport {default as precisionRound} from \"./src/precisionRound\";\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export {default as dispatch} from \"./src/dispatch\";\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(array, f) {\n  var n = array.length,\n      m = 0,\n      a,\n      d,\n      s = 0,\n      i = -1,\n      j = 0;\n\n  if (f == null) {\n    while (++i < n) {\n      if (!isNaN(a = number(array[i]))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(a = number(f(array[i], i, array)))) {\n        d = a - m;\n        m += d / ++j;\n        s += d * (a - m);\n      }\n    }\n  }\n\n  if (j > 1) return s / (j - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b,\n      c;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b;\n      if (c < b) c = b;\n    }\n  }\n\n  return [a, c];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","import range from \"./range\";\n\nvar e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var step = tickStep(start, stop, count);\n  return range(\n    Math.ceil(start / step) * step,\n    Math.floor(stop / step) * step + step / 2, // inclusive\n    step\n  );\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport ticks from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) tz = ticks(x0, x1, tz);\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] >= x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(array, p, f) {\n  if (f == null) f = number;\n  if (!(n = array.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n  if (p >= 1) return +f(array[n - 1], n - 1, array);\n  var n,\n      h = (n - 1) * p,\n      i = Math.floor(h),\n      a = +f(array[i], i, array),\n      b = +f(array[i + 1], i + 1, array);\n  return a + (b - a) * (h - i);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n  }\n\n  return a;\n}\n","import number from \"./number\";\n\nexport default function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1,\n      j = n;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) s += a; else --j;\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) s += a; else --j;\n  }\n\n  if (j) return s / j;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(array, f) {\n  var numbers = [],\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (!isNaN(a = number(array[i]))) numbers.push(a);\n  }\n\n  else {\n    while (++i < n) if (!isNaN(a = number(f(array[i], i, array)))) numbers.push(a);\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(array, f) {\n  var i = -1,\n      n = array.length,\n      a,\n      b;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n  }\n\n  else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n    while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n  }\n\n  return a;\n}\n","export default function(array) {\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = [p, p = array[++i]];\n  return pairs;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(array, compare) {\n  if (!(n = array.length)) return;\n  var i = 0,\n      n,\n      j = 0,\n      xi,\n      xj = array[j];\n\n  if (!compare) compare = ascending;\n\n  while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(array, f) {\n  var s = 0,\n      n = array.length,\n      a,\n      i = -1;\n\n  if (f == null) {\n    while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n  }\n\n  else {\n    while (++i < n) if (a = +f(array[i], i, array)) s += a;\n  }\n\n  return s;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export {default as bisect, bisectRight, bisectLeft} from \"./src/bisect\";\nexport {default as ascending} from \"./src/ascending\";\nexport {default as bisector} from \"./src/bisector\";\nexport {default as descending} from \"./src/descending\";\nexport {default as deviation} from \"./src/deviation\";\nexport {default as extent} from \"./src/extent\";\nexport {default as histogram} from \"./src/histogram\";\nexport {default as thresholdFreedmanDiaconis} from \"./src/threshold/freedmanDiaconis\";\nexport {default as thresholdScott} from \"./src/threshold/scott\";\nexport {default as thresholdSturges} from \"./src/threshold/sturges\";\nexport {default as max} from \"./src/max\";\nexport {default as mean} from \"./src/mean\";\nexport {default as median} from \"./src/median\";\nexport {default as merge} from \"./src/merge\";\nexport {default as min} from \"./src/min\";\nexport {default as pairs} from \"./src/pairs\";\nexport {default as permute} from \"./src/permute\";\nexport {default as quantile} from \"./src/quantile\";\nexport {default as range} from \"./src/range\";\nexport {default as scan} from \"./src/scan\";\nexport {default as shuffle} from \"./src/shuffle\";\nexport {default as sum} from \"./src/sum\";\nexport {default as ticks, tickStep} from \"./src/ticks\";\nexport {default as transpose} from \"./src/transpose\";\nexport {default as variance} from \"./src/variance\";\nexport {default as zip} from \"./src/zip\";\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    var d = domain(),\n        i = d.length - 1,\n        n = count == null ? 10 : count,\n        start = d[0],\n        stop = d[i],\n        step = tickStep(start, stop, n);\n\n    if (step) {\n      step = tickStep(Math.floor(start / step) * step, Math.ceil(stop / step) * step, n);\n      d[0] = Math.floor(start / step) * step;\n      d[i] = Math.ceil(stop / step) * step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","export default function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n}\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"./colors\";\n\nexport default colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n","import colors from \"./colors\";\n\nexport default colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n","import colors from \"./colors\";\n\nexport default colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n}\n","import colors from \"./colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export {\n  default as scaleBand,\n  point as scalePoint\n} from \"./src/band\";\n\nexport {\n  default as scaleIdentity\n} from \"./src/identity\";\n\nexport {\n  default as scaleLinear\n} from \"./src/linear\";\n\nexport {\n  default as scaleLog\n} from \"./src/log\";\n\nexport {\n  default as scaleOrdinal,\n  implicit as scaleImplicit\n} from \"./src/ordinal\";\n\nexport {\n  default as scalePow,\n  sqrt as scaleSqrt\n} from \"./src/pow\";\n\nexport {\n  default as scaleQuantile\n} from \"./src/quantile\";\n\nexport {\n  default as scaleQuantize\n} from \"./src/quantize\";\n\nexport {\n  default as scaleThreshold\n} from \"./src/threshold\";\n\nexport {\n  default as scaleTime\n} from \"./src/time\";\n\nexport {\n  default as scaleUtc\n} from \"./src/utcTime\";\n\nexport {\n  default as schemeCategory10\n} from \"./src/category10\";\n\nexport {\n  default as schemeCategory20b\n} from \"./src/category20b\";\n\nexport {\n  default as schemeCategory20c\n} from \"./src/category20c\";\n\nexport {\n  default as schemeCategory20\n} from \"./src/category20\";\n\nexport {\n  default as interpolateCubehelixDefault\n} from \"./src/cubehelix\";\n\nexport {\n  default as interpolateRainbow,\n  warm as interpolateWarm,\n  cool as interpolateCool\n} from \"./src/rainbow\";\n\nexport {\n  default as interpolateViridis,\n  magma as interpolateMagma,\n  inferno as interpolateInferno,\n  plasma as interpolatePlasma\n} from \"./src/viridis\";\n\nexport {\n  default as scaleSequential\n} from \"./src/sequential\";\n","import legendColor from './src/color'\nimport legendSize from './src/size'\nimport legendSymbol from './src/symbol'\nimport legendHelpers from './src/helpers'\n\nexport { legendColor, legendSize, legendSymbol, legendHelpers }\n\nexport default {\n  legendColor,\n  legendSize,\n  legendSymbol,\n  legendHelpers\n};\n","import { select } from \"d3-selection\"\nimport { format, formatPrefix } from \"d3-format\"\n\nconst d3_identity = d => d\n\nconst d3_reverse = arr => {\n  const mirror = []\n  for (let i = 0, l = arr.length; i < l; i++) {\n    mirror[i] = arr[l - i - 1]\n  }\n  return mirror\n}\n\n//Text wrapping code adapted from Mike Bostock\nconst d3_textWrapping = (text, width) => {\n  text.each(function() {\n    var text = select(this),\n      words = text\n        .text()\n        .split(/\\s+/)\n        .reverse(),\n      word,\n      line = [],\n      lineNumber = 0,\n      lineHeight = 1.2, //ems\n      y = text.attr(\"y\"),\n      dy = parseFloat(text.attr(\"dy\")) || 0,\n      tspan = text\n        .text(null)\n        .append(\"tspan\")\n        .attr(\"x\", 0)\n        .attr(\"dy\", dy + \"em\")\n\n    while ((word = words.pop())) {\n      line.push(word)\n      tspan.text(line.join(\" \"))\n      if (tspan.node().getComputedTextLength() > width && line.length > 1) {\n        line.pop()\n        tspan.text(line.join(\" \"))\n        line = [word]\n        tspan = text\n          .append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"dy\", lineHeight + dy + \"em\")\n          .text(word)\n      }\n    }\n  })\n}\n\nconst d3_mergeLabels = (gen = [], labels, domain, range, labelDelimiter) => {\n  if (typeof labels === \"object\") {\n    if (labels.length === 0) return gen\n\n    let i = labels.length\n    for (; i < gen.length; i++) {\n      labels.push(gen[i])\n    }\n    return labels\n  } else if (typeof labels === \"function\") {\n    const customLabels = []\n    const genLength = gen.length\n    for (let i = 0; i < genLength; i++) {\n      customLabels.push(\n        labels({\n          i,\n          genLength,\n          generatedLabels: gen,\n          domain,\n          range,\n          labelDelimiter\n        })\n      )\n    }\n    return customLabels\n  }\n\n  return gen\n}\n\nconst d3_linearLegend = (scale, cells, labelFormat) => {\n  let data = []\n\n  if (cells.length > 1) {\n    data = cells\n  } else {\n    const domain = scale.domain(),\n      increment = (domain[domain.length - 1] - domain[0]) / (cells - 1)\n    let i = 0\n\n    for (; i < cells; i++) {\n      data.push(domain[0] + i * increment)\n    }\n  }\n\n  const labels = data.map(labelFormat)\n  return {\n    data: data,\n    labels: labels,\n    feature: d => scale(d)\n  }\n}\n\nconst d3_quantLegend = (scale, labelFormat, labelDelimiter) => {\n  const labels = scale.range().map(d => {\n    const invert = scale.invertExtent(d)\n    return (\n      labelFormat(invert[0]) +\n      \" \" +\n      labelDelimiter +\n      \" \" +\n      labelFormat(invert[1])\n    )\n  })\n\n  return {\n    data: scale.range(),\n    labels: labels,\n    feature: d3_identity\n  }\n}\n\nconst d3_ordinalLegend = scale => ({\n  data: scale.domain(),\n  labels: scale.domain(),\n  feature: d => scale(d)\n})\n\nconst d3_cellOver = (cellDispatcher, d, obj) => {\n  cellDispatcher.call(\"cellover\", obj, d)\n}\n\nconst d3_cellOut = (cellDispatcher, d, obj) => {\n  cellDispatcher.call(\"cellout\", obj, d)\n}\n\nconst d3_cellClick = (cellDispatcher, d, obj) => {\n  cellDispatcher.call(\"cellclick\", obj, d)\n}\n\nexport default {\n  d3_drawShapes: (\n    shape,\n    shapes,\n    shapeHeight,\n    shapeWidth,\n    shapeRadius,\n    path\n  ) => {\n    if (shape === \"rect\") {\n      shapes.attr(\"height\", shapeHeight).attr(\"width\", shapeWidth)\n    } else if (shape === \"circle\") {\n      shapes.attr(\"r\", shapeRadius)\n    } else if (shape === \"line\") {\n      shapes\n        .attr(\"x1\", 0)\n        .attr(\"x2\", shapeWidth)\n        .attr(\"y1\", 0)\n        .attr(\"y2\", 0)\n    } else if (shape === \"path\") {\n      shapes.attr(\"d\", path)\n    }\n  },\n\n  d3_addText: function(svg, enter, labels, classPrefix, labelWidth) {\n    enter.append(\"text\").attr(\"class\", classPrefix + \"label\")\n    const text = svg\n      .selectAll(`g.${classPrefix}cell text.${classPrefix}label`)\n      .data(labels)\n      .text(d3_identity)\n\n    if (labelWidth) {\n      svg\n        .selectAll(`g.${classPrefix}cell text.${classPrefix}label`)\n        .call(d3_textWrapping, labelWidth)\n    }\n\n    return text\n  },\n\n  d3_calcType: function(\n    scale,\n    ascending,\n    cells,\n    labels,\n    labelFormat,\n    labelDelimiter\n  ) {\n    const type = scale.invertExtent\n      ? d3_quantLegend(scale, labelFormat, labelDelimiter)\n      : scale.ticks\n        ? d3_linearLegend(scale, cells, labelFormat)\n        : d3_ordinalLegend(scale)\n\n    //for d3.scaleSequential that doesn't have a range function\n    const range = (scale.range && scale.range()) || scale.domain()\n    type.labels = d3_mergeLabels(\n      type.labels,\n      labels,\n      scale.domain(),\n      range,\n      labelDelimiter\n    )\n\n    if (ascending) {\n      type.labels = d3_reverse(type.labels)\n      type.data = d3_reverse(type.data)\n    }\n\n    return type\n  },\n\n  d3_filterCells: (type, cellFilter) => {\n    let filterCells = type.data\n      .map((d, i) => ({ data: d, label: type.labels[i] }))\n      .filter(cellFilter)\n    const dataValues = filterCells.map(d => d.data)\n    const labelValues = filterCells.map(d => d.label)\n    type.data = type.data.filter(d => dataValues.indexOf(d) !== -1)\n    type.labels = type.labels.filter(d => labelValues.indexOf(d) !== -1)\n    return type\n  },\n\n  d3_placement: (orient, cell, cellTrans, text, textTrans, labelAlign) => {\n    cell.attr(\"transform\", cellTrans)\n    text.attr(\"transform\", textTrans)\n    if (orient === \"horizontal\") {\n      text.style(\"text-anchor\", labelAlign)\n    }\n  },\n\n  d3_addEvents: function(cells, dispatcher) {\n    cells\n      .on(\"mouseover.legend\", function(d) {\n        d3_cellOver(dispatcher, d, this)\n      })\n      .on(\"mouseout.legend\", function(d) {\n        d3_cellOut(dispatcher, d, this)\n      })\n      .on(\"click.legend\", function(d) {\n        d3_cellClick(dispatcher, d, this)\n      })\n  },\n\n  d3_title: (svg, title, classPrefix, titleWidth) => {\n    if (title !== \"\") {\n      const titleText = svg.selectAll(\"text.\" + classPrefix + \"legendTitle\")\n\n      titleText\n        .data([title])\n        .enter()\n        .append(\"text\")\n        .attr(\"class\", classPrefix + \"legendTitle\")\n\n      svg.selectAll(\"text.\" + classPrefix + \"legendTitle\").text(title)\n\n      if (titleWidth) {\n        svg\n          .selectAll(\"text.\" + classPrefix + \"legendTitle\")\n          .call(d3_textWrapping, titleWidth)\n      }\n\n      const cellsSvg = svg.select(\".\" + classPrefix + \"legendCells\")\n      const yOffset = svg\n          .select(\".\" + classPrefix + \"legendTitle\")\n          .nodes()\n          .map(d => d.getBBox().height)[0],\n        xOffset = -cellsSvg.nodes().map(function(d) {\n          return d.getBBox().x\n        })[0]\n      cellsSvg.attr(\"transform\", \"translate(\" + xOffset + \",\" + yOffset + \")\")\n    }\n  },\n\n  d3_defaultLocale: {\n    format,\n    formatPrefix\n  },\n\n  d3_defaultFormatSpecifier: \".01f\",\n\n  d3_defaultDelimiter: \"to\"\n}\n","import helper from \"./legend\"\nimport { dispatch } from \"d3-dispatch\"\nimport { scaleLinear } from \"d3-scale\"\nimport { formatLocale, formatSpecifier } from \"d3-format\"\n\nimport { sum } from \"d3-array\"\n\nexport default function color() {\n  let scale = scaleLinear(),\n    shape = \"rect\",\n    shapeWidth = 15,\n    shapeHeight = 15,\n    shapeRadius = 10,\n    shapePadding = 2,\n    cells = [5],\n    cellFilter,\n    labels = [],\n    classPrefix = \"\",\n    useClass = false,\n    title = \"\",\n    locale = helper.d3_defaultLocale,\n    specifier = helper.d3_defaultFormatSpecifier,\n    labelOffset = 10,\n    labelAlign = \"middle\",\n    labelDelimiter = helper.d3_defaultDelimiter,\n    labelWrap,\n    orient = \"vertical\",\n    ascending = false,\n    path,\n    titleWidth,\n    legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\")\n\n  function legend(svg) {\n    const type = helper.d3_calcType(\n        scale,\n        ascending,\n        cells,\n        labels,\n        locale.format(specifier),\n        labelDelimiter\n      ),\n      legendG = svg.selectAll(\"g\").data([scale])\n\n    legendG\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"legendCells\")\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter)\n    }\n\n    let cell = svg\n      .select(\".\" + classPrefix + \"legendCells\")\n      .selectAll(\".\" + classPrefix + \"cell\")\n      .data(type.data)\n\n    const cellEnter = cell\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"cell\")\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\")\n\n    let shapes = svg\n      .selectAll(\n        \"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"\n      )\n      .data(type.data)\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher)\n\n    cell\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n    shapes\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n\n    shapes = shapes.merge(shapes)\n\n    helper.d3_drawShapes(\n      shape,\n      shapes,\n      shapeHeight,\n      shapeWidth,\n      shapeRadius,\n      path\n    )\n    const text = helper.d3_addText(\n      svg,\n      cellEnter,\n      type.labels,\n      classPrefix,\n      labelWrap\n    )\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell)\n\n    // sets placement\n    const textSize = text.nodes().map(d => d.getBBox()),\n      shapeSize = shapes.nodes().map(d => d.getBBox())\n    //sets scale\n    //everything is fill except for line which is stroke,\n    if (!useClass) {\n      if (shape == \"line\") {\n        shapes.style(\"stroke\", type.feature)\n      } else {\n        shapes.style(\"fill\", type.feature)\n      }\n    } else {\n      shapes.attr(\"class\", d => `${classPrefix}swatch ${type.feature(d)}`)\n    }\n\n    let cellTrans,\n      textTrans,\n      textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      const cellSize = textSize.map((d, i) =>\n        Math.max(d.height, shapeSize[i].height)\n      )\n\n      cellTrans = (d, i) => {\n        const height = sum(cellSize.slice(0, i))\n        return `translate(0, ${height + i * shapePadding})`\n      }\n\n      textTrans = (d, i) =>\n        `translate( ${shapeSize[i].width +\n          shapeSize[i].x +\n          labelOffset}, ${shapeSize[i].y + shapeSize[i].height / 2 + 5})`\n    } else if (orient === \"horizontal\") {\n      cellTrans = (d, i) =>\n        `translate(${i * (shapeSize[i].width + shapePadding)},0)`\n      textTrans = (d, i) => `translate(${shapeSize[i].width * textAlign +\n        shapeSize[i].x},\n          ${shapeSize[i].height + shapeSize[i].y + labelOffset + 8})`\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign)\n    helper.d3_title(svg, title, classPrefix, titleWidth)\n\n    cell.transition().style(\"opacity\", 1)\n  }\n\n  legend.scale = function(_) {\n    if (!arguments.length) return scale\n    scale = _\n    return legend\n  }\n\n  legend.cells = function(_) {\n    if (!arguments.length) return cells\n    if (_.length > 1 || _ >= 2) {\n      cells = _\n    }\n    return legend\n  }\n\n  legend.cellFilter = function(_) {\n    if (!arguments.length) return cellFilter\n    cellFilter = _\n    return legend\n  }\n\n  legend.shape = function(_, d) {\n    if (!arguments.length) return shape\n    if (\n      _ == \"rect\" ||\n      _ == \"circle\" ||\n      _ == \"line\" ||\n      (_ == \"path\" && typeof d === \"string\")\n    ) {\n      shape = _\n      path = d\n    }\n    return legend\n  }\n\n  legend.shapeWidth = function(_) {\n    if (!arguments.length) return shapeWidth\n    shapeWidth = +_\n    return legend\n  }\n\n  legend.shapeHeight = function(_) {\n    if (!arguments.length) return shapeHeight\n    shapeHeight = +_\n    return legend\n  }\n\n  legend.shapeRadius = function(_) {\n    if (!arguments.length) return shapeRadius\n    shapeRadius = +_\n    return legend\n  }\n\n  legend.shapePadding = function(_) {\n    if (!arguments.length) return shapePadding\n    shapePadding = +_\n    return legend\n  }\n\n  legend.labels = function(_) {\n    if (!arguments.length) return labels\n    labels = _\n    return legend\n  }\n\n  legend.labelAlign = function(_) {\n    if (!arguments.length) return labelAlign\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _\n    }\n    return legend\n  }\n\n  legend.locale = function(_) {\n    if (!arguments.length) return locale\n    locale = formatLocale(_)\n    return legend\n  }\n\n  legend.labelFormat = function(_) {\n    if (!arguments.length) return legend.locale().format(specifier)\n    specifier = formatSpecifier(_)\n    return legend\n  }\n\n  legend.labelOffset = function(_) {\n    if (!arguments.length) return labelOffset\n    labelOffset = +_\n    return legend\n  }\n\n  legend.labelDelimiter = function(_) {\n    if (!arguments.length) return labelDelimiter\n    labelDelimiter = _\n    return legend\n  }\n\n  legend.labelWrap = function(_) {\n    if (!arguments.length) return labelWrap\n    labelWrap = _\n    return legend\n  }\n\n  legend.useClass = function(_) {\n    if (!arguments.length) return useClass\n    if (_ === true || _ === false) {\n      useClass = _\n    }\n    return legend\n  }\n\n  legend.orient = function(_) {\n    if (!arguments.length) return orient\n    _ = _.toLowerCase()\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _\n    }\n    return legend\n  }\n\n  legend.ascending = function(_) {\n    if (!arguments.length) return ascending\n    ascending = !!_\n    return legend\n  }\n\n  legend.classPrefix = function(_) {\n    if (!arguments.length) return classPrefix\n    classPrefix = _\n    return legend\n  }\n\n  legend.title = function(_) {\n    if (!arguments.length) return title\n    title = _\n    return legend\n  }\n\n  legend.titleWidth = function(_) {\n    if (!arguments.length) return titleWidth\n    titleWidth = _\n    return legend\n  }\n\n  legend.textWrap = function(_) {\n    if (!arguments.length) return textWrap\n    textWrap = _\n    return legend\n  }\n\n  legend.on = function() {\n    const value = legendDispatcher.on.apply(legendDispatcher, arguments)\n    return value === legendDispatcher ? legend : value\n  }\n\n  return legend\n}\n","import helper from \"./legend\"\nimport { dispatch } from \"d3-dispatch\"\nimport { scaleLinear } from \"d3-scale\"\nimport { formatLocale, formatSpecifier } from \"d3-format\"\nimport { sum, max } from \"d3-array\"\n\nexport default function size() {\n  let scale = scaleLinear(),\n    shape = \"rect\",\n    shapeWidth = 15,\n    shapePadding = 2,\n    cells = [5],\n    cellFilter,\n    labels = [],\n    classPrefix = \"\",\n    title = \"\",\n    locale = helper.d3_defaultLocale,\n    specifier = helper.d3_defaultFormatSpecifier,\n    labelOffset = 10,\n    labelAlign = \"middle\",\n    labelDelimiter = helper.d3_defaultDelimiter,\n    labelWrap,\n    orient = \"vertical\",\n    ascending = false,\n    path,\n    titleWidth,\n    legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\")\n\n  function legend(svg) {\n    const type = helper.d3_calcType(\n        scale,\n        ascending,\n        cells,\n        labels,\n        locale.format(specifier),\n        labelDelimiter\n      ),\n      legendG = svg.selectAll(\"g\").data([scale])\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter)\n    }\n\n    legendG\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"legendCells\")\n\n    let cell = svg\n      .select(\".\" + classPrefix + \"legendCells\")\n      .selectAll(\".\" + classPrefix + \"cell\")\n      .data(type.data)\n    const cellEnter = cell\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"cell\")\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\")\n\n    let shapes = svg.selectAll(\n      \"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\"\n    )\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher)\n\n    cell\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n\n    shapes\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n    shapes = shapes.merge(shapes)\n\n    //creates shape\n    if (shape === \"line\") {\n      helper.d3_drawShapes(shape, shapes, 0, shapeWidth)\n      shapes.attr(\"stroke-width\", type.feature)\n    } else {\n      helper.d3_drawShapes(\n        shape,\n        shapes,\n        type.feature,\n        type.feature,\n        type.feature,\n        path\n      )\n    }\n\n    const text = helper.d3_addText(\n      svg,\n      cellEnter,\n      type.labels,\n      classPrefix,\n      labelWrap\n    )\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell)\n\n    //sets placement\n\n    const textSize = text.nodes().map(d => d.getBBox()),\n      shapeSize = shapes.nodes().map((d, i) => {\n        const bbox = d.getBBox()\n        const stroke = scale(type.data[i])\n\n        if (shape === \"line\" && orient === \"horizontal\") {\n          bbox.height = bbox.height + stroke\n        } else if (shape === \"line\" && orient === \"vertical\") {\n          bbox.width = bbox.width\n        }\n        return bbox\n      })\n\n    const maxH = max(shapeSize, d => d.height + d.y),\n      maxW = max(shapeSize, d => d.width + d.x)\n\n    let cellTrans,\n      textTrans,\n      textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      const cellSize = textSize.map((d, i) =>\n        Math.max(d.height, shapeSize[i].height)\n      )\n      const y =\n        shape == \"circle\" || shape == \"line\" ? shapeSize[0].height / 2 : 0\n      cellTrans = (d, i) => {\n        const height = sum(cellSize.slice(0, i))\n\n        return `translate(0, ${y + height + i * shapePadding})`\n      }\n\n      textTrans = (d, i) => `translate( ${maxW + labelOffset},\n          ${shapeSize[i].y + shapeSize[i].height / 2 + 5})`\n    } else if (orient === \"horizontal\") {\n      cellTrans = (d, i) => {\n        const width = sum(shapeSize.slice(0, i), d => d.width)\n        const y = shape == \"circle\" || shape == \"line\" ? maxH / 2 : 0\n        return `translate(${width + i * shapePadding}, ${y})`\n      }\n\n      const offset = shape == \"line\" ? maxH / 2 : maxH\n      textTrans = (d, i) => {\n        return `translate( ${shapeSize[i].width * textAlign + shapeSize[i].x},\n              ${offset + labelOffset})`\n      }\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign)\n    helper.d3_title(svg, title, classPrefix, titleWidth)\n\n    cell.transition().style(\"opacity\", 1)\n  }\n\n  legend.scale = function(_) {\n    if (!arguments.length) return scale\n    scale = _\n    return legend\n  }\n\n  legend.cells = function(_) {\n    if (!arguments.length) return cells\n    if (_.length > 1 || _ >= 2) {\n      cells = _\n    }\n    return legend\n  }\n\n  legend.cellFilter = function(_) {\n    if (!arguments.length) return cellFilter\n    cellFilter = _\n    return legend\n  }\n\n  legend.shape = function(_, d) {\n    if (!arguments.length) return shape\n    if (_ == \"rect\" || _ == \"circle\" || _ == \"line\") {\n      shape = _\n      path = d\n    }\n    return legend\n  }\n\n  legend.shapeWidth = function(_) {\n    if (!arguments.length) return shapeWidth\n    shapeWidth = +_\n    return legend\n  }\n\n  legend.shapePadding = function(_) {\n    if (!arguments.length) return shapePadding\n    shapePadding = +_\n    return legend\n  }\n\n  legend.labels = function(_) {\n    if (!arguments.length) return labels\n    labels = _\n    return legend\n  }\n\n  legend.labelAlign = function(_) {\n    if (!arguments.length) return labelAlign\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _\n    }\n    return legend\n  }\n\n  legend.locale = function(_) {\n    if (!arguments.length) return locale\n    locale = formatLocale(_)\n    return legend\n  }\n\n  legend.labelFormat = function(_) {\n    if (!arguments.length) return legend.locale().format(specifier)\n    specifier = formatSpecifier(_)\n    return legend\n  }\n\n  legend.labelOffset = function(_) {\n    if (!arguments.length) return labelOffset\n    labelOffset = +_\n    return legend\n  }\n\n  legend.labelDelimiter = function(_) {\n    if (!arguments.length) return labelDelimiter\n    labelDelimiter = _\n    return legend\n  }\n\n  legend.labelWrap = function(_) {\n    if (!arguments.length) return labelWrap\n    labelWrap = _\n    return legend\n  }\n\n  legend.orient = function(_) {\n    if (!arguments.length) return orient\n    _ = _.toLowerCase()\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _\n    }\n    return legend\n  }\n\n  legend.ascending = function(_) {\n    if (!arguments.length) return ascending\n    ascending = !!_\n    return legend\n  }\n\n  legend.classPrefix = function(_) {\n    if (!arguments.length) return classPrefix\n    classPrefix = _\n    return legend\n  }\n\n  legend.title = function(_) {\n    if (!arguments.length) return title\n    title = _\n    return legend\n  }\n\n  legend.titleWidth = function(_) {\n    if (!arguments.length) return titleWidth\n    titleWidth = _\n    return legend\n  }\n\n  legend.on = function() {\n    const value = legendDispatcher.on.apply(legendDispatcher, arguments)\n    return value === legendDispatcher ? legend : value\n  }\n\n  return legend\n}\n","import helper from \"./legend\"\nimport { dispatch } from \"d3-dispatch\"\nimport { scaleLinear } from \"d3-scale\"\nimport { formatLocale, formatSpecifier } from \"d3-format\"\nimport { sum, max } from \"d3-array\"\n\nexport default function symbol() {\n  let scale = scaleLinear(),\n    shape = \"path\",\n    shapeWidth = 15,\n    shapeHeight = 15,\n    shapeRadius = 10,\n    shapePadding = 5,\n    cells = [5],\n    cellFilter,\n    labels = [],\n    classPrefix = \"\",\n    title = \"\",\n    locale = helper.d3_defaultLocale,\n    specifier = helper.d3_defaultFormatSpecifier,\n    labelAlign = \"middle\",\n    labelOffset = 10,\n    labelDelimiter = helper.d3_defaultDelimiter,\n    labelWrap,\n    orient = \"vertical\",\n    ascending = false,\n    titleWidth,\n    legendDispatcher = dispatch(\"cellover\", \"cellout\", \"cellclick\")\n\n  function legend(svg) {\n    const type = helper.d3_calcType(\n        scale,\n        ascending,\n        cells,\n        labels,\n        locale.format(specifier),\n        labelDelimiter\n      ),\n      legendG = svg.selectAll(\"g\").data([scale])\n\n    if (cellFilter) {\n      helper.d3_filterCells(type, cellFilter)\n    }\n\n    legendG\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"legendCells\")\n\n    let cell = svg\n      .select(\".\" + classPrefix + \"legendCells\")\n      .selectAll(\".\" + classPrefix + \"cell\")\n      .data(type.data)\n    const cellEnter = cell\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", classPrefix + \"cell\")\n    cellEnter.append(shape).attr(\"class\", classPrefix + \"swatch\")\n\n    let shapes = svg.selectAll(\"g.\" + classPrefix + \"cell \" + shape + \".\" + classPrefix + \"swatch\")\n\n    //add event handlers\n    helper.d3_addEvents(cellEnter, legendDispatcher)\n\n    //remove old shapes\n    cell\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n    shapes\n      .exit()\n      .transition()\n      .style(\"opacity\", 0)\n      .remove()\n    shapes = shapes.merge(shapes)\n\n    helper.d3_drawShapes(\n      shape,\n      shapes,\n      shapeHeight,\n      shapeWidth,\n      shapeRadius,\n      type.feature\n    )\n    const text = helper.d3_addText(\n      svg,\n      cellEnter,\n      type.labels,\n      classPrefix,\n      labelWrap\n    )\n\n    // we need to merge the selection, otherwise changes in the legend (e.g. change of orientation) are applied only to the new cells and not the existing ones.\n    cell = cellEnter.merge(cell)\n\n    // sets placement\n    const textSize = text.nodes().map(d => d.getBBox()),\n      shapeSize = shapes.nodes().map(d => d.getBBox())\n\n    const maxH = max(shapeSize, d => d.height),\n      maxW = max(shapeSize, d => d.width)\n\n    let cellTrans,\n      textTrans,\n      textAlign = labelAlign == \"start\" ? 0 : labelAlign == \"middle\" ? 0.5 : 1\n\n    //positions cells and text\n    if (orient === \"vertical\") {\n      const cellSize = textSize.map((d, i) => Math.max(maxH, d.height))\n\n      cellTrans = (d, i) => {\n        const height = sum(cellSize.slice(0, i))\n        return `translate(0, ${height + i * shapePadding} )`\n      }\n      textTrans = (d, i) => `translate( ${maxW + labelOffset},\n              ${shapeSize[i].y + shapeSize[i].height / 2 + 5})`\n    } else if (orient === \"horizontal\") {\n      cellTrans = (d, i) => `translate( ${i * (maxW + shapePadding)},0)`\n      textTrans = (d, i) => `translate( ${shapeSize[i].width * textAlign +\n        shapeSize[i].x},\n              ${maxH + labelOffset})`\n    }\n\n    helper.d3_placement(orient, cell, cellTrans, text, textTrans, labelAlign)\n    helper.d3_title(svg, title, classPrefix, titleWidth)\n    cell.transition().style(\"opacity\", 1)\n  }\n\n  legend.scale = function(_) {\n    if (!arguments.length) return scale\n    scale = _\n    return legend\n  }\n\n  legend.cells = function(_) {\n    if (!arguments.length) return cells\n    if (_.length > 1 || _ >= 2) {\n      cells = _\n    }\n    return legend\n  }\n\n  legend.cellFilter = function(_) {\n    if (!arguments.length) return cellFilter\n    cellFilter = _\n    return legend\n  }\n\n  legend.shapePadding = function(_) {\n    if (!arguments.length) return shapePadding\n    shapePadding = +_\n    return legend\n  }\n\n  legend.labels = function(_) {\n    if (!arguments.length) return labels\n    labels = _\n    return legend\n  }\n\n  legend.labelAlign = function(_) {\n    if (!arguments.length) return labelAlign\n    if (_ == \"start\" || _ == \"end\" || _ == \"middle\") {\n      labelAlign = _\n    }\n    return legend\n  }\n\n  legend.locale = function(_) {\n    if (!arguments.length) return locale\n    locale = formatLocale(_)\n    return legend\n  }\n\n  legend.labelFormat = function(_) {\n    if (!arguments.length) return legend.locale().format(specifier)\n    specifier = formatSpecifier(_)\n    return legend\n  }\n\n  legend.labelOffset = function(_) {\n    if (!arguments.length) return labelOffset\n    labelOffset = +_\n    return legend\n  }\n\n  legend.labelDelimiter = function(_) {\n    if (!arguments.length) return labelDelimiter\n    labelDelimiter = _\n    return legend\n  }\n\n  legend.labelWrap = function(_) {\n    if (!arguments.length) return labelWrap\n    labelWrap = _\n    return legend\n  }\n\n  legend.orient = function(_) {\n    if (!arguments.length) return orient\n    _ = _.toLowerCase()\n    if (_ == \"horizontal\" || _ == \"vertical\") {\n      orient = _\n    }\n    return legend\n  }\n\n  legend.ascending = function(_) {\n    if (!arguments.length) return ascending\n    ascending = !!_\n    return legend\n  }\n\n  legend.classPrefix = function(_) {\n    if (!arguments.length) return classPrefix\n    classPrefix = _\n    return legend\n  }\n\n  legend.title = function(_) {\n    if (!arguments.length) return title\n    title = _\n    return legend\n  }\n\n  legend.titleWidth = function(_) {\n    if (!arguments.length) return titleWidth\n    titleWidth = _\n    return legend\n  }\n\n  legend.on = function() {\n    const value = legendDispatcher.on.apply(legendDispatcher, arguments)\n    return value === legendDispatcher ? legend : value\n  }\n\n  return legend\n}\n","export const thresholdLabels = function({\n  i,\n  genLength,\n  generatedLabels,\n  labelDelimiter\n}) {\n  if (i === 0) {\n    const values = generatedLabels[i].split(` ${labelDelimiter} `)\n    return `Less than ${values[1]}`\n  } else if (i === genLength - 1) {\n    const values = generatedLabels[i].split(` ${labelDelimiter} `)\n    return `${values[0]} or more`\n  }\n  return generatedLabels[i]\n}\n\nexport default {\n  thresholdLabels\n}\n","import { scaleThreshold } from 'd3';\n\nexport const punchColorScale = scaleThreshold()\n  .domain([0.6, 0.7, 0.8, 0.9, 0.95, 1])\n  .range([\n    \"#d73027\",\n    \"#f46d43\",\n    \"#fdae61\",\n    \"#fee08b\",\n    \"#66bd63\",\n    \"#1a9850\"\n  ]);\n","export var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var ceil = Math.ceil;\nexport var cos = Math.cos;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var pow = Math.pow;\nexport var round = Math.round;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sin = Math.sin;\nexport var tan = Math.tan;\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var sqrt1_2 = Math.SQRT1_2;\nexport var sqrt2 = sqrt(2);\nexport var sqrtPi = sqrt(pi);\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport function sinci(x) {\n  return x ? x / Math.sin(x) : 1;\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function sqrt(x) {\n  return x > 0 ? Math.sqrt(x) : 0;\n}\n\nexport function tanh(x) {\n  x = exp(2 * x);\n  return (x - 1) / (x + 1);\n}\n\nexport function sinh(x) {\n  return (exp(x) - exp(-x)) / 2;\n}\n\nexport function cosh(x) {\n  return (exp(x) + exp(-x)) / 2;\n}\n\nexport function arsinh(x) {\n  return log(x + sqrt(x * x + 1));\n}\n\nexport function arcosh(x) {\n  return log(x + sqrt(x * x - 1));\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, halfPi, log, radians, sin, sqrt, tan} from \"./math\";\n\nexport function airyRaw(beta) {\n  var tanBeta_2 = tan(beta / 2),\n      b = 2 * log(cos(beta / 2)) / (tanBeta_2 * tanBeta_2);\n\n  function forward(x, y) {\n    var cosx = cos(x),\n        cosy = cos(y),\n        siny = sin(y),\n        cosz = cosy * cosx,\n        k = -((1 - cosz ? log((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));\n    return [k * cosy * sin(x), k * siny];\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y),\n        z = -beta / 2,\n        i = 50, delta;\n    if (!r) return [0, 0];\n    do {\n      var z_2 = z / 2,\n          cosz_2 = cos(z_2),\n          sinz_2 = sin(z_2),\n          tanz_2 = tan(z_2),\n          lnsecz_2 = log(1 / cosz_2);\n      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2));\n    } while (abs(delta) > epsilon && --i > 0);\n    var sinz = sin(z);\n    return [atan2(x * sinz, r * cos(z)), asin(y * sinz / r)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var beta = halfPi,\n      m = projectionMutator(airyRaw),\n      p = m(beta);\n\n  p.radius = function(_) {\n    return arguments.length ? m(beta = _ * radians) : beta * degrees;\n  };\n\n  return p\n      .scale(179.976)\n      .clipAngle(147);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, pi, sin, sinci, sqrt} from \"./math\";\n\nexport function aitoffRaw(x, y) {\n  var cosy = cos(y), sincia = sinci(acos(cosy * cos(x /= 2)));\n  return [2 * cosy * sin(x) * sincia, sin(y) * sincia];\n}\n\n// Abort if [x, y] is not within an ellipse centered at [0, 0] with\n// semi-major axis pi and semi-minor axis pi/2.\naitoffRaw.invert = function(x, y) {\n  if (x * x + 4 * y * y > pi * pi + epsilon) return;\n  var x1 = x, y1 = y, i = 25;\n  do {\n    var sinx = sin(x1),\n        sinx_2 = sin(x1 / 2),\n        cosx_2 = cos(x1 / 2),\n        siny = sin(y1),\n        cosy = cos(y1),\n        sin_2y = sin(2 * y1),\n        sin2y = siny * siny,\n        cos2y = cosy * cosy,\n        sin2x_2 = sinx_2 * sinx_2,\n        c = 1 - cos2y * cosx_2 * cosx_2,\n        e = c ? acos(cosy * cosx_2) * sqrt(f = 1 / c) : f = 0,\n        f,\n        fx = 2 * e * cosy * sinx_2 - x,\n        fy = e * siny - y,\n        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),\n        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),\n        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),\n        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),\n        z = dxdy * dydx - dydy * dxdx;\n    if (!z) break;\n    var dx = (fy * dxdy - fx * dydy) / z,\n        dy = (fx * dydx - fy * dxdx) / z;\n    x1 -= dx, y1 -= dy;\n  } while ((abs(dx) > epsilon || abs(dy) > epsilon) && --i > 0);\n  return [x1, y1];\n};\n\nexport default function() {\n  return projection(aitoffRaw)\n      .scale(152.63);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, atan2, cos, degrees, epsilon, radians, sin, tan} from \"./math\";\n\nexport function armadilloRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      k = (1 + sinPhi0 - cosPhi0) / 2;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        cosLambda = cos(lambda /= 2);\n    return [\n      (1 + cosPhi) * sin(lambda),\n      (sPhi0 * phi > -atan2(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + sin(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = 0,\n        phi = 0,\n        i = 50;\n    do {\n      var cosLambda = cos(lambda),\n          sinLambda = sin(lambda),\n          cosPhi = cos(phi),\n          sinPhi = sin(phi),\n          A = 1 + cosPhi,\n          fx = A * sinLambda - x,\n          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,\n          dxdLambda = A * cosLambda / 2,\n          dxdPhi = -sinLambda * sinPhi,\n          dydLambda = sinPhi0 * A * sinLambda / 2,\n          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,\n          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,\n          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,\n          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;\n      lambda -= dLambda, phi -= dPhi;\n    } while ((abs(dLambda) > epsilon || abs(dPhi) > epsilon) && --i > 0);\n    return sPhi0 * phi > -atan2(cos(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var phi0 = 20 * radians,\n      sPhi0 = phi0 >= 0 ? 1 : -1,\n      tanPhi0 = tan(sPhi0 * phi0),\n      m = projectionMutator(armadilloRaw),\n      p = m(phi0),\n      stream_ = p.stream;\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    tanPhi0 = tan((sPhi0 = (phi0 = _ * radians) >= 0 ? 1 : -1) * phi0);\n    return m(phi0);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream)),\n        precision = p.precision();\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90)\n        sphereStream.point(lambda, sPhi0 * 90);\n      if (phi0) while (sPhi0 * (lambda -= 3 * sPhi0 * precision) >= -180) {\n        sphereStream.point(lambda, sPhi0 * -atan2(cos(lambda * radians / 2), tanPhi0) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(218.695)\n      .center([0, 28.0974]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, arcosh, arsinh, asin, atan2, cos, cosh, sign, sin, sinh, sqrt, tan} from \"./math\";\n\nexport function augustRaw(lambda, phi) {\n  var tanPhi = tan(phi / 2),\n      k = sqrt(1 - tanPhi * tanPhi),\n      c = 1 + k * cos(lambda /= 2),\n      x = sin(lambda) * k / c,\n      y = tanPhi / c,\n      x2 = x * x,\n      y2 = y * y;\n  return [\n    4 / 3 * x * (3 + x2 - 3 * y2),\n    4 / 3 * y * (3 + 3 * x2 - y2)\n  ];\n}\n\naugustRaw.invert = function(x, y) {\n  x *= 3 / 8, y *= 3 / 8;\n  if (!x && abs(y) > 1) return null;\n  var x2 = x * x,\n      y2 = y * y,\n      s = 1 + x2 + y2,\n      sin3Eta = sqrt((s - sqrt(s * s - 4 * y * y)) / 2),\n      eta = asin(sin3Eta) / 3,\n      xi = sin3Eta ? arcosh(abs(y / sin3Eta)) / 3 : arsinh(abs(x)) / 3,\n      cosEta = cos(eta),\n      coshXi = cosh(xi),\n      d = coshXi * coshXi - cosEta * cosEta;\n  return [\n    sign(x) * 2 * atan2(sinh(xi) * cosEta, 0.25 - d),\n    sign(y) * 2 * atan2(coshXi * sin(eta), 0.25 + d)\n  ];\n};\n\nexport default function() {\n  return projection(augustRaw)\n      .scale(66.1603);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, atan, cos, epsilon2, exp, halfPi, log, quarterPi, sign, sin, sqrt, sqrt2, tan} from \"./math\";\n\nvar sqrt8 = sqrt(8),\n    phi0 = log(1 + sqrt2);\n\nexport function bakerRaw(lambda, phi) {\n  var phi0 = abs(phi);\n  return phi0 < quarterPi\n      ? [lambda, log(tan(quarterPi + phi / 2))]\n      : [lambda * cos(phi0) * (2 * sqrt2 - 1 / sin(phi0)), sign(phi) * (2 * sqrt2 * (phi0 - quarterPi) - log(tan(phi0 / 2)))];\n}\n\nbakerRaw.invert = function(x, y) {\n  if ((y0 = abs(y)) < phi0) return [x, 2 * atan(exp(y)) - halfPi];\n  var phi = quarterPi, i = 25, delta, y0;\n  do {\n    var cosPhi_2 = cos(phi / 2), tanPhi_2 = tan(phi / 2);\n    phi -= delta = (sqrt8 * (phi - quarterPi) - log(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  return [x / (cos(phi) * (sqrt8 - 1 / sin(phi))), sign(y) * phi];\n};\n\nexport default function() {\n  return projection(bakerRaw)\n      .scale(112.314);\n}\n","import {geoProjectionMutator as projectionMutator, geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {abs, acos, asin, atan, atan2, cos, degrees, halfPi, pi, radians, round, sin, sqrt, tan} from \"./math\";\n\nexport function berghausRaw(lobes) {\n  var k = 2 * pi / lobes;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi);\n    if (abs(lambda) > halfPi) { // back hemisphere\n      var theta = atan2(p[1], p[0]),\n          r = sqrt(p[0] * p[0] + p[1] * p[1]),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          alpha = atan2(sin(theta -= theta0), 2 - cos(theta)); // angle relative to lobe end\n      theta = theta0 + asin(pi / r * sin(alpha)) - alpha;\n      p[0] = r * cos(theta);\n      p[1] = r * sin(theta);\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r = sqrt(x * x + y * y);\n    if (r > halfPi) {\n      var theta = atan2(y, x),\n          theta0 = k * round((theta - halfPi) / k) + halfPi,\n          s = theta > theta0 ? -1 : 1,\n          A = r * cos(theta0 - theta),\n          cotAlpha = 1 / tan(s * acos((A - pi) / sqrt(pi * (pi - 2 * A) + r * r)));\n      theta = theta0 + 2 * atan((cotAlpha + s * sqrt(cotAlpha * cotAlpha - 3)) / 3);\n      x = r * cos(theta), y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var lobes = 5,\n      m = projectionMutator(berghausRaw),\n      p = m(lobes),\n      projectionStream = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.lobes = function(_) {\n    return arguments.length ? m(lobes = +_) : lobes;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = projectionStream(stream),\n        sphereStream = (p.rotate([0, 0]), projectionStream(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 360 / lobes, delta0 = 2 * pi / lobes, phi = 90 - 180 / lobes, phi0 = halfPi; i < lobes; ++i, phi -= delta, phi0 -= delta0) {\n        sphereStream.point(atan2(sr * cos(phi0), cr) * degrees, asin(sr * sin(phi0)) * degrees);\n        if (phi < -90) {\n          sphereStream.point(-90, -180 - phi - epsilon);\n          sphereStream.point(-90, -180 - phi + epsilon);\n        } else {\n          sphereStream.point(90, phi + epsilon);\n          sphereStream.point(90, phi - epsilon);\n        }\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .scale(87.8076)\n      .center([0, 17.1875])\n      .clipAngle(180 - 1e-3);\n}\n","import {geoAzimuthalEqualAreaRaw as azimuthalEqualAreaRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {asin, cos, sin} from \"./math\";\n\nexport function hammerRaw(A, B) {\n  if (arguments.length < 2) B = A;\n  if (B === 1) return azimuthalEqualAreaRaw;\n  if (B === Infinity) return hammerQuarticAuthalicRaw;\n\n  function forward(lambda, phi) {\n    var coordinates = azimuthalEqualAreaRaw(lambda / B, phi);\n    coordinates[0] *= A;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    var coordinates = azimuthalEqualAreaRaw.invert(x / A, y);\n    coordinates[0] *= B;\n    return coordinates;\n  };\n\n  return forward;\n}\n\nfunction hammerQuarticAuthalicRaw(lambda, phi) {\n  return [\n    lambda * cos(phi) / cos(phi /= 2),\n    2 * sin(phi)\n  ];\n}\n\nhammerQuarticAuthalicRaw.invert = function(x, y) {\n  var phi = 2 * asin(y / 2);\n  return [\n    x * cos(phi / 2) / cos(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  var B = 2,\n      m = projectionMutator(hammerRaw),\n      p = m(B);\n\n  p.coefficient = function(_) {\n    if (!arguments.length) return B;\n    return m(B = +_);\n  };\n\n  return p\n    .scale(169.529);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {hammerRaw} from \"./hammer\";\nimport {cos, pi, sin} from \"./math\";\n\n// Bertin 1953 as a modified Briesemeister\n// https://bl.ocks.org/Fil/5b9ee9636dfb6ffa53443c9006beb642\nexport function bertin1953Raw() {\n  var hammer = hammerRaw(1.68, 2),\n      fu = 1.4, k = 12;\n\n  return function(lambda, phi) {\n\n    if (lambda + phi < -fu) {\n      var u = (lambda - phi + 1.6) * (lambda + phi + fu) / 8;\n      lambda += u;\n      phi -= 0.8 * u * sin(phi + pi / 2);\n    }\n\n    var r = hammer(lambda, phi);\n\n    var d = (1 - cos(lambda * phi)) / k;\n\n    if (r[1] < 0) {\n      r[0] *= 1 + d;\n    }\n    if (r[1] > 0) {\n      r[1] *= 1 + d / 1.5 * r[0] * r[0];\n    }\n\n    return r;\n  };\n}\n\nexport default function() {\n  var p = projection(bertin1953Raw());\n\n  p.rotate([-16.5, -42]);\n  delete p.rotate;\n\n  return p\n    .scale(176.57)\n    .center([7.93, 0.09]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt2} from \"./math\";\n\nexport function mollweideBromleyTheta(cp, phi) {\n  var cpsinPhi = cp * sin(phi), i = 30, delta;\n  do phi -= delta = (phi + sin(phi) - cpsinPhi) / (1 + cos(phi));\n  while (abs(delta) > epsilon && --i > 0);\n  return phi / 2;\n}\n\nexport function mollweideBromleyRaw(cx, cy, cp) {\n\n  function forward(lambda, phi) {\n    return [cx * lambda * cos(phi = mollweideBromleyTheta(cp, phi)), cy * sin(phi)];\n  }\n\n  forward.invert = function(x, y) {\n    return y = asin(y / cy), [x / (cx * cos(y)), asin((2 * y + sin(2 * y)) / cp)];\n  };\n\n  return forward;\n}\n\nexport var mollweideRaw = mollweideBromleyRaw(sqrt2 / halfPi, sqrt2, pi);\n\nexport default function() {\n  return projection(mollweideRaw)\n      .scale(169.529);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideBromleyTheta} from \"./mollweide\";\nimport {abs, cos, epsilon, pi, quarterPi, sin, sqrt2} from \"./math\";\n\nvar k = 2.00276,\n    w = 1.11072;\n\nexport function boggsRaw(lambda, phi) {\n  var theta = mollweideBromleyTheta(pi, phi);\n  return [k * lambda / (1 / cos(phi) + w / cos(theta)), (phi + sqrt2 * sin(theta)) / k];\n}\n\nboggsRaw.invert = function(x, y) {\n  var ky = k * y, theta = y < 0 ? -quarterPi : quarterPi, i = 25, delta, phi;\n  do {\n    phi = ky - sqrt2 * sin(theta);\n    theta -= delta = (sin(2 * theta) + 2 * theta - pi * sin(phi)) / (2 * cos(2 * theta) + 2 + pi * cos(phi) * sqrt2 * cos(theta));\n  } while (abs(delta) > epsilon && --i > 0);\n  phi = ky - sqrt2 * sin(theta);\n  return [x * (1 / cos(phi) + w / cos(theta)) / k, phi];\n};\n\nexport default function() {\n  return projection(boggsRaw)\n      .scale(160.857);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {degrees, radians} from \"./math\";\n\nexport default function(projectAt) {\n  var phi0 = 0,\n      m = projectionMutator(projectAt),\n      p = m(phi0);\n\n  p.parallel = function(_) {\n    return arguments.length ? m(phi0 = _ * radians) : phi0 * degrees;\n  };\n\n  return p;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {cos} from \"./math\";\n\nexport function sinusoidalRaw(lambda, phi) {\n  return [lambda * cos(phi), phi];\n}\n\nsinusoidalRaw.invert = function(x, y) {\n  return [x / cos(y), y];\n};\n\nexport default function() {\n  return projection(sinusoidalRaw)\n      .scale(152.63);\n}\n","import parallel1 from \"./parallel1\";\nimport {atan2, cos, sin, sqrt, tan} from \"./math\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport function bonneRaw(phi0) {\n  if (!phi0) return sinusoidalRaw;\n  var cotPhi0 = 1 / tan(phi0);\n\n  function forward(lambda, phi) {\n    var rho = cotPhi0 + phi0 - phi,\n        e = rho ? lambda * cos(phi) / rho : rho;\n    return [rho * sin(e), cotPhi0 - rho * cos(e)];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + (y = cotPhi0 - y) * y),\n        phi = cotPhi0 + phi0 - rho;\n    return [rho / cos(phi) * atan2(x, y), phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(bonneRaw)\n      .scale(123.082)\n      .center([0, 26.1441])\n      .parallel(45);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {atan2, cos, halfPi, sin, sqrt} from \"./math\";\n\nexport function bottomleyRaw(sinPsi) {\n\n  function forward(lambda, phi) {\n    var rho = halfPi - phi,\n        eta = rho ? lambda * sinPsi * sin(rho) / rho : rho;\n    return [rho * sin(eta) / sinPsi, halfPi - rho * cos(eta)];\n  }\n\n  forward.invert = function(x, y) {\n    var x1 = x * sinPsi,\n        y1 = halfPi - y,\n        rho = sqrt(x1 * x1 + y1 * y1),\n        eta = atan2(x1, y1);\n    return [(rho ? rho / sin(rho) : 1) * eta / sinPsi, halfPi - rho];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var sinPsi = 0.5,\n      m = projectionMutator(bottomleyRaw),\n      p = m(sinPsi);\n\n  p.fraction = function(_) {\n    return arguments.length ? m(sinPsi = +_) : sinPsi;\n  };\n\n  return p\n      .scale(158.837);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nexport var bromleyRaw = mollweideBromleyRaw(1, 4 / pi, pi);\n\nexport default function() {\n  return projection(bromleyRaw)\n      .scale(152.63);\n}\n","import {geoCentroid as centroid, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon, floor, pi, radians, sin, sqrt} from \"./math\";\n\n// Azimuthal distance.\nfunction distance(dPhi, c1, s1, c2, s2, dLambda) {\n  var cosdLambda = cos(dLambda), r;\n  if (abs(dPhi) > 1 || abs(dLambda) > 1) {\n    r = acos(s1 * s2 + c1 * c2 * cosdLambda);\n  } else {\n    var sindPhi = sin(dPhi / 2), sindLambda = sin(dLambda / 2);\n    r = 2 * asin(sqrt(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));\n  }\n  return abs(r) > epsilon ? [r, atan2(c2 * sin(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];\n}\n\n// Angle opposite a, and contained between sides of lengths b and c.\nfunction angle(b, c, a) {\n  return acos((b * b + c * c - a * a) / (2 * b * c));\n}\n\n// Normalize longitude.\nfunction longitude(lambda) {\n  return lambda - 2 * pi * floor((lambda + pi) / (2 * pi));\n}\n\nexport function chamberlinRaw(p0, p1, p2) {\n  var points = [\n    [p0[0], p0[1], sin(p0[1]), cos(p0[1])],\n    [p1[0], p1[1], sin(p1[1]), cos(p1[1])],\n    [p2[0], p2[1], sin(p2[1]), cos(p2[1])]\n  ];\n\n  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {\n    b = points[i];\n    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);\n    a.point = [0, 0];\n  }\n\n  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),\n      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),\n      beta2 = pi - beta0;\n\n  points[2].point[1] = 0;\n  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);\n\n  var mean = [\n    points[2].point[0] = points[0].point[0] + points[2].v[0] * cos(beta0),\n    2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * sin(beta0))\n  ];\n\n  function forward(lambda, phi) {\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        v = new Array(3), i;\n\n    // Compute distance and azimuth from control points.\n    for (i = 0; i < 3; ++i) {\n      var p = points[i];\n      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);\n      if (!v[i][0]) return p.point;\n      v[i][1] = longitude(v[i][1] - p.v[1]);\n    }\n\n    // Arithmetic mean of interception points.\n    var point = mean.slice();\n    for (i = 0; i < 3; ++i) {\n      var j = i == 2 ? 0 : i + 1;\n      var a = angle(points[i].v[0], v[i][0], v[j][0]);\n      if (v[i][1] < 0) a = -a;\n\n      if (!i) {\n        point[0] += v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else if (i == 1) {\n        a = beta1 - a;\n        point[0] -= v[i][0] * cos(a);\n        point[1] -= v[i][0] * sin(a);\n      } else {\n        a = beta2 - a;\n        point[0] += v[i][0] * cos(a);\n        point[1] += v[i][0] * sin(a);\n      }\n    }\n\n    point[0] /= 3, point[1] /= 3;\n    return point;\n  }\n\n  return forward;\n}\n\nfunction pointRadians(p) {\n  return p[0] *= radians, p[1] *= radians, p;\n}\n\nexport function chamberlinAfrica() {\n  return chamberlin([0, 22], [45, 22], [22.5, -22])\n      .scale(380)\n      .center([22.5, 2]);\n}\n\nexport default function chamberlin(p0, p1, p2) { // TODO order matters!\n  var c = centroid({type: \"MultiPoint\", coordinates: [p0, p1, p2]}),\n      R = [-c[0], -c[1]],\n      r = rotation(R),\n      p = projection(chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)))).rotate(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, pi, sin, sqrt, sqrtPi} from \"./math\";\n\nexport function collignonRaw(lambda, phi) {\n  var alpha = sqrt(1 - sin(phi));\n  return [(2 / sqrtPi) * lambda * alpha, sqrtPi * (1 - alpha)];\n}\n\ncollignonRaw.invert = function(x, y) {\n  var lambda = (lambda = y / sqrtPi - 1) * lambda;\n  return [lambda > 0 ? x * sqrt(pi / lambda) / 2 : 0, asin(1 - lambda)];\n};\n\nexport default function() {\n  return projection(collignonRaw)\n      .scale(95.6464)\n      .center([0, 30]);\n}\n","import {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function craigRaw(phi0) {\n  var tanPhi0 = tan(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda, (lambda ? lambda / sin(lambda) : 1) * (sin(phi) * cos(lambda) - tanPhi0 * cos(phi))];\n  }\n\n  forward.invert = tanPhi0 ? function(x, y) {\n    if (x) y *= sin(x) / x;\n    var cosLambda = cos(x);\n    return [x, 2 * atan2(sqrt(cosLambda * cosLambda + tanPhi0 * tanPhi0 - y * y) - cosLambda, tanPhi0 - y)];\n  } : function(x, y) {\n    return [x, asin(x ? y * tan(x) / x : y)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(craigRaw)\n      .scale(249.828)\n      .clipAngle(90);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt, sqrtPi} from \"./math\";\n\nvar sqrt3 = sqrt(3);\n\nexport function crasterRaw(lambda, phi) {\n  return [sqrt3 * lambda * (2 * cos(2 * phi / 3) - 1) / sqrtPi, sqrt3 * sqrtPi * sin(phi / 3)];\n}\n\ncrasterRaw.invert = function(x, y) {\n  var phi = 3 * asin(y / (sqrt3 * sqrtPi));\n  return [sqrtPi * x / (sqrt3 * (2 * cos(2 * phi / 3) - 1)), phi];\n};\n\nexport default function() {\n  return projection(crasterRaw)\n      .scale(156.19);\n}\n","import {asin, cos, sin} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalEqualAreaRaw)\n      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians\n      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)\n}\n","import {atan, cos, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function cylindricalStereographicRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, (1 + cosPhi0) * tan(phi / 2)];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, atan(y / (1 + cosPhi0)) * 2];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(cylindricalStereographicRaw)\n      .scale(124.75);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, pi, sqrt} from \"./math\";\n\nexport function eckert1Raw(lambda, phi) {\n  var alpha = sqrt(8 / (3 * pi));\n  return [\n    alpha * lambda * (1 - abs(phi) / pi),\n    alpha * phi\n  ];\n}\n\neckert1Raw.invert = function(x, y) {\n  var alpha = sqrt(8 / (3 * pi)),\n      phi = y / alpha;\n  return [\n    x / (alpha * (1 - abs(phi) / pi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert1Raw)\n      .scale(165.664);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, pi, sign, sin, sqrt} from \"./math\";\n\nexport function eckert2Raw(lambda, phi) {\n  var alpha = sqrt(4 - 3 * sin(abs(phi)));\n  return [\n    2 / sqrt(6 * pi) * lambda * alpha,\n    sign(phi) * sqrt(2 * pi / 3) * (2 - alpha)\n  ];\n}\n\neckert2Raw.invert = function(x, y) {\n  var alpha = 2 - abs(y) / sqrt(2 * pi / 3);\n  return [\n    x * sqrt(6 * pi) / (2 * alpha),\n    sign(y) * asin((4 - alpha * alpha) / 3)\n  ];\n};\n\nexport default function() {\n  return projection(eckert2Raw)\n      .scale(165.664);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function eckert3Raw(lambda, phi) {\n  var k = sqrt(pi * (4 + pi));\n  return [\n    2 / k * lambda * (1 + sqrt(1 - 4 * phi * phi / (pi * pi))),\n    4 / k * phi\n  ];\n}\n\neckert3Raw.invert = function(x, y) {\n  var k = sqrt(pi * (4 + pi)) / 2;\n  return [\n    x * k / (1 + sqrt(1 - y * y * (4 + pi) / (4 * pi))),\n    y * k / 2\n  ];\n};\n\nexport default function() {\n  return projection(eckert3Raw)\n      .scale(180.739);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert4Raw(lambda, phi) {\n  var k = (2 + halfPi) * sin(phi);\n  phi /= 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    var cosPhi = cos(phi);\n    phi -= delta = (phi + sin(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));\n  }\n  return [\n    2 / sqrt(pi * (4 + pi)) * lambda * (1 + cos(phi)),\n    2 * sqrt(pi / (4 + pi)) * sin(phi)\n  ];\n}\n\neckert4Raw.invert = function(x, y) {\n  var A = y * sqrt((4 + pi) / pi) / 2,\n      k = asin(A),\n      c = cos(k);\n  return [\n    x / (2 / sqrt(pi * (4 + pi)) * (1 + c)),\n    asin((k + A * (c + 2)) / (2 + halfPi))\n  ];\n};\n\nexport default function() {\n  return projection(eckert4Raw)\n      .scale(180.739);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {cos, pi, sqrt} from \"./math\";\n\nexport function eckert5Raw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / sqrt(2 + pi),\n    2 * phi / sqrt(2 + pi)\n  ];\n}\n\neckert5Raw.invert = function(x, y) {\n  var k = sqrt(2 + pi),\n      phi = y * k / 2;\n  return [\n    k * x / (1 + cos(phi)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(eckert5Raw)\n      .scale(173.044);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function eckert6Raw(lambda, phi) {\n  var k = (1 + halfPi) * sin(phi);\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; i++) {\n    phi -= delta = (phi + sin(phi) - k) / (1 + cos(phi));\n  }\n  k = sqrt(2 + pi);\n  return [\n    lambda * (1 + cos(phi)) / k,\n    2 * phi / k\n  ];\n}\n\neckert6Raw.invert = function(x, y) {\n  var j = 1 + halfPi,\n      k = sqrt(j / 2);\n  return [\n    x * 2 * k / (1 + cos(y *= k)),\n    asin((y + sin(y)) / j)\n  ];\n};\n\nexport default function() {\n  return projection(eckert6Raw)\n      .scale(173.044);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {augustRaw} from \"./august\";\nimport {abs, atan, cos, epsilon, halfPi, log, max, min, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nvar eisenlohrK = 3 + 2 * sqrt2;\n\nexport function eisenlohrRaw(lambda, phi) {\n  var s0 = sin(lambda /= 2),\n      c0 = cos(lambda),\n      k = sqrt(cos(phi)),\n      c1 = cos(phi /= 2),\n      t = sin(phi) / (c1 + sqrt2 * c0 * k),\n      c = sqrt(2 / (1 + t * t)),\n      v = sqrt((sqrt2 * c1 + (c0 + s0) * k) / (sqrt2 * c1 + (c0 - s0) * k));\n  return [\n    eisenlohrK * (c * (v - 1 / v) - 2 * log(v)),\n    eisenlohrK * (c * t * (v + 1 / v) - 2 * atan(t))\n  ];\n}\n\neisenlohrRaw.invert = function(x, y) {\n  if (!(p = augustRaw.invert(x / 1.2, y * 1.065))) return null;\n  var lambda = p[0], phi = p[1], i = 20, p;\n  x /= eisenlohrK, y /= eisenlohrK;\n  do {\n    var _0 = lambda / 2,\n        _1 = phi / 2,\n        s0 = sin(_0),\n        c0 = cos(_0),\n        s1 = sin(_1),\n        c1 = cos(_1),\n        cos1 = cos(phi),\n        k = sqrt(cos1),\n        t = s1 / (c1 + sqrt2 * c0 * k),\n        t2 = t * t,\n        c = sqrt(2 / (1 + t2)),\n        v0 = (sqrt2 * c1 + (c0 + s0) * k),\n        v1 = (sqrt2 * c1 + (c0 - s0) * k),\n        v2 = v0 / v1,\n        v = sqrt(v2),\n        vm1v = v - 1 / v,\n        vp1v = v + 1 / v,\n        fx = c * vm1v - 2 * log(v) - x,\n        fy = c * t * vp1v - 2 * atan(t) - y,\n        deltatDeltaLambda = s1 && sqrt1_2 * k * s0 * t2 / s1,\n        deltatDeltaPhi = (sqrt2 * c0 * c1 + k) / (2 * (c1 + sqrt2 * c0 * k) * (c1 + sqrt2 * c0 * k) * k),\n        deltacDeltat = -0.5 * t * c * c * c,\n        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,\n        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,\n        A = (A = 2 * c1 + sqrt2 * k * (c0 - s0)) * A * v,\n        deltavDeltaLambda = (sqrt2 * c0 * c1 * k + cos1) / A,\n        deltavDeltaPhi = -(sqrt2 * s0 * s1) / (k * A),\n        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),\n        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),\n        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),\n        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n    if (!denominator) break;\n    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda;\n    phi = max(-halfPi, min(halfPi, phi - deltaPhi));\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return abs(abs(phi) - halfPi) < epsilon ? [0, phi] : i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(eisenlohrRaw)\n      .scale(62.5271);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, radians, sqrt, tan} from \"./math\";\n\nvar faheyK = cos(35 * radians);\n\nexport function faheyRaw(lambda, phi) {\n  var t = tan(phi / 2);\n  return [lambda * faheyK * sqrt(1 - t * t), (1 + faheyK) * t];\n}\n\nfaheyRaw.invert = function(x, y) {\n  var t = y / (1 + faheyK);\n  return [x && x / (faheyK * sqrt(1 - t * t)), 2 * atan(t)];\n};\n\nexport default function() {\n  return projection(faheyRaw)\n      .scale(137.152);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, cos, sqrtPi, tan} from \"./math\";\n\nexport function foucautRaw(lambda, phi) {\n  var k = phi / 2, cosk = cos(k);\n  return [ 2 * lambda / sqrtPi * cos(phi) * cosk * cosk, sqrtPi * tan(k)];\n}\n\nfoucautRaw.invert = function(x, y) {\n  var k = atan(y / sqrtPi), cosk = cos(k), phi = 2 * k;\n  return [x * sqrtPi / 2 / (cos(phi) * cosk * cosk), phi];\n};\n\nexport default function() {\n  return projection(foucautRaw)\n      .scale(135.264);\n}\n","import {abs, epsilon} from \"./math\";\n\n// Newton-Raphson\n// Solve f(x) = y, start from x\nexport function solve(f, y, x) {\n  var steps = 100, delta, f0, f1;\n  x = x === undefined ? 0 : +x;\n  y = +y;\n  do {\n    f0 = f(x);\n    f1 = f(x + epsilon);\n    if (f0 === f1) f1 = f0 + epsilon;\n    x -= delta = (-1 * epsilon * (f0 - y)) / (f0 - f1);\n  } while (steps-- > 0 && abs(delta) > epsilon);\n  return steps < 0 ? NaN : x;\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {cos, halfPi, pi, sin, sqrt} from \"./math\";\nimport {solve} from \"./newton\";\n\nexport function foucautSinusoidalRaw(alpha) {\n  var beta = 1 - alpha,\n      equatorial = raw(pi, 0)[0] - raw(-pi, 0)[0],\n      polar = raw(0, halfPi)[1] - raw(0, -halfPi)[1],\n      ratio = sqrt(2 * polar / equatorial);\n\n  function raw(lambda, phi) {\n    var cosphi = cos(phi),\n        sinphi = sin(phi);\n    return [\n      cosphi / (beta + alpha * cosphi) * lambda,\n      beta * phi + alpha * sinphi\n    ];\n  }\n\n  function forward(lambda, phi) {\n    var p = raw(lambda, phi);\n    return [p[0] * ratio, p[1] / ratio];\n  }\n\n  function forwardMeridian(phi) {\n    return forward(0, phi)[1];\n  }\n\n  forward.invert = function(x, y) {\n    var phi = solve(forwardMeridian, y),\n        lambda = x / ratio * (alpha + beta / cos(phi));\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var alpha = 0.5,\n      m = projectionMutator(foucautSinusoidalRaw),\n      p = m(alpha);\n\n  p.alpha = function(_) {\n    return arguments.length ? m(alpha = +_) : alpha;\n  };\n\n  return p\n      .scale(168.725);\n}\n","import {geoEquirectangular, geoOrthographic} from \"d3-geo\";\nimport {asin, atan, degrees, radians, sin, tan} from \"./math\";\n\nfunction gilbertForward(point) {\n  return [point[0] / 2, asin(tan(point[1] / 2 * radians)) * degrees];\n}\n\nfunction gilbertInvert(point) {\n  return [point[0] * 2, 2 * atan(sin(point[1] * radians)) * degrees];\n}\n\nexport default function(projectionType) {\n  if (projectionType == null) projectionType = geoOrthographic;\n  var projection = projectionType(),\n      equirectangular = geoEquirectangular().scale(degrees).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting\n\n  function gilbert(point) {\n    return projection(gilbertForward(point));\n  }\n\n  if (projection.invert) gilbert.invert = function(point) {\n    return gilbertInvert(projection.invert(point));\n  };\n\n  gilbert.stream = function(stream) {\n    var s1 = projection.stream(stream), s0 = equirectangular.stream({\n      point: function(lambda, phi) { s1.point(lambda / 2, asin(tan(-phi / 2 * radians)) * degrees); },\n      lineStart: function() { s1.lineStart(); },\n      lineEnd: function() { s1.lineEnd(); },\n      polygonStart: function() { s1.polygonStart(); },\n      polygonEnd: function() { s1.polygonEnd(); }\n    });\n    s0.sphere = s1.sphere;\n    return s0;\n  };\n\n  function property(name) {\n    gilbert[name] = function() {\n      return arguments.length ? (projection[name].apply(projection, arguments), gilbert) : projection[name]();\n    };\n  }\n\n  gilbert.rotate = function(_) {\n    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();\n  };\n\n  gilbert.center = function(_) {\n    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());\n  };\n\n  property(\"angle\");\n  property(\"clipAngle\");\n  property(\"clipExtent\");\n  property(\"fitExtent\");\n  property(\"fitHeight\");\n  property(\"fitSize\");\n  property(\"fitWidth\");\n  property(\"scale\");\n  property(\"translate\");\n  property(\"precision\");\n\n  return gilbert\n      .scale(249.5);\n}\n","import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, degrees, epsilon, epsilon2, halfPi, pi, radians, round, sin, sqrt} from \"./math\";\n\nexport function gingeryRaw(rho, n) {\n  var k = 2 * pi / n,\n      rho2 = rho * rho;\n\n  function forward(lambda, phi) {\n    var p = azimuthalEquidistantRaw(lambda, phi),\n        x = p[0],\n        y = p[1],\n        r2 = x * x + y * y;\n\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          alpha = theta - theta0,\n          rhoCosAlpha = rho * cos(alpha),\n          k_ = (rho * sin(alpha) - alpha * sin(rhoCosAlpha)) / (halfPi - rhoCosAlpha),\n          s_ = gingeryLength(alpha, k_),\n          e = (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n\n      x = r;\n      var i = 50, delta;\n      do {\n        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);\n      } while (abs(delta) > epsilon && --i > 0);\n\n      y = alpha * sin(x);\n      if (x < halfPi) y -= k_ * (x - halfPi);\n\n      var s = sin(theta0),\n          c = cos(theta0);\n      p[0] = x * c - y * s;\n      p[1] = x * s + y * c;\n    }\n    return p;\n  }\n\n  forward.invert = function(x, y) {\n    var r2 = x * x + y * y;\n    if (r2 > rho2) {\n      var r = sqrt(r2),\n          theta = atan2(y, x),\n          theta0 = k * round(theta / k),\n          dTheta = theta - theta0;\n\n      x = r * cos(dTheta);\n      y = r * sin(dTheta);\n\n      var x_halfPi = x - halfPi,\n          sinx = sin(x),\n          alpha = y / sinx,\n          delta = x < halfPi ? Infinity : 0,\n          i = 10;\n\n      while (true) {\n        var rhosinAlpha = rho * sin(alpha),\n            rhoCosAlpha = rho * cos(alpha),\n            sinRhoCosAlpha = sin(rhoCosAlpha),\n            halfPi_RhoCosAlpha = halfPi - rhoCosAlpha,\n            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,\n            s_ = gingeryLength(alpha, k_);\n\n        if (abs(delta) < epsilon2 || !--i) break;\n\n        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (\n          sinx - x_halfPi * 2 * (\n            halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * cos(rhoCosAlpha) - sinRhoCosAlpha) -\n            rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)\n          ) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));\n      }\n      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (pi - rho) / gingeryIntegrate(s_, rhoCosAlpha, pi);\n      theta = theta0 + alpha;\n      x = r * cos(theta);\n      y = r * sin(theta);\n    }\n    return azimuthalEquidistantRaw.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction gingeryLength(alpha, k) {\n  return function(x) {\n    var y_ = alpha * cos(x);\n    if (x < halfPi) y_ -= k;\n    return sqrt(1 + y_ * y_);\n  };\n}\n\n// Numerical integration: trapezoidal rule.\nfunction gingeryIntegrate(f, a, b) {\n  var n = 50,\n      h = (b - a) / n,\n      s = f(a) + f(b);\n  for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);\n  return s * 0.5 * h;\n}\n\nexport default function() {\n  var n = 6,\n      rho = 30 * radians,\n      cRho = cos(rho),\n      sRho = sin(rho),\n      m = projectionMutator(gingeryRaw),\n      p = m(rho, n),\n      stream_ = p.stream,\n      epsilon = 1e-2,\n      cr = -cos(epsilon * radians),\n      sr = sin(epsilon * radians);\n\n  p.radius = function(_) {\n    if (!arguments.length) return rho * degrees;\n    cRho = cos(rho = _ * radians);\n    sRho = sin(rho);\n    return m(rho, n);\n  };\n\n  p.lobes = function(_) {\n    if (!arguments.length) return n;\n    return m(rho, n = +_);\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart(), sphereStream.lineStart();\n      for (var i = 0, delta = 2 * pi / n, phi = 0; i < n; ++i, phi -= delta) {\n        sphereStream.point(atan2(sr * cos(phi), cr) * degrees, asin(sr * sin(phi)) * degrees);\n        sphereStream.point(atan2(sRho * cos(phi - delta / 2), cRho) * degrees, asin(sRho * sin(phi - delta / 2)) * degrees);\n      }\n      sphereStream.lineEnd(), sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return p\n      .rotate([90, -40])\n      .scale(91.7095)\n      .clipAngle(180 - 1e-3);\n}\n","import {abs, asin, cos, epsilon, pi, sin, sqrt} from \"./math\";\n\nexport default function(a, b, c, d, e, f, g, h) {\n  if (arguments.length < 8) h = 0;\n\n  function forward(lambda, phi) {\n    if (!phi) return [a * lambda / pi, 0];\n    var phi2 = phi * phi,\n        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n        m = (xB * xB + yB * yB) / (2 * yB),\n        alpha = lambda * asin(xB / m) / pi;\n    return [m * sin(alpha), phi * (1 + phi2 * h) + m * (1 - cos(alpha))];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda = pi * x / a,\n        phi = y,\n        deltaLambda, deltaPhi, i = 50;\n    do {\n      var phi2 = phi * phi,\n          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),\n          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),\n          p = xB * xB + yB * yB,\n          q = 2 * yB,\n          m = p / q,\n          m2 = m * m,\n          dAlphadLambda = asin(xB / m) / pi,\n          alpha = lambda * dAlphadLambda,\n          xB2 = xB * xB,\n          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,\n          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),\n          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),\n          dqdPhi = 2 * (dyBdPhi - 1),\n          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),\n          cosAlpha = cos(alpha),\n          sinAlpha = sin(alpha),\n          mcosAlpha = m * cosAlpha,\n          msinAlpha = m * sinAlpha,\n          dAlphadPhi = ((lambda / pi) * (1 / sqrt(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi)) / m2,\n          fx = msinAlpha - x,\n          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,\n          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,\n          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,\n          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),\n          deltayDeltaLambda = msinAlpha * dAlphadLambda,\n          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;\n      if (!denominator) break;\n      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;\n      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n    return [lambda, phi];\n  };\n\n  return forward;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg4Raw = ginzburgPolyconicRaw(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);\n\nexport default function() {\n  return projection(ginzburg4Raw)\n      .scale(149.995);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg5Raw = ginzburgPolyconicRaw(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435,0.082742);\n\nexport default function() {\n  return projection(ginzburg5Raw)\n      .scale(153.93);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\nimport {pi} from \"./math\";\n\nexport var ginzburg6Raw = ginzburgPolyconicRaw(5 / 6 * pi, -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);\n\nexport default function() {\n  return projection(ginzburg6Raw)\n      .scale(130.945);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\nexport function ginzburg8Raw(lambda, phi) {\n  var lambda2 = lambda * lambda,\n      phi2 = phi * phi;\n  return [\n    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),\n    phi * (1 + phi2 / 12)\n  ];\n}\n\nginzburg8Raw.invert = function(x, y) {\n  var lambda = x,\n      phi = y,\n      i = 50, delta;\n  do {\n    var phi2 = phi * phi;\n    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);\n  } while (abs(delta) > epsilon && --i > 0);\n  i = 50;\n  x /= 1 -0.162388 * phi2;\n  do {\n    var lambda4 = (lambda4 = lambda * lambda) * lambda4;\n    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);\n  } while (abs(delta) > epsilon && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(ginzburg8Raw)\n      .scale(131.747);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport ginzburgPolyconicRaw from \"./ginzburgPolyconic\";\n\nexport var ginzburg9Raw = ginzburgPolyconicRaw(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965,0.031762);\n\nexport default function() {\n  return projection(ginzburg9Raw)\n      .scale(131.087);\n}\n","import {halfPi, pi} from \"./math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectSquare(lambda, phi) {\n    var s = lambda > 0 ? -0.5 : 0.5,\n        point = project(lambda + s * pi, phi);\n    point[0] -= s * dx;\n    return point;\n  }\n\n  if (project.invert) projectSquare.invert = function(x, y) {\n    var s = x > 0 ? -0.5 : 0.5,\n        location = project.invert(x + s * dx, y),\n        lambda = location[0] - s * pi;\n    if (lambda < -pi) lambda += 2 * pi;\n    else if (lambda > pi) lambda -= 2 * pi;\n    location[0] = lambda;\n    return location;\n  };\n\n  return projectSquare;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan2, cos, sign, epsilon, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function gringortenRaw(lambda, phi) {\n  var sLambda = sign(lambda),\n      sPhi = sign(phi),\n      cosPhi = cos(phi),\n      x = cos(lambda) * cosPhi,\n      y = sin(lambda) * cosPhi,\n      z = sin(sPhi * phi);\n  lambda = abs(atan2(y, z));\n  phi = asin(x);\n  if (abs(lambda - halfPi) > epsilon) lambda %= halfPi;\n  var point = gringortenHexadecant(lambda > pi / 4 ? halfPi - lambda : lambda, phi);\n  if (lambda > pi / 4) z = point[0], point[0] = -point[1], point[1] = -z;\n  return (point[0] *= sLambda, point[1] *= -sPhi, point);\n}\n\ngringortenRaw.invert = function(x, y) {\n  if (abs(x) > 1) x = sign(x) * 2 - x;\n  if (abs(y) > 1) y = sign(y) * 2 - y;\n  var sx = sign(x),\n      sy = sign(y),\n      x0 = -sx * x,\n      y0 = -sy * y,\n      t = y0 / x0 < 1,\n      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),\n      lambda = p[0],\n      phi = p[1],\n      cosPhi = cos(phi);\n  if (t) lambda = -halfPi - lambda;\n  return [sx * (atan2(sin(lambda) * cosPhi, -sin(phi)) + pi), sy * asin(cos(lambda) * cosPhi)];\n};\n\nfunction gringortenHexadecant(lambda, phi) {\n  if (phi === halfPi) return [0, 0];\n\n  var sinPhi = sin(phi),\n      r = sinPhi * sinPhi,\n      r2 = r * r,\n      j = 1 + r2,\n      k = 1 + 3 * r2,\n      q = 1 - r2,\n      z = asin(1 / sqrt(j)),\n      v = q + r * j * z,\n      p2 = (1 - sinPhi) / v,\n      p = sqrt(p2),\n      a2 = p2 * j,\n      a = sqrt(a2),\n      h = p * q,\n      x,\n      i;\n\n  if (lambda === 0) return [0, -(h + r * a)];\n\n  var cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * k) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = (0.5 * dp2dPhi) / p,\n      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,\n      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * dra2dPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      lambda1 = 4 * lambda / pi,\n      delta;\n\n  // Slower but accurate bisection method.\n  if (lambda > 0.222 * pi || phi < pi / 4 && lambda > 0.175 * pi) {\n    x = (h + r * sqrt(a2 * (1 + r2) - h * h)) / (1 + r2);\n    if (lambda > pi / 4) return [x, x];\n    var x1 = x, x0 = 0.5 * x;\n    x = 0.5 * (x0 + x1), i = 50;\n    do {\n      var g = sqrt(a2 - x * x),\n          f = (x * (zeta + mu * g) + nu * asin(x / a)) - lambda1;\n      if (!f) break;\n      if (f < 0) x0 = x;\n      else x1 = x;\n      x = 0.5 * (x0 + x1);\n    } while (abs(x1 - x0) > epsilon && --i > 0);\n  }\n\n  // Newton-Raphson.\n  else {\n    x = epsilon, i = 25;\n    do {\n      var x2 = x * x,\n          g2 = sqrt(a2 - x2),\n          zetaMug = zeta + mu * g2,\n          f2 = x * zetaMug + nu * asin(x / a) - lambda1,\n          df = zetaMug + (nu - mu * x2) / g2;\n      x -= delta = g2 ? f2 / df : 0;\n    } while (abs(delta) > epsilon && --i > 0);\n  }\n\n  return [x, -h - r * sqrt(a2 - x * x)];\n}\n\nfunction gringortenHexadecantInvert(x, y) {\n  var x0 = 0,\n      x1 = 1,\n      r = 0.5,\n      i = 50;\n\n  while (true) {\n    var r2 = r * r,\n        sinPhi = sqrt(r),\n        z = asin(1 / sqrt(1 + r2)),\n        v = (1 - r2) + r * (1 + r2) * z,\n        p2 = (1 - sinPhi) / v,\n        p = sqrt(p2),\n        a2 = p2 * (1 + r2),\n        h = p * (1 - r2),\n        g2 = a2 - x * x,\n        g = sqrt(g2),\n        y0 = y + h + r * g;\n    if (abs(x1 - x0) < epsilon2 || --i === 0 || y0 === 0) break;\n    if (y0 > 0) x0 = r;\n    else x1 = r;\n    r = 0.5 * (x0 + x1);\n  }\n\n  if (!i) return null;\n\n  var phi = asin(sinPhi),\n      cosPhi = cos(phi),\n      secPhi = 1 / cosPhi,\n      drdPhi = 2 * sinPhi * cosPhi,\n      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,\n      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),\n      dpdPhi = 0.5 * dp2dPhi / p,\n      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,\n      zeta = -2 * secPhi * dhdPhi,\n      mu = -secPhi * drdPhi,\n      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);\n\n  return [pi / 4 * (x * (zeta + mu * g) + nu * asin(x / sqrt(a2))), phi];\n}\n\nexport default function() {\n  return projection(squareRaw(gringortenRaw))\n      .scale(239.75);\n}\n","import {abs, asin, atan, cos, cosh, epsilon, exp, halfPi, log, pi, pow, quarterPi, sign, sin, sinh, sqrt, tan, tanh} from \"./math\";\n\n// Returns [sn, cn, dn](u + iv|m).\nexport function ellipticJi(u, v, m) {\n  var a, b, c;\n  if (!u) {\n    b = ellipticJ(v, 1 - m);\n    return [\n      [0, b[0] / b[1]],\n      [1 / b[1], 0],\n      [b[2] / b[1], 0]\n    ];\n  }\n  a = ellipticJ(u, m);\n  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];\n  b = ellipticJ(v, 1 - m);\n  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];\n  return [\n    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],\n    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],\n    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]\n  ];\n}\n\n// Returns [sn, cn, dn, ph](u|m).\nexport function ellipticJ(u, m) {\n  var ai, b, phi, t, twon;\n  if (m < epsilon) {\n    t = sin(u);\n    b = cos(u);\n    ai = m * (u - t * b) / 4;\n    return [\n      t - ai * b,\n      b + ai * t,\n      1 - m * t * t / 2,\n      u - ai\n    ];\n  }\n  if (m >= 1 - epsilon) {\n    ai = (1 - m) / 4;\n    b = cosh(u);\n    t = tanh(u);\n    phi = 1 / b;\n    twon = b * sinh(u);\n    return [\n      t + ai * (twon - u) / (b * b),\n      phi - ai * t * phi * (twon - u),\n      phi + ai * t * phi * (twon + u),\n      2 * atan(exp(u)) - halfPi + ai * (twon - u) / b\n    ];\n  }\n\n  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],\n      c = [sqrt(m), 0, 0, 0, 0, 0, 0, 0, 0],\n      i = 0;\n  b = sqrt(1 - m);\n  twon = 1;\n\n  while (abs(c[i] / a[i]) > epsilon && i < 8) {\n    ai = a[i++];\n    c[i] = (ai - b) / 2;\n    a[i] = (ai + b) / 2;\n    b = sqrt(ai * b);\n    twon *= 2;\n  }\n\n  phi = twon * a[i] * u;\n  do {\n    t = c[i] * sin(b = phi) / a[i];\n    phi = (asin(t) + phi) / 2;\n  } while (--i);\n\n  return [sin(phi), t = cos(phi), t / cos(phi - b), phi];\n}\n\n// Calculate F(phi+iPsi|m).\n// See Abramowitz and Stegun, 17.4.11.\nexport function ellipticFi(phi, psi, m) {\n  var r = abs(phi),\n      i = abs(psi),\n      sinhPsi = sinh(i);\n  if (r) {\n    var cscPhi = 1 / sin(r),\n        cotPhi2 = 1 / (tan(r) * tan(r)),\n        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),\n        c = (m - 1) * cotPhi2,\n        cotLambda2 = (-b + sqrt(b * b - 4 * c)) / 2;\n    return [\n      ellipticF(atan(1 / sqrt(cotLambda2)), m) * sign(phi),\n      ellipticF(atan(sqrt((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * sign(psi)\n    ];\n  }\n  return [\n    0,\n    ellipticF(atan(sinhPsi), 1 - m) * sign(psi)\n  ];\n}\n\n// Calculate F(phi|m) where m = k² = sin²α.\n// See Abramowitz and Stegun, 17.6.7.\nexport function ellipticF(phi, m) {\n  if (!m) return phi;\n  if (m === 1) return log(tan(phi / 2 + quarterPi));\n  var a = 1,\n      b = sqrt(1 - m),\n      c = sqrt(m);\n  for (var i = 0; abs(c) > epsilon; i++) {\n    if (phi % pi) {\n      var dPhi = atan(b * tan(phi) / a);\n      if (dPhi < 0) dPhi += pi;\n      phi += dPhi + ~~(phi / pi) * pi;\n    } else phi += phi;\n    c = (a + b) / 2;\n    b = sqrt(a * b);\n    c = ((a = c) - b) / 2;\n  }\n  return phi / (pow(2, i) * a);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {ellipticF, ellipticFi, ellipticJi} from \"./elliptic\";\nimport {abs, atan, atan2, cos, exp, halfPi, log, pi, sin, sqrt, sqrt2, tan} from \"./math\";\nimport squareRaw from \"./square\";\n\nexport function guyouRaw(lambda, phi) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      psi = log(tan(pi / 4 + abs(phi) / 2)),\n      r = exp(f * psi) / sqrt(k_),\n      at = guyouComplexAtan(r * cos(f * lambda), r * sin(f * lambda)),\n      t = ellipticFi(at[0], at[1], k * k);\n  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];\n}\n\nfunction guyouComplexAtan(x, y) {\n  var x2 = x * x,\n      y_1 = y + 1,\n      t = 1 - x2 - y * y;\n  return [\n   0.5 * ((x >= 0 ? halfPi : -halfPi) - atan2(t, 2 * x)),\n    -0.25 * log(t * t + 4 * x2) +0.5 * log(y_1 * y_1 + x2)\n  ];\n}\n\nfunction guyouComplexDivide(a, b) {\n  var denominator = b[0] * b[0] + b[1] * b[1];\n  return [\n    (a[0] * b[0] + a[1] * b[1]) / denominator,\n    (a[1] * b[0] - a[0] * b[1]) / denominator\n  ];\n}\n\nguyouRaw.invert = function(x, y) {\n  var k_ = (sqrt2 - 1) / (sqrt2 + 1),\n      k = sqrt(1 - k_ * k_),\n      K = ellipticF(halfPi, k * k),\n      f = -1,\n      j = ellipticJi(0.5 * K - y, -x, k * k),\n      tn = guyouComplexDivide(j[0], j[1]),\n      lambda = atan2(tn[1], tn[0]) / f;\n  return [\n    lambda,\n    2 * atan(exp(0.5 / f * log(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - halfPi\n  ];\n};\n\nexport default function() {\n  return projection(squareRaw(guyouRaw))\n      .scale(151.496);\n}\n","import {geoProjectionMutator as projectionMutator, geoCircle} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, degrees, epsilon, halfPi, radians, sqrt, sin} from \"./math\";\n\nexport function hammerRetroazimuthalRaw(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0),\n      rotate = hammerRetroazimuthalRotation(phi0);\n\n  rotate.invert = hammerRetroazimuthalRotation(-phi0);\n\n  function forward(lambda, phi) {\n    var p = rotate(lambda, phi);\n    lambda = p[0], phi = p[1];\n    var sinPhi = sin(phi),\n        cosPhi = cos(phi),\n        cosLambda = cos(lambda),\n        z = acos(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),\n        sinz = sin(z),\n        K = abs(sinz) > epsilon ? z / sinz : 1;\n    return [\n      K * cosPhi0 * sin(lambda),\n      (abs(lambda) > halfPi ? K : -K) // rotate for back hemisphere\n        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho = sqrt(x * x + y * y),\n        sinz = -sin(rho),\n        cosz = cos(rho),\n        a = rho * cosz,\n        b = -y * sinz,\n        c = rho * sinPhi0,\n        d = sqrt(a * a + b * b - c * c),\n        phi = atan2(a * c + b * d, b * c - a * d),\n        lambda = (rho > halfPi ? -1 : 1) * atan2(x * sinz, rho * cos(phi) * cosz + y * sin(phi) * sinz);\n    return rotate.invert(lambda, phi);\n  };\n\n  return forward;\n}\n\n// Latitudinal rotation by phi0.\n// Temporary hack until D3 supports arbitrary small-circle clipping origins.\nfunction hammerRetroazimuthalRotation(phi0) {\n  var sinPhi0 = sin(phi0),\n      cosPhi0 = cos(phi0);\n\n  return function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi);\n    return [\n      atan2(y, x * cosPhi0 - z * sinPhi0),\n      asin(z * cosPhi0 + x * sinPhi0)\n    ];\n  };\n}\n\nexport default function() {\n  var phi0 = 0,\n      m = projectionMutator(hammerRetroazimuthalRaw),\n      p = m(phi0),\n      rotate_ = p.rotate,\n      stream_ = p.stream,\n      circle = geoCircle();\n\n  p.parallel = function(_) {\n    if (!arguments.length) return phi0 * degrees;\n    var r = p.rotate();\n    return m(phi0 = _ * radians).rotate(r);\n  };\n\n  // Temporary hack; see hammerRetroazimuthalRotation.\n  p.rotate = function(_) {\n    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * degrees, _);\n    rotate_.call(p, [_[0], _[1] - phi0 * degrees]);\n    circle.center([-_[0], -_[1]]);\n    return p;\n  };\n\n  p.stream = function(stream) {\n    stream = stream_(stream);\n    stream.sphere = function() {\n      stream.polygonStart();\n      var epsilon = 1e-2,\n          ring = circle.radius(90 - epsilon)().coordinates[0],\n          n = ring.length - 1,\n          i = -1,\n          p;\n      stream.lineStart();\n      while (++i < n) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      ring = circle.radius(90 + epsilon)().coordinates[0];\n      n = ring.length - 1;\n      stream.lineStart();\n      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);\n      stream.lineEnd();\n      stream.polygonEnd();\n    };\n    return stream;\n  };\n\n  return p\n      .scale(79.4187)\n      .parallel(45)\n      .clipAngle(180 - 1e-3);\n}\n","import {range} from \"d3-array\";\nimport {geoStream, geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {collignonRaw} from \"./collignon\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\nimport {abs, epsilon, floor, max, min, pi, radians, sqrtPi, tau} from \"./math\";\n\nvar healpixParallel = 41 + 48 / 36 + 37 / 3600, // for K=3; TODO automate\n    healpixLambert = cylindricalEqualAreaRaw(0);\n\nexport function healpixRaw(H) {\n  var phi0 = healpixParallel * radians,\n      dx = collignonRaw(pi, phi0)[0] - collignonRaw(-pi, phi0)[0],\n      y0 = healpixLambert(0, phi0)[1],\n      y1 = collignonRaw(0, phi0)[1],\n      dy1 = sqrtPi - y1,\n      k = tau / H,\n      w = 4 / tau,\n      h = y0 + (dy1 * dy1 * 4) / tau;\n\n  function forward(lambda, phi) {\n    var point,\n        phi2 = abs(phi);\n    if (phi2 > phi0) {\n      var i = min(H - 1, max(0, floor((lambda + pi) / k)));\n      lambda += pi * (H - 1) / H - i * k;\n      point = collignonRaw(lambda, phi2);\n      point[0] = point[0] * tau / dx - tau * (H - 1) / (2 * H) + i * tau / H;\n      point[1] = y0 + (point[1] - y1) * 4 * dy1 / tau;\n      if (phi < 0) point[1] = -point[1];\n    } else {\n      point = healpixLambert(lambda, phi);\n    }\n    point[0] *= w, point[1] /= h;\n    return point;\n  }\n\n  forward.invert = function(x, y) {\n    x /= w, y *= h;\n    var y2 = abs(y);\n    if (y2 > y0) {\n      var i = min(H - 1, max(0, floor((x + pi) / k)));\n      x = (x + pi * (H - 1) / H - i * k) * dx / tau;\n      var point = collignonRaw.invert(x, 0.25 * (y2 - y0) * tau / dy1 + y1);\n      point[0] -= pi * (H - 1) / H - i * k;\n      if (y < 0) point[1] = -point[1];\n      return point;\n    }\n    return healpixLambert.invert(x, y);\n  };\n\n  return forward;\n}\n\nfunction sphereTop(x, i) {\n  return [x, i & 1 ? 90 - epsilon : healpixParallel];\n}\n\nfunction sphereBottom(x, i) {\n  return [x, i & 1 ? -90 + epsilon : -healpixParallel];\n}\n\nfunction sphereNudge(d) {\n  return [d[0] * (1 - epsilon), d[1]];\n}\n\nfunction sphere(step) {\n  var c = [].concat(\n    range(-180, 180 + step / 2, step).map(sphereTop),\n    range(180, -180 - step / 2, -step).map(sphereBottom)\n  );\n  return {\n    type: \"Polygon\",\n    coordinates: [step === 180 ? c.map(sphereNudge) : c]\n  };\n}\n\nexport default function() {\n  var H = 4,\n      m = projectionMutator(healpixRaw),\n      p = m(H),\n      stream_ = p.stream;\n\n  p.lobes = function(_) {\n    return arguments.length ? m(H = +_) : H;\n  };\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere(180 / H), sphereStream); };\n    return rotateStream;\n  };\n\n  return p\n      .scale(239.75);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, acos, asin, atan2, cos, epsilon2, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function hillRaw(K) {\n  var L = 1 + K,\n      sinBt = sin(1 / L),\n      Bt = asin(sinBt),\n      A = 2 * sqrt(pi / (B = pi + 4 * Bt * L)),\n      B,\n      rho0 = 0.5 * A * (L + sqrt(K * (2 + K))),\n      K2 = K * K,\n      L2 = L * L;\n\n  function forward(lambda, phi) {\n    var t = 1 - sin(phi),\n        rho,\n        omega;\n    if (t && t < 2) {\n      var theta = halfPi - phi, i = 25, delta;\n      do {\n        var sinTheta = sin(theta),\n            cosTheta = cos(theta),\n            Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta),\n            C = 1 + L2 - 2 * L * cosTheta;\n        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);\n      } while (abs(delta) > epsilon2 && --i > 0);\n      rho = A * sqrt(C);\n      omega = lambda * Bt_Bt1 / pi;\n    } else {\n      rho = A * (K + t);\n      omega = lambda * Bt / pi;\n    }\n    return [\n      rho * sin(omega),\n      rho0 - rho * cos(omega)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + (y -= rho0) * y,\n        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),\n        theta = acos(cosTheta),\n        sinTheta = sin(theta),\n        Bt_Bt1 = Bt + atan2(sinTheta, L - cosTheta);\n    return [\n      asin(x / sqrt(rho2)) * pi / Bt_Bt1,\n      asin(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var K = 1,\n      m = projectionMutator(hillRaw),\n      p = m(K);\n\n  p.ratio = function(_) {\n    return arguments.length ? m(K = +_) : K;\n  };\n\n  return p\n      .scale(167.774)\n      .center([0, 18.67]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\n\nexport var sinuMollweidePhi = 0.7109889596207567;\n\nexport var sinuMollweideY = 0.0528035274542;\n\nexport function sinuMollweideRaw(lambda, phi) {\n  return phi > -sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] += sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nsinuMollweideRaw.invert = function(x, y) {\n  return y > -sinuMollweidePhi\n      ? mollweideRaw.invert(x, y - sinuMollweideY)\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(sinuMollweideRaw)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs} from \"./math\";\nimport {mollweideRaw} from \"./mollweide\";\nimport {sinusoidalRaw} from \"./sinusoidal\";\nimport {sinuMollweidePhi, sinuMollweideY} from \"./sinuMollweide\";\n\nexport function homolosineRaw(lambda, phi) {\n  return abs(phi) > sinuMollweidePhi\n      ? (lambda = mollweideRaw(lambda, phi), lambda[1] -= phi > 0 ? sinuMollweideY : -sinuMollweideY, lambda)\n      : sinusoidalRaw(lambda, phi);\n}\n\nhomolosineRaw.invert = function(x, y) {\n  return abs(y) > sinuMollweidePhi\n      ? mollweideRaw.invert(x, y + (y > 0 ? sinuMollweideY : -sinuMollweideY))\n      : sinusoidalRaw.invert(x, y);\n};\n\nexport default function() {\n  return projection(homolosineRaw)\n      .scale(152.63);\n}\n","import { geoProjectionMutator as projectionMutator } from \"d3-geo\";\nimport { asin, cos, degrees, pi, radians, sign, sin, sqrt } from \"./math.js\";\nimport { solve } from \"./newton.js\";\n\nexport function hufnagelRaw(a, b, psiMax, ratio) {\n  var k = sqrt(\n      (4 * pi) /\n        (2 * psiMax +\n          (1 + a - b / 2) * sin(2 * psiMax) +\n          ((a + b) / 2) * sin(4 * psiMax) +\n          (b / 2) * sin(6 * psiMax))\n    ),\n    c = sqrt(\n      ratio *\n        sin(psiMax) *\n        sqrt((1 + a * cos(2 * psiMax) + b * cos(4 * psiMax)) / (1 + a + b))\n    ),\n    M = psiMax * mapping(1);\n\n  function radius(psi) {\n    return sqrt(1 + a * cos(2 * psi) + b * cos(4 * psi));\n  }\n\n  function mapping(t) {\n    var psi = t * psiMax;\n    return (\n      (2 * psi +\n        (1 + a - b / 2) * sin(2 * psi) +\n        ((a + b) / 2) * sin(4 * psi) +\n        (b / 2) * sin(6 * psi)) /\n      psiMax\n    );\n  }\n\n  function inversemapping(psi) {\n    return radius(psi) * sin(psi);\n  }\n\n  var forward = function(lambda, phi) {\n    var psi = psiMax * solve(mapping, (M * sin(phi)) / psiMax, phi / pi);\n    if (isNaN(psi)) psi = psiMax * sign(phi);\n    var kr = k * radius(psi);\n    return [((kr * c * lambda) / pi) * cos(psi), (kr / c) * sin(psi)];\n  };\n\n  forward.invert = function(x, y) {\n    var psi = solve(inversemapping, (y * c) / k);\n    return [\n      (x * pi) / (cos(psi) * k * c * radius(psi)),\n      asin((psiMax * mapping(psi / psiMax)) / M)\n    ];\n  };\n\n  if (psiMax === 0) {\n    k = sqrt(ratio / pi);\n    forward = function(lambda, phi) {\n      return [lambda * k, sin(phi) / k];\n    };\n    forward.invert = function(x, y) {\n      return [x / k, asin(y * k)];\n    };\n  }\n\n  return forward;\n}\n\nexport default function() {\n  var a = 1,\n    b = 0,\n    psiMax = 45 * radians,\n    ratio = 2,\n    mutate = projectionMutator(hufnagelRaw),\n    projection = mutate(a, b, psiMax, ratio);\n\n  projection.a = function(_) {\n    return arguments.length ? mutate((a = +_), b, psiMax, ratio) : a;\n  };\n  projection.b = function(_) {\n    return arguments.length ? mutate(a, (b = +_), psiMax, ratio) : b;\n  };\n  projection.psiMax = function(_) {\n    return arguments.length\n      ? mutate(a, b, (psiMax = +_ * radians), ratio)\n      : psiMax * degrees;\n  };\n  projection.ratio = function(_) {\n    return arguments.length ? mutate(a, b, psiMax, (ratio = +_)) : ratio;\n  };\n\n  return projection.scale(180.739);\n}\n","// https://github.com/scijs/integrate-adaptive-simpson\n\n// This algorithm adapted from pseudocode in:\n// http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf\nfunction adsimp (f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n  if (state.nanEncountered) {\n    return NaN;\n  }\n\n  var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n\n  h = b - a;\n  f1 = f(a + h * 0.25);\n  f2 = f(b - h * 0.25);\n\n  // Simple check for NaN:\n  if (isNaN(f1)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  // Simple check for NaN:\n  if (isNaN(f2)) {\n    state.nanEncountered = true;\n    return;\n  }\n\n  sl = h * (fa + 4 * f1 + fm) / 12;\n  sr = h * (fm + 4 * f2 + fb) / 12;\n  s2 = sl + sr;\n  err = (s2 - V0) / 15;\n\n  if (depth > maxdepth) {\n    state.maxDepthCount++;\n    return s2 + err;\n  } else if (Math.abs(err) < tol) {\n    return s2 + err;\n  } else {\n    m = a + h * 0.5;\n\n    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V1)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n    if (isNaN(V2)) {\n      state.nanEncountered = true;\n      return NaN;\n    }\n\n    return V1 + V2;\n  }\n}\n\nexport function integrate (f, a, b, tol, maxdepth) {\n  var state = {\n    maxDepthCount: 0,\n    nanEncountered: false\n  };\n\n  if (tol === undefined) {\n    tol = 1e-8;\n  }\n  if (maxdepth === undefined) {\n    maxdepth = 20;\n  }\n\n  var fa = f(a);\n  var fm = f(0.5 * (a + b));\n  var fb = f(b);\n\n  var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n\n  var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n/*\n  if (state.maxDepthCount > 0 && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n  }\n\n  if (state.nanEncountered && console && console.warn) {\n    console.warn('integrate-adaptive-simpson: Warning: NaN encountered. Halting early.');\n  }\n*/\n\n  return result;\n}","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, pi, pow, sign, sin} from \"./math\";\nimport {integrate} from \"./integrate\";\n\nexport function hyperellipticalRaw(alpha, k, gamma) {\n\n  function elliptic (f) {\n    return alpha + (1 - alpha) * pow(1 - pow(f, k), 1 / k);\n  }\n\n  function z(f) {\n    return integrate(elliptic, 0, f, 1e-4);\n  }\n\n  var G = 1 / z(1),\n      n = 1000,\n      m = (1 + 1e-8) * G,\n      approx = [];\n  for (var i = 0; i <= n; i++)\n      approx.push(z(i / n) * m);\n\n  function Y(sinphi) {\n    var rmin = 0, rmax = n, r = n >> 1;\n    do {\n      if (approx[r] > sinphi) rmax = r; else rmin = r;\n      r = (rmin + rmax) >> 1;\n    } while (r > rmin);\n    var u = approx[r + 1] - approx[r];\n    if (u) u = (sinphi - approx[r + 1]) / u;\n    return (r + 1 + u) / n;\n  }\n\n  var ratio = 2 * Y(1) / pi * G / gamma;\n\n  var forward = function(lambda, phi) {\n    var y = Y(abs(sin(phi))),\n        x = elliptic(y) * lambda;\n    y /= ratio;\n    return [ x, (phi >= 0) ? y : -y ];\n  };\n\n  forward.invert = function(x, y) {\n    var phi;\n    y *= ratio;\n    if (abs(y) < 1) phi = sign(y) * asin(z(abs(y)) * G);\n    return [ x / elliptic(abs(y)), phi ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var alpha = 0,\n      k = 2.5,\n      gamma = 1.183136, // affine = sqrt(2 * gamma / pi) = 0.8679\n      m = projectionMutator(hyperellipticalRaw),\n      p = m(alpha, k, gamma);\n\n  p.alpha = function(_) {\n    return arguments.length ? m(alpha = +_, k, gamma) : alpha;\n  };\n\n  p.k = function(_) {\n    return arguments.length ? m(alpha, k = +_, gamma) : k;\n  };\n\n  p.gamma = function(_) {\n    return arguments.length ? m(alpha, k, gamma = +_) : gamma;\n  };\n\n  return p\n      .scale(152.63);\n}\n","import {merge} from \"d3-array\";\nimport {geoStream, geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon, radians} from \"../math\";\n\nfunction pointEqual(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n\nfunction interpolateLine(coordinates, m) {\n  var i = -1,\n      n = coordinates.length,\n      p0 = coordinates[0],\n      p1,\n      dx,\n      dy,\n      resampled = [];\n  while (++i < n) {\n    p1 = coordinates[i];\n    dx = (p1[0] - p0[0]) / m;\n    dy = (p1[1] - p0[1]) / m;\n    for (var j = 0; j < m; ++j) resampled.push([p0[0] + j * dx, p0[1] + j * dy]);\n    p0 = p1;\n  }\n  resampled.push(p1);\n  return resampled;\n}\n\nfunction interpolateSphere(lobes) {\n  var coordinates = [],\n      lobe,\n      lambda0, phi0, phi1,\n      lambda2, phi2,\n      i, n = lobes[0].length;\n\n  // Northern Hemisphere\n  for (i = 0; i < n; ++i) {\n    lobe = lobes[0][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda0 + epsilon, phi0 + epsilon],\n      [lambda0 + epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi1 - epsilon],\n      [lambda2 - epsilon, phi2 + epsilon]\n    ], 30));\n  }\n\n  // Southern Hemisphere\n  for (i = lobes[1].length - 1; i >= 0; --i) {\n    lobe = lobes[1][i];\n    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];\n    lambda2 = lobe[2][0], phi2 = lobe[2][1];\n    coordinates.push(interpolateLine([\n      [lambda2 - epsilon, phi2 - epsilon],\n      [lambda2 - epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi1 + epsilon],\n      [lambda0 + epsilon, phi0 - epsilon]\n    ], 30));\n  }\n\n  return {\n    type: \"Polygon\",\n    coordinates: [merge(coordinates)]\n  };\n}\n\nexport default function(project, lobes) {\n  var sphere, bounds;\n\n  function forward(lambda, phi) {\n    var sign = phi < 0 ? -1 : +1, lobe = lobes[+(phi < 0)];\n    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i);\n    var p = project(lambda - lobe[i][1][0], phi);\n    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];\n    return p;\n  }\n\n  // Assumes mutually exclusive bounding boxes for lobes.\n  if (project.invert) forward.invert = function(x, y) {\n    var bound = bounds[+(y < 0)], lobe = lobes[+(y < 0)];\n    for (var i = 0, n = bound.length; i < n; ++i) {\n      var b = bound[i];\n      if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {\n        var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);\n        p[0] += lobe[i][1][0];\n        return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;\n      }\n    }\n  };\n\n  var p = projection(forward),\n      stream_ = p.stream;\n\n  p.stream = function(stream) {\n    var rotate = p.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (p.rotate([0, 0]), stream_(stream));\n    p.rotate(rotate);\n    rotateStream.sphere = function() { geoStream(sphere, sphereStream); };\n    return rotateStream;\n  };\n  \n  p.lobes = function(_) {\n    if (!arguments.length) return lobes.map(function(lobe) {\n      return lobe.map(function(l) {\n        return [\n          [l[0][0] * degrees, l[0][1] * degrees],\n          [l[1][0] * degrees, l[1][1] * degrees],\n          [l[2][0] * degrees, l[2][1] * degrees]\n        ];\n      });\n    });\n\n    sphere = interpolateSphere(_);\n\n    lobes = _.map(function(lobe) {\n      return lobe.map(function(l) {\n        return [\n          [l[0][0] * radians, l[0][1] * radians],\n          [l[1][0] * radians, l[1][1] * radians],\n          [l[2][0] * radians, l[2][1] * radians]\n        ];\n      });\n    });\n\n    bounds = lobes.map(function(lobe) {\n      return lobe.map(function(l) {\n        var x0 = project(l[0][0], l[0][1])[0],\n            x1 = project(l[2][0], l[2][1])[0],\n            y0 = project(l[1][0], l[0][1])[1],\n            y1 = project(l[1][0], l[1][1])[1],\n            t;\n        if (y0 > y1) t = y0, y0 = y1, y1 = t;\n        return [[x0, y0], [x1, y1]];\n      });\n    });\n\n    return p;\n  };\n\n  if (lobes != null) p.lobes(lobes);\n\n  return p;\n}\n","import {boggsRaw} from \"../boggs\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(boggsRaw, lobes)\n      .scale(160.857);\n}\n","import {homolosineRaw} from \"../homolosine\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(homolosineRaw, lobes)\n      .scale(152.63);\n}\n","import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-100,  90], [ -40,   0]],\n  [[ -40,   0], [  30,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-160, -90], [-100,   0]],\n  [[-100,   0], [ -60, -90], [ -20,   0]],\n  [[ -20,   0], [  20, -90], [  80,   0]],\n  [[  80,   0], [ 140, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529);\n}\n","import {mollweideRaw} from \"../mollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [ -90,  90], [   0,   0]],\n  [[   0,   0], [  90,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [ -90, -90], [   0,   0]],\n  [[   0,   0], [  90, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(mollweideRaw, lobes)\n      .scale(169.529)\n      .rotate([20, 0]);\n}\n","import {sinuMollweideRaw} from \"../sinuMollweide\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,  35], [ -30,  90], [   0,  35]],\n  [[   0,  35], [  30,  90], [ 180,  35]]\n], [ // southern hemisphere\n  [[-180, -10], [-102, -90], [ -65, -10]],\n  [[ -65, -10], [   5, -90], [  77, -10]],\n  [[  77, -10], [ 103, -90], [ 180, -10]]\n]];\n\nexport default function() {\n  return interrupt(sinuMollweideRaw, lobes)\n      .rotate([-20, -55])\n      .scale(164.263)\n      .center([0, -5.4036]);\n}\n","import {sinusoidalRaw} from \"../sinusoidal\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,   0], [-110,  90], [ -40,   0]],\n  [[ -40,   0], [   0,  90], [  40,   0]],\n  [[  40,   0], [ 110,  90], [ 180,   0]]\n], [ // southern hemisphere\n  [[-180,   0], [-110, -90], [ -40,   0]],\n  [[ -40,   0], [   0, -90], [  40,   0]],\n  [[  40,   0], [ 110, -90], [ 180,   0]]\n]];\n\nexport default function() {\n  return interrupt(sinusoidalRaw, lobes)\n      .scale(152.63)\n      .rotate([-20, 0]);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt, tau} from \"./math\";\n\nexport function kavrayskiy7Raw(lambda, phi) {\n  return [3 / tau * lambda * sqrt(pi * pi / 3 - phi * phi), phi];\n}\n\nkavrayskiy7Raw.invert = function(x, y) {\n  return [tau / 3 * x / sqrt(pi * pi / 3 - y * y), y];\n};\n\nexport default function() {\n  return projection(kavrayskiy7Raw)\n      .scale(158.837);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {abs, asin, atan2, cos, epsilon, halfPi, pow, sign, sin} from \"./math\";\n\nexport function lagrangeRaw(n) {\n\n  function forward(lambda, phi) {\n    if (abs(abs(phi) - halfPi) < epsilon) return [0, phi < 0 ? -2 : 2];\n    var sinPhi = sin(phi),\n        v = pow((1 + sinPhi) / (1 - sinPhi), n / 2),\n        c = 0.5 * (v + 1 / v) + cos(lambda *= n);\n    return [\n      2 * sin(lambda) / c,\n      (v - 1 / v) / c\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y0 = abs(y);\n    if (abs(y0 - 2) < epsilon) return x ? null : [0, sign(y) * halfPi];\n    if (y0 > 2) return null;\n\n    x /= 2, y /= 2;\n    var x2 = x * x,\n        y2 = y * y,\n        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)\n    t = pow((1 + t) / (1 - t), 1 / n);\n    return [\n      atan2(2 * x, 1 - x2 - y2) / n,\n      asin((t - 1) / (t + 1))\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var n = 0.5,\n      m = projectionMutator(lagrangeRaw),\n      p = m(n);\n\n  p.spacing = function(_) {\n    return arguments.length ? m(n = +_) : n;\n  };\n\n  return p\n      .scale(124.75);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, cos, epsilon, halfPi, sin, pi, sqrt, sqrt2} from \"./math\";\n\nvar pi_sqrt2 = pi / sqrt2;\n\nexport function larriveeRaw(lambda, phi) {\n  return [\n    lambda * (1 + sqrt(cos(phi))) / 2,\n    phi / (cos(phi / 2) * cos(lambda / 6))\n  ];\n}\n\nlarriveeRaw.invert = function(x, y) {\n  var x0 = abs(x),\n      y0 = abs(y),\n      lambda = epsilon,\n      phi = halfPi;\n  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;\n  else lambda += 6 * acos(pi_sqrt2 / y0);\n  for (var i = 0; i < 25; i++) {\n    var sinPhi = sin(phi),\n        sqrtcosPhi = sqrt(cos(phi)),\n        sinPhi_2 = sin(phi / 2),\n        cosPhi_2 = cos(phi / 2),\n        sinLambda_6 = sin(lambda / 6),\n        cosLambda_6 = cos(lambda / 6),\n        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,\n        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,\n        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,\n        df0dLambda = 0.5 * (1 + sqrtcosPhi),\n        df1dPhi = (1 +0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),\n        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),\n        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,\n        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,\n        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;\n    phi -= dPhi;\n    lambda -= dLambda;\n    if (abs(dPhi) < epsilon && abs(dLambda) < epsilon) break;\n  }\n  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];\n};\n\nexport default function() {\n  return projection(larriveeRaw)\n      .scale(97.2672);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, pi, sign} from \"./math\";\n\nexport function laskowskiRaw(lambda, phi) {\n  var lambda2 = lambda * lambda, phi2 = phi * phi;\n  return [\n    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),\n    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))\n  ];\n}\n\nlaskowskiRaw.invert = function(x, y) {\n  var lambda = sign(x) * pi,\n      phi = y / 2,\n      i = 50;\n  do {\n    var lambda2 = lambda * lambda,\n        phi2 = phi * phi,\n        lambdaPhi = lambda * phi,\n        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,\n        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,\n        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),\n        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),\n        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),\n        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),\n        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,\n        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,\n        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;\n    lambda -= deltaLambda, phi -= deltaPhi;\n  } while ((abs(deltaLambda) > epsilon || abs(deltaPhi) > epsilon) && --i > 0);\n  return i && [lambda, phi];\n};\n\nexport default function() {\n  return projection(laskowskiRaw)\n      .scale(139.98);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {acos, asin, cos, sign, sin, tan, sqrt, sqrt1_2} from \"./math\";\n\nexport function littrowRaw(lambda, phi) {\n  return [\n    sin(lambda) / cos(phi),\n    tan(phi) * cos(lambda)\n  ];\n}\n\nlittrowRaw.invert = function(x, y) {\n  var x2 = x * x,\n      y2 = y * y,\n      y2_1 = y2 + 1,\n      x2_y2_1 = x2 + y2_1,\n      cosPhi = x\n          ? sqrt1_2 * sqrt((x2_y2_1 - sqrt(x2_y2_1 * x2_y2_1 - 4 * x2)) / x2)\n          : 1 / sqrt(y2_1);\n  return [\n    asin(x * cosPhi),\n    sign(y) * acos(cosPhi)\n  ];\n};\n\nexport default function() {\n  return projection(littrowRaw)\n      .scale(144.049)\n      .clipAngle(90 - 1e-3);\n}\n","import parallel1 from \"./parallel1\";\nimport {abs, cos, epsilon, halfPi, log, quarterPi, tan} from \"./math\";\n\nexport function loximuthalRaw(phi0) {\n  var cosPhi0 = cos(phi0),\n      tanPhi0 = tan(quarterPi + phi0 / 2);\n\n  function forward(lambda, phi) {\n    var y = phi - phi0,\n        x = abs(y) < epsilon ? lambda * cosPhi0\n            : abs(x = quarterPi + phi / 2) < epsilon || abs(abs(x) - halfPi) < epsilon\n            ? 0 : lambda * y / log(tan(x) / tanPhi0);\n    return [x, y];\n  }\n\n  forward.invert = function(x, y) {\n    var lambda,\n        phi = y + phi0;\n    return [\n      abs(y) < epsilon ? x / cosPhi0\n          : (abs(lambda = quarterPi + phi / 2) < epsilon || abs(abs(lambda) - halfPi) < epsilon) ? 0\n          : x * log(tan(lambda) / tanPhi0) / y,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(loximuthalRaw)\n      .parallel(40)\n      .scale(158.837);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, exp, log, quarterPi, pi, tan} from \"./math\";\n\nexport function millerRaw(lambda, phi) {\n  return [lambda, 1.25 * log(tan(quarterPi + 0.4 * phi))];\n}\n\nmillerRaw.invert = function(x, y) {\n  return [x, 2.5 * atan(exp(0.8 * y)) - 0.625 * pi];\n};\n\nexport default function() {\n  return projection(millerRaw)\n      .scale(108.318);\n}\n","import {geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, epsilon, sin, sqrt} from \"./math\";\n\nexport function modifiedStereographicRaw(C) {\n  var m = C.length - 1;\n\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = 2 / (1 + cosPhi * cos(lambda)),\n        zr = k * cosPhi * sin(lambda),\n        zi = k * sin(phi),\n        i = m,\n        w = C[i],\n        ar = w[0],\n        ai = w[1],\n        t;\n    while (--i >= 0) {\n      w = C[i];\n      ar = w[0] + zr * (t = ar) - zi * ai;\n      ai = w[1] + zr * ai + zi * t;\n    }\n    ar = zr * (t = ar) - zi * ai;\n    ai = zr * ai + zi * t;\n    return [ar, ai];\n  }\n\n  forward.invert = function(x, y) {\n    var i = 20,\n        zr = x,\n        zi = y;\n    do {\n      var j = m,\n          w = C[j],\n          ar = w[0],\n          ai = w[1],\n          br = 0,\n          bi = 0,\n          t;\n\n      while (--j >= 0) {\n        w = C[j];\n        br = ar + zr * (t = br) - zi * bi;\n        bi = ai + zr * bi + zi * t;\n        ar = w[0] + zr * (t = ar) - zi * ai;\n        ai = w[1] + zr * ai + zi * t;\n      }\n      br = ar + zr * (t = br) - zi * bi;\n      bi = ai + zr * bi + zi * t;\n      ar = zr * (t = ar) - zi * ai - x;\n      ai = zr * ai + zi * t - y;\n\n      var denominator = br * br + bi * bi, deltar, deltai;\n      zr -= deltar = (ar * br + ai * bi) / denominator;\n      zi -= deltai = (ai * br - ar * bi) / denominator;\n    } while (abs(deltar) + abs(deltai) > epsilon * epsilon && --i > 0);\n\n    if (i) {\n      var rho = sqrt(zr * zr + zi * zi),\n          c = 2 * atan(rho * 0.5),\n          sinc = sin(c);\n      return [atan2(zr * sinc, rho * cos(c)), rho ? asin(zi * sinc / rho) : 0];\n    }\n  };\n\n  return forward;\n}\n\nvar alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],\n    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],\n    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],\n    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],\n    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];\n\nexport function modifiedStereographicAlaska() {\n  return modifiedStereographic(alaska, [152, -64])\n      .scale(1500)\n      .center([-160.908, 62.4864])\n      .clipAngle(25);\n}\n\nexport function modifiedStereographicGs48() {\n  return modifiedStereographic(gs48, [95, -38])\n      .scale(1000)\n      .clipAngle(55)\n      .center([-96.5563, 38.8675]);\n}\n\nexport function modifiedStereographicGs50() {\n  return modifiedStereographic(gs50, [120, -45])\n      .scale(359.513)\n      .clipAngle(55)\n      .center([-117.474, 53.0628]);\n}\n\nexport function modifiedStereographicMiller() {\n  return modifiedStereographic(miller, [-20, -18])\n      .scale(209.091)\n      .center([20, 16.7214])\n      .clipAngle(82);\n}\n\nexport function modifiedStereographicLee() {\n  return modifiedStereographic(lee, [165, 10])\n      .scale(250)\n      .clipAngle(130)\n      .center([-165, -10]);\n}\n\nexport default function modifiedStereographic(coefficients, rotate) {\n  var p = projection(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),\n      r = rotation(rotate),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p;\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, cos, sin, sqrt} from \"./math\";\n\nvar sqrt6 = sqrt(6),\n    sqrt7 = sqrt(7);\n\nexport function mtFlatPolarParabolicRaw(lambda, phi) {\n  var theta = asin(7 * sin(phi) / (3 * sqrt6));\n  return [\n    sqrt6 * lambda * (2 * cos(2 * theta / 3) - 1) / sqrt7,\n    9 * sin(theta / 3) / sqrt7\n  ];\n}\n\nmtFlatPolarParabolicRaw.invert = function(x, y) {\n  var theta = 3 * asin(y * sqrt7 / 9);\n  return [\n    x * sqrt7 / (sqrt6 * (2 * cos(2 * theta / 3) - 1)),\n    asin(sin(theta) * 3 * sqrt6 / 7)\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarParabolicRaw)\n      .scale(164.859);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, sin, sqrt, sqrt1_2, sqrt2} from \"./math\";\n\nexport function mtFlatPolarQuarticRaw(lambda, phi) {\n  var k = (1 + sqrt1_2) * sin(phi),\n      theta = phi;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (sin(theta / 2) + sin(theta) - k) / (0.5 * cos(theta / 2) + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    lambda * (1 + 2 * cos(theta) / cos(theta / 2)) / (3 * sqrt2),\n    2 * sqrt(3) * sin(theta / 2) / sqrt(2 + sqrt2)\n  ];\n}\n\nmtFlatPolarQuarticRaw.invert = function(x, y) {\n  var sinTheta_2 = y * sqrt(2 + sqrt2) / (2 * sqrt(3)),\n      theta = 2 * asin(sinTheta_2);\n  return [\n    3 * sqrt2 * x / (1 + 2 * cos(theta) / cos(theta / 2)),\n    asin((sinTheta_2 + sin(theta)) / (1 + sqrt1_2))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarQuarticRaw)\n      .scale(188.209);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, cos, epsilon, halfPi, pi, sin, sqrt} from \"./math\";\n\nexport function mtFlatPolarSinusoidalRaw(lambda, phi) {\n  var A = sqrt(6 / (4 + pi)),\n      k = (1 + pi / 4) * sin(phi),\n      theta = phi / 2;\n  for (var i = 0, delta; i < 25; i++) {\n    theta -= delta = (theta / 2 + sin(theta) - k) / (0.5 + cos(theta));\n    if (abs(delta) < epsilon) break;\n  }\n  return [\n    A * (0.5 + cos(theta)) * lambda / 1.5,\n    A * theta\n  ];\n}\n\nmtFlatPolarSinusoidalRaw.invert = function(x, y) {\n  var A = sqrt(6 / (4 + pi)),\n      theta = y / A;\n  if (abs(abs(theta) - halfPi) < epsilon) theta = theta < 0 ? -halfPi : halfPi;\n  return [\n    1.5 * x / (A * (0.5 + cos(theta))),\n    asin((theta / 2 + sin(theta)) / (1 + pi / 4))\n  ];\n};\n\nexport default function() {\n  return projection(mtFlatPolarSinusoidalRaw)\n      .scale(166.518);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon2} from \"./math\";\n\nexport function naturalEarth2Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2, phi6 = phi2 * phi4;\n  return [\n    lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))\n  ];\n}\n\nnaturalEarth2Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta, phi2, phi4, phi6;\n  do {\n    phi2 = phi * phi; phi4 = phi2 * phi2;\n    phi -= delta = ((phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))) - y) /\n      (1.01183 + phi4 * phi4 * ((9 * -0.02625) + (11 * 0.01926) * phi2 + (13 * -0.00396) * phi4));\n  } while (abs(delta) > epsilon2 && --i > 0);\n  phi2 = phi * phi; phi4 = phi2 * phi2; phi6 = phi2 * phi4;\n  return [\n    x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth2Raw)\n      .scale(175.295);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, epsilon, tan} from \"./math\";\n\nexport function nellHammerRaw(lambda, phi) {\n  return [\n    lambda * (1 + cos(phi)) / 2,\n    2 * (phi - tan(phi / 2))\n  ];\n}\n\nnellHammerRaw.invert = function(x, y) {\n  var p = y / 2;\n  for (var i = 0, delta = Infinity; i < 10 && abs(delta) > epsilon; ++i) {\n    var c = cos(y / 2);\n    y -= delta = (y - tan(y / 2) - p) / (1 - 0.5 / (c * c));\n  }\n  return [\n    2 * x / (1 + cos(y)),\n    y\n  ];\n};\n\nexport default function() {\n  return projection(nellHammerRaw)\n      .scale(152.63);\n}\n","import {hammerRaw} from \"../hammer\";\nimport interrupt from \"./index\";\n\nvar lobes = [[ // northern hemisphere\n  [[-180,  0],  [-90,  90], [   0,  0]],\n  [[   0,  0], [  90,  90], [ 180, 0]]\n], [ // southern hemisphere\n  [[-180, 0], [-90, -90], [  0, 0]],\n  [[   0, 0], [ 90, -90], [180, 0]]\n]];\n\nexport default function() {\n  return interrupt(hammerRaw(Infinity), lobes)\n      .rotate([20, 0])\n      .scale(152.63);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, cos, halfPi, pi, sign, sin, sqrt} from \"./math\";\nimport {solve} from \"./newton.js\";\n\n// Based on Torben Jansen's implementation\n// https://beta.observablehq.com/@toja/nicolosi-globular-projection\n// https://beta.observablehq.com/@toja/nicolosi-globular-inverse\n\nexport function nicolosiRaw(lambda, phi) {\n  var sinPhi = sin(phi),\n    q = cos(phi),\n    s = sign(lambda);\n\n  if (lambda === 0 || abs(phi) === halfPi) return [0, phi];\n  else if (phi === 0) return [lambda, 0];\n  else if (abs(lambda) === halfPi) return [lambda * q, halfPi * sinPhi];\n\n  var b = pi / (2 * lambda) - (2 * lambda) / pi,\n    c = (2 * phi) / pi,\n    d = (1 - c * c) / (sinPhi - c);\n\n  var b2 = b * b,\n    d2 = d * d,\n    b2d2 = 1 + b2 / d2,\n    d2b2 = 1 + d2 / b2;\n\n  var M = ((b * sinPhi) / d - b / 2) / b2d2,\n    N = ((d2 * sinPhi) / b2 + d / 2) / d2b2,\n    m = M * M + (q * q) / b2d2,\n    n = N * N - ((d2 * sinPhi * sinPhi) / b2 + d * sinPhi - 1) / d2b2;\n\n  return [\n    halfPi * (M + sqrt(m) * s),\n    halfPi * (N + sqrt(n < 0 ? 0 : n) * sign(-phi * b) * s)\n  ];\n}\n\nnicolosiRaw.invert = function(x, y) {\n\n  x /= halfPi;\n  y /= halfPi;\n\n  var x2 = x * x,\n    y2 = y * y,\n    x2y2 = x2 + y2,\n    pi2 = pi * pi;\n\n  return [\n    x ? (x2y2 -1 + sqrt((1 - x2y2) * (1 - x2y2) + 4 * x2)) / (2 * x) * halfPi : 0,\n    solve(function(phi) {\n      return (\n        x2y2 * (pi * sin(phi) - 2 * phi) * pi +\n        4 * phi * phi * (y - sin(phi)) +\n        2 * pi * phi -\n        pi2 * y\n      );\n    }, 0)\n  ];\n};\n\nexport default function() {\n  return projection(nicolosiRaw)\n    .scale(127.267);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon} from \"./math\";\n\n// Based on Java implementation by Bojan Savric.\n// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java\n\nvar pattersonK1 = 1.0148,\n    pattersonK2 = 0.23185,\n    pattersonK3 = -0.14499,\n    pattersonK4 = 0.02406,\n    pattersonC1 = pattersonK1,\n    pattersonC2 = 5 * pattersonK2,\n    pattersonC3 = 7 * pattersonK3,\n    pattersonC4 = 9 * pattersonK4,\n    pattersonYmax = 1.790857183;\n\nexport function pattersonRaw(lambda, phi) {\n  var phi2 = phi * phi;\n  return [\n    lambda,\n    phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))\n  ];\n}\n\npattersonRaw.invert = function(x, y) {\n  if (y > pattersonYmax) y = pattersonYmax;\n  else if (y < -pattersonYmax) y = -pattersonYmax;\n  var yc = y, delta;\n\n  do { // Newton-Raphson\n    var y2 = yc * yc;\n    yc -= delta = ((yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2)))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));\n  } while (abs(delta) > epsilon);\n\n  return [x, yc];\n};\n\nexport default function() {\n  return projection(pattersonRaw)\n      .scale(139.319);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, cos, epsilon, halfPi, sign, sin, tan} from \"./math\";\n\nexport function polyconicRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var tanPhi = tan(phi),\n      k = lambda * sin(phi);\n  return [\n    sin(k) / tanPhi,\n    phi + (1 - cos(k)) / tanPhi\n  ];\n}\n\npolyconicRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  var k = x * x + y * y,\n      phi = y * 0.5,\n      i = 10, delta;\n  do {\n    var tanPhi = tan(phi),\n        secPhi = 1 / cos(phi),\n        j = k - 2 * y * phi + phi * phi;\n    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n  } while (abs(delta) > epsilon && --i > 0);\n  tanPhi = tan(phi);\n  return [\n    (abs(y) < abs(phi + 1 / tanPhi) ? asin(x * tanPhi) : sign(x) * (acos(abs(x * tanPhi)) + halfPi)) / sin(phi),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(polyconicRaw)\n      .scale(103.74);\n}\n","import {atan2, cos, sin, sqrt} from \"../math\";\n\n// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:\n// [a, b, c,\n//  d, e, f,\n//  0, 0, 1] - this redundant row is left out.\n\n// Transform matrix for [a0, a1] -> [b0, b1].\nexport default function(a, b) {\n  var u = subtract(a[1], a[0]),\n      v = subtract(b[1], b[0]),\n      phi = angle(u, v),\n      s = length(u) / length(v);\n\n  return multiply([\n    1, 0, a[0][0],\n    0, 1, a[0][1]\n  ], multiply([\n    s, 0, 0,\n    0, s, 0\n  ], multiply([\n    cos(phi), sin(phi), 0,\n    -sin(phi), cos(phi), 0\n  ], [\n    1, 0, -b[0][0],\n    0, 1, -b[0][1]\n  ])));\n}\n\n// Inverts a transform matrix.\nexport function inverse(m) {\n  var k = 1 / (m[0] * m[4] - m[1] * m[3]);\n  return [\n    k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]),\n    -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])\n  ];\n}\n\n// Multiplies two 3x2 matrices.\nexport function multiply(a, b) {\n  return [\n    a[0] * b[0] + a[1] * b[3],\n    a[0] * b[1] + a[1] * b[4],\n    a[0] * b[2] + a[1] * b[5] + a[2],\n    a[3] * b[0] + a[4] * b[3],\n    a[3] * b[1] + a[4] * b[4],\n    a[3] * b[2] + a[4] * b[5] + a[5]\n  ];\n}\n\n// Subtracts 2D vectors.\nfunction subtract(a, b) {\n  return [a[0] - b[0], a[1] - b[1]];\n}\n\n// Magnitude of a 2D vector.\nfunction length(v) {\n  return sqrt(v[0] * v[0] + v[1] * v[1]);\n}\n\n// Angle between two 2D vectors.\nfunction angle(a, b) {\n  return atan2(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);\n}\n","import {geoBounds as bounds, geoCentroid as centroid, geoInterpolate as interpolate, geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon, radians} from \"../math\";\nimport {default as matrix, multiply, inverse} from \"./matrix\";\n\n// Creates a polyhedral projection.\n//  * root: a spanning tree of polygon faces.  Nodes are automatically\n//    augmented with a transform matrix.\n//  * face: a function that returns the appropriate node for a given {lambda, phi}\n//    point (radians).\n//  * r: rotation angle for root face [deprecated by .angle()].\nexport default function(root, face, r) {\n\n  recurse(root, {transform: null});\n\n  function recurse(node, parent) {\n    node.edges = faceEdges(node.face);\n    // Find shared edge.\n    if (parent.face) {\n      var shared = node.shared = sharedEdge(node.face, parent.face),\n          m = matrix(shared.map(parent.project), shared.map(node.project));\n      node.transform = parent.transform ? multiply(parent.transform, m) : m;\n      // Replace shared edge in parent edges array.\n      var edges = parent.edges;\n      for (var i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;\n      }\n      edges = node.edges;\n      for (i = 0, n = edges.length; i < n; ++i) {\n        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;\n        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;\n      }\n    } else {\n      node.transform = parent.transform;\n    }\n    if (node.children) {\n      node.children.forEach(function(child) {\n        recurse(child, node);\n      });\n    }\n    return node;\n  }\n\n  function forward(lambda, phi) {\n    var node = face(lambda, phi),\n        point = node.project([lambda * degrees, phi * degrees]),\n        t;\n    if (t = node.transform) {\n      return [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        -(t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    point[1] = -point[1];\n    return point;\n  }\n\n  // Naive inverse!  A faster solution would use bounding boxes, or even a\n  // polygonal quadtree.\n  if (hasInverse(root)) forward.invert = function(x, y) {\n    var coordinates = faceInvert(root, [x, -y]);\n    return coordinates && (coordinates[0] *= radians, coordinates[1] *= radians, coordinates);\n  };\n\n  function faceInvert(node, coordinates) {\n    var invert = node.project.invert,\n        t = node.transform,\n        point = coordinates;\n    if (t) {\n      t = inverse(t);\n      point = [\n        t[0] * point[0] + t[1] * point[1] + t[2],\n        (t[3] * point[0] + t[4] * point[1] + t[5])\n      ];\n    }\n    if (invert && node === faceDegrees(p = invert(point))) return p;\n    var p,\n        children = node.children;\n    for (var i = 0, n = children && children.length; i < n; ++i) {\n      if (p = faceInvert(children[i], coordinates)) return p;\n    }\n  }\n\n  function faceDegrees(coordinates) {\n    return face(coordinates[0] * radians, coordinates[1] * radians);\n  }\n\n  var proj = projection(forward),\n      stream_ = proj.stream;\n\n  proj.stream = function(stream) {\n    var rotate = proj.rotate(),\n        rotateStream = stream_(stream),\n        sphereStream = (proj.rotate([0, 0]), stream_(stream));\n    proj.rotate(rotate);\n    rotateStream.sphere = function() {\n      sphereStream.polygonStart();\n      sphereStream.lineStart();\n      outline(sphereStream, root);\n      sphereStream.lineEnd();\n      sphereStream.polygonEnd();\n    };\n    return rotateStream;\n  };\n\n  return proj.angle(r == null ? -30 : r * degrees);\n}\n\nfunction outline(stream, node, parent) {\n  var point,\n      edges = node.edges,\n      n = edges.length,\n      edge,\n      multiPoint = {type: \"MultiPoint\", coordinates: node.face},\n      notPoles = node.face.filter(function(d) { return abs(d[1]) !== 90; }),\n      b = bounds({type: \"MultiPoint\", coordinates: notPoles}),\n      inside = false,\n      j = -1,\n      dx = b[1][0] - b[0][0];\n  // TODO\n  var c = dx === 180 || dx === 360\n      ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2]\n      : centroid(multiPoint);\n  // First find the shared edge…\n  if (parent) while (++j < n) {\n    if (edges[j] === parent) break;\n  }\n  ++j;\n  for (var i = 0; i < n; ++i) {\n    edge = edges[(i + j) % n];\n    if (Array.isArray(edge)) {\n      if (!inside) {\n        stream.point((point = interpolate(edge[0], c)(epsilon))[0], point[1]);\n        inside = true;\n      }\n      stream.point((point = interpolate(edge[1], c)(epsilon))[0], point[1]);\n    } else {\n      inside = false;\n      if (edge !== parent) outline(stream, edge, node);\n    }\n  }\n}\n\n// Tests equality of two spherical points.\nfunction pointEqual(a, b) {\n  return a && b && a[0] === b[0] && a[1] === b[1];\n}\n\n// Finds a shared edge given two clockwise polygons.\nfunction sharedEdge(a, b) {\n  var x, y, n = a.length, found = null;\n  for (var i = 0; i < n; ++i) {\n    x = a[i];\n    for (var j = b.length; --j >= 0;) {\n      y = b[j];\n      if (x[0] === y[0] && x[1] === y[1]) {\n        if (found) return [found, x];\n        found = x;\n      }\n    }\n  }\n}\n\n// Converts an array of n face vertices to an array of n + 1 edges.\nfunction faceEdges(face) {\n  var n = face.length,\n      edges = [];\n  for (var a = face[n - 1], i = 0; i < n; ++i) edges.push([a, a = face[i]]);\n  return edges;\n}\n\nfunction hasInverse(node) {\n  return node.project.invert || node.children && node.children.some(hasInverse);\n}\n","// TODO generate on-the-fly to avoid external modification.\nvar octahedron = [\n  [0, 90],\n  [-90, 0], [0, 0], [90, 0], [180, 0],\n  [0, -90]\n];\n\nexport default [\n  [0, 2, 1],\n  [0, 3, 2],\n  [5, 1, 2],\n  [5, 2, 3],\n  [0, 1, 4],\n  [0, 4, 3],\n  [5, 4, 1],\n  [5, 3, 4]\n].map(function(face) {\n  return face.map(function(i) {\n    return octahedron[i];\n  });\n});\n","import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {pi} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .angle(-30)\n      .scale(101.858)\n      .center([0, 45]);\n}\n","import {geoCentroid as centroid, geoProjection as projection} from \"d3-geo\";\nimport {collignonRaw} from \"../collignon\";\nimport {pi, sqrt} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nvar kx = 2 / sqrt(3);\n\nfunction collignonK(a, b) {\n  var p = collignonRaw(a, b);\n  return [p[0] * kx, p[1]];\n}\n\ncollignonK.invert = function(x,y) {\n  return collignonRaw.invert(x / kx, y);\n};\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = centroid({type: \"MultiPoint\", coordinates: face});\n    return projection(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);\n  };\n\n  var faces = octahedron.map(function(face) {\n    return {face: face, project: faceProjection(face)};\n  });\n\n  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {\n    var node = faces[d];\n    node && (node.children || (node.children = [])).push(faces[i]);\n  });\n\n  return polyhedral(faces[0], function(lambda, phi) {\n        return faces[lambda < -pi / 2 ? phi < 0 ? 6 : 4\n            : lambda < 0 ? phi < 0 ? 2 : 0\n            : lambda < pi / 2 ? phi < 0 ? 3 : 1\n            : phi < 0 ? 7 : 5];\n      })\n      .angle(-30)\n      .scale(121.906)\n      .center([0, 48.5904]);\n}\n","import {geoCentroid as centroid, geoGnomonic as gnomonic} from \"d3-geo\";\nimport {asin, atan2, cos, degrees, max, min, pi, radians, sin} from \"../math\";\nimport polyhedral from \"./index\";\nimport octahedron from \"./octahedron\";\n\nexport default function(faceProjection) {\n\n  faceProjection = faceProjection || function(face) {\n    var c = face.length === 6 ? centroid({type: \"MultiPoint\", coordinates: face}) : face[0];\n    return gnomonic().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);\n  };\n\n  var w5 = octahedron.map(function(face) {\n    var xyz = face.map(cartesian),\n        n = xyz.length,\n        a = xyz[n - 1],\n        b,\n        hexagon = [];\n    for (var i = 0; i < n; ++i) {\n      b = xyz[i];\n      hexagon.push(spherical([\n        a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794,\n        a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794,\n        a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794\n      ]), spherical([\n        b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794,\n        b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794,\n        b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794\n      ]));\n      a = b;\n    }\n    return hexagon;\n  });\n\n  var cornerNormals = [];\n\n  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];\n\n  w5.forEach(function(hexagon, j) {\n    var face = octahedron[j],\n        n = face.length,\n        normals = cornerNormals[j] = [];\n    for (var i = 0; i < n; ++i) {\n      w5.push([\n        face[i],\n        hexagon[(i * 2 + 2) % (2 * n)],\n        hexagon[(i * 2 + 1) % (2 * n)]\n      ]);\n      parents.push(j);\n      normals.push(cross(\n        cartesian(hexagon[(i * 2 + 2) % (2 * n)]),\n        cartesian(hexagon[(i * 2 + 1) % (2 * n)])\n      ));\n    }\n  });\n\n  var faces = w5.map(function(face) {\n    return {\n      project: faceProjection(face),\n      face: face\n    };\n  });\n\n  parents.forEach(function(d, i) {\n    var parent = faces[d];\n    parent && (parent.children || (parent.children = [])).push(faces[i]);\n  });\n\n  function face(lambda, phi) {\n    var cosphi = cos(phi),\n        p = [cosphi * cos(lambda), cosphi * sin(lambda), sin(phi)];\n\n    var hexagon = lambda < -pi / 2 ? phi < 0 ? 6 : 4\n        : lambda < 0 ? phi < 0 ? 2 : 0\n        : lambda < pi / 2 ? phi < 0 ? 3 : 1\n        : phi < 0 ? 7 : 5;\n\n    var n = cornerNormals[hexagon];\n\n    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon\n        : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1\n        : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2\n        : hexagon];\n  }\n\n  return polyhedral(faces[0], face)\n      .angle(-30)\n      .scale(110.625)\n      .center([0,45]);\n}\n\nfunction dot(a, b) {\n  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];\n  return s;\n}\n\nfunction cross(a, b) {\n  return [\n    a[1] * b[2] - a[2] * b[1],\n    a[2] * b[0] - a[0] * b[2],\n    a[0] * b[1] - a[1] * b[0]\n  ];\n}\n\n// Converts 3D Cartesian to spherical coordinates (degrees).\nfunction spherical(cartesian) {\n  return [\n    atan2(cartesian[1], cartesian[0]) * degrees,\n    asin(max(-1, min(1, cartesian[2]))) * degrees\n  ];\n}\n\n// Converts spherical coordinates (degrees) to 3D Cartesian.\nfunction cartesian(coordinates) {\n  var lambda = coordinates[0] * radians,\n      phi = coordinates[1] * radians,\n      cosphi = cos(phi);\n  return [\n    cosphi * cos(lambda),\n    cosphi * sin(lambda),\n    sin(phi)\n  ];\n}\n","export default function() {}\n","export default function(ring) {\n  if ((n = ring.length) < 4) return false;\n  var i = 0,\n      n,\n      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area <= 0;\n}\n","export default function(ring, point) {\n  var x = point[0],\n      y = point[1],\n      contains = false;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1],\n        pj = ring[j], xj = pj[0], yj = pj[1];\n    if (((yi > y) ^ (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)) contains = !contains;\n  }\n  return contains;\n}\n","import {geoStream} from \"d3-geo\";\nimport noop from \"../noop\";\nimport clockwise from \"./clockwise\";\nimport contains from \"./contains\";\n\nexport default function(object, projection) {\n  var stream = projection.stream, project;\n  if (!stream) throw new Error(\"invalid projection\");\n  switch (object && object.type) {\n    case \"Feature\": project = projectFeature; break;\n    case \"FeatureCollection\": project = projectFeatureCollection; break;\n    default: project = projectGeometry; break;\n  }\n  return project(object, stream);\n}\n\nfunction projectFeatureCollection(o, stream) {\n  return {\n    type: \"FeatureCollection\",\n    features: o.features.map(function(f) {\n      return projectFeature(f, stream);\n    })\n  };\n}\n\nfunction projectFeature(o, stream) {\n  return {\n    type: \"Feature\",\n    id: o.id,\n    properties: o.properties,\n    geometry: projectGeometry(o.geometry, stream)\n  };\n}\n\nfunction projectGeometryCollection(o, stream) {\n  return {\n    type: \"GeometryCollection\",\n    geometries: o.geometries.map(function(o) {\n      return projectGeometry(o, stream);\n    })\n  };\n}\n\nfunction projectGeometry(o, stream) {\n  if (!o) return null;\n  if (o.type === \"GeometryCollection\") return projectGeometryCollection(o, stream);\n  var sink;\n  switch (o.type) {\n    case \"Point\": sink = sinkPoint; break;\n    case \"MultiPoint\": sink = sinkPoint; break;\n    case \"LineString\": sink = sinkLine; break;\n    case \"MultiLineString\": sink = sinkLine; break;\n    case \"Polygon\": sink = sinkPolygon; break;\n    case \"MultiPolygon\": sink = sinkPolygon; break;\n    case \"Sphere\": sink = sinkPolygon; break;\n    default: return null;\n  }\n  geoStream(o, stream(sink));\n  return sink.result();\n}\n\nvar points = [],\n    lines = [];\n\nvar sinkPoint = {\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  result: function() {\n    var result = !points.length ? null\n        : points.length < 2 ? {type: \"Point\", coordinates: points[0]}\n        : {type: \"MultiPoint\", coordinates: points};\n    points = [];\n    return result;\n  }\n};\n\nvar sinkLine = {\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    if (points.length) lines.push(points), points = [];\n  },\n  result: function() {\n    var result = !lines.length ? null\n        : lines.length < 2 ? {type: \"LineString\", coordinates: lines[0]}\n        : {type: \"MultiLineString\", coordinates: lines};\n    lines = [];\n    return result;\n  }\n};\n\nvar sinkPolygon = {\n  polygonStart: noop,\n  lineStart: noop,\n  point: function(x, y) {\n    points.push([x, y]);\n  },\n  lineEnd: function() {\n    var n = points.length;\n    if (n) {\n      do points.push(points[0].slice()); while (++n < 4);\n      lines.push(points), points = [];\n    }\n  },\n  polygonEnd: noop,\n  result: function() {\n    if (!lines.length) return null;\n    var polygons = [],\n        holes = [];\n\n    // https://github.com/d3/d3/issues/1558\n    lines.forEach(function(ring) {\n      if (clockwise(ring)) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      var point = hole[0];\n      polygons.some(function(polygon) {\n        if (contains(polygon[0], point)) {\n          polygon.push(hole);\n          return true;\n        }\n      }) || polygons.push([hole]);\n    });\n\n    lines = [];\n\n    return !polygons.length ? null\n        : polygons.length > 1 ? {type: \"MultiPolygon\", coordinates: polygons}\n        : {type: \"Polygon\", coordinates: polygons[0]};\n  }\n};\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, halfPi, pi, sign, sqrt1_2} from \"../math\";\n\nexport default function(project) {\n  var dx = project(halfPi, 0)[0] - project(-halfPi, 0)[0];\n\n  function projectQuincuncial(lambda, phi) {\n    var t = abs(lambda) < halfPi,\n        p = project(t ? lambda : lambda > 0 ? lambda - pi : lambda + pi, phi),\n        x = (p[0] - p[1]) * sqrt1_2,\n        y = (p[0] + p[1]) * sqrt1_2;\n    if (t) return [x, y];\n    var d = dx * sqrt1_2,\n        s = x > 0 ^ y > 0 ? -1 : 1;\n    return [s * x - sign(y) * d, s * y - sign(x) * d];\n  }\n\n  if (project.invert) projectQuincuncial.invert = function(x0, y0) {\n    var x = (x0 + y0) * sqrt1_2,\n        y = (y0 - x0) * sqrt1_2,\n        t = abs(x) < 0.5 * dx && abs(y) < 0.5 * dx;\n\n    if (!t) {\n      var d = dx * sqrt1_2,\n          s = x > 0 ^ y > 0 ? -1 : 1,\n          x1 = -s * x0 + (y > 0 ? 1 : -1) * d,\n          y1 = -s * y0 + (x > 0 ? 1 : -1) * d;\n      x = (-x1 - y1) * sqrt1_2;\n      y = (x1 - y1) * sqrt1_2;\n    }\n\n    var p = project.invert(x, y);\n    if (!t) p[0] += x > 0 ? pi : -pi;\n    return p;\n  };\n\n  return projection(projectQuincuncial)\n      .rotate([-90, -90, 45])\n      .clipAngle(180 - 1e-3);\n}\n","import {gringortenRaw} from \"../gringorten\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(gringortenRaw)\n      .scale(176.423);\n}\n","import {guyouRaw} from \"../guyou\";\nimport quincuncial from \"./index\";\n\nexport default function() {\n  return quincuncial(guyouRaw)\n      .scale(111.48);\n}\n","export default function(input, digits) {\n  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error(\"invalid digits\");\n\n  function quantizePoint(input) {\n    var n = input.length, i = 2, output = new Array(n);\n    output[0] = +input[0].toFixed(digits);\n    output[1] = +input[1].toFixed(digits);\n    while (i < n) output[i] = input[i], ++i;\n    return output;\n  }\n\n  function quantizePoints(input) {\n    return input.map(quantizePoint);\n  }\n\n  function quantizePointsNoDuplicates(input) {\n    var point0 = quantizePoint(input[0]);\n    var output = [point0];\n    for (var i = 1; i < input.length; i++) {\n      var point = quantizePoint(input[i]);\n      if (point.length > 2 || point[0] != point0[0] || point[1] != point0[1]) {\n        output.push(point);\n        point0 = point;\n      }\n    }\n    if (output.length === 1 && input.length > 1) {\n      output.push(quantizePoint(input[input.length - 1]));\n    }\n    return output;\n  }\n\n  function quantizePolygon(input) {\n    return input.map(quantizePointsNoDuplicates);\n  }\n\n  function quantizeGeometry(input) {\n    if (input == null) return input;\n    var output;\n    switch (input.type) {\n      case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(quantizeGeometry)}; break;\n      case \"Point\": output = {type: \"Point\", coordinates: quantizePoint(input.coordinates)}; break;\n      case \"MultiPoint\": output = {type: input.type, coordinates: quantizePoints(input.coordinates)}; break;\n      case \"LineString\": output = {type: input.type, coordinates: quantizePointsNoDuplicates(input.coordinates)}; break;\n      case \"MultiLineString\": case \"Polygon\": output = {type: input.type, coordinates: quantizePolygon(input.coordinates)}; break;\n      case \"MultiPolygon\": output = {type: \"MultiPolygon\", coordinates: input.coordinates.map(quantizePolygon)}; break;\n      default: return input;\n    }\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  function quantizeFeature(input) {\n    var output = {type: \"Feature\", properties: input.properties, geometry: quantizeGeometry(input.geometry)};\n    if (input.id != null) output.id = input.id;\n    if (input.bbox != null) output.bbox = input.bbox;\n    return output;\n  }\n\n  if (input != null) switch (input.type) {\n    case \"Feature\": return quantizeFeature(input);\n    case \"FeatureCollection\": {\n      var output = {type: \"FeatureCollection\", features: input.features.map(quantizeFeature)};\n      if (input.bbox != null) output.bbox = input.bbox;\n      return output;\n    }\n    default: return quantizeGeometry(input);\n  }\n\n  return input;\n}\n","import {abs, acos, asin, atan, cos, epsilon, pi, sin, tan} from \"./math\";\nimport parallel1 from \"./parallel1\";\n\nexport function rectangularPolyconicRaw(phi0) {\n  var sinPhi0 = sin(phi0);\n\n  function forward(lambda, phi) {\n    var A = sinPhi0 ? tan(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;\n    if (!phi) return [2 * A, -phi0];\n    var E = 2 * atan(A * sin(phi)),\n        cotPhi = 1 / tan(phi);\n    return [\n      sin(E) * cotPhi,\n      phi + (1 - cos(E)) * cotPhi - phi0\n    ];\n  }\n\n  // TODO return null for points outside outline.\n  forward.invert = function(x, y) {\n    if (abs(y += phi0) < epsilon) return [sinPhi0 ? 2 * atan(sinPhi0 * x / 2) / sinPhi0 : x, 0];\n    var k = x * x + y * y,\n        phi = 0,\n        i = 10, delta;\n    do {\n      var tanPhi = tan(phi),\n          secPhi = 1 / cos(phi),\n          j = k - 2 * y * phi + phi * phi;\n      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);\n    } while (abs(delta) > epsilon && --i > 0);\n    var E = x * (tanPhi = tan(phi)),\n        A = tan(abs(y) < abs(phi + 1 / tanPhi) ? asin(E) * 0.5 : acos(E) * 0.5 + pi / 4) / sin(phi);\n    return [\n      sinPhi0 ? 2 * atan(sinPhi0 * A) / sinPhi0 : 2 * A,\n      phi\n    ];\n  };\n\n  return forward;\n}\n\nexport default function() {\n  return parallel1(rectangularPolyconicRaw)\n      .scale(131.215);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, degrees, epsilon2, floor, halfPi, max, min, pi, radians} from \"./math\";\n\nvar K = [\n  [0.9986, -0.062],\n  [1.0000, 0.0000],\n  [0.9986, 0.0620],\n  [0.9954, 0.1240],\n  [0.9900, 0.1860],\n  [0.9822, 0.2480],\n  [0.9730, 0.3100],\n  [0.9600, 0.3720],\n  [0.9427, 0.4340],\n  [0.9216, 0.4958],\n  [0.8962, 0.5571],\n  [0.8679, 0.6176],\n  [0.8350, 0.6769],\n  [0.7986, 0.7346],\n  [0.7597, 0.7903],\n  [0.7186, 0.8435],\n  [0.6732, 0.8936],\n  [0.6213, 0.9394],\n  [0.5722, 0.9761],\n  [0.5322, 1.0000]\n];\n\nK.forEach(function(d) {\n  d[1] *= 1.0144;\n});\n\nexport function robinsonRaw(lambda, phi) {\n  var i = min(18, abs(phi) * 36 / pi),\n      i0 = floor(i),\n      di = i - i0,\n      ax = (k = K[i0])[0],\n      ay = k[1],\n      bx = (k = K[++i0])[0],\n      by = k[1],\n      cx = (k = K[min(19, ++i0)])[0],\n      cy = k[1],\n      k;\n  return [\n    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    (phi > 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)\n  ];\n}\n\nrobinsonRaw.invert = function(x, y) {\n  var yy = y / halfPi,\n      phi = yy * 90,\n      i = min(18, abs(phi / 5)),\n      i0 = max(0, floor(i));\n  do {\n    var ay = K[i0][1],\n        by = K[i0 + 1][1],\n        cy = K[min(19, i0 + 2)][1],\n        u = cy - ay,\n        v = cy - 2 * by + ay,\n        t = 2 * (abs(yy) - by) / u,\n        c = v / u,\n        di = t * (1 - c * t * (1 - 2 * c * t));\n    if (di >= 0 || i0 === 1) {\n      phi = (y >= 0 ? 5 : -5) * (di + i);\n      var j = 50, delta;\n      do {\n        i = min(18, abs(phi) / 5);\n        i0 = floor(i);\n        di = i - i0;\n        ay = K[i0][1];\n        by = K[i0 + 1][1];\n        cy = K[min(19, i0 + 2)][1];\n        phi -= (delta = (y >= 0 ? halfPi : -halfPi) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * degrees;\n      } while (abs(delta) > epsilon2 && --j > 0);\n      break;\n    }\n  } while (--i0 >= 0);\n  var ax = K[i0][0],\n      bx = K[i0 + 1][0],\n      cx = K[min(19, i0 + 2)][0];\n  return [\n    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),\n    phi * radians\n  ];\n};\n\nexport default function() {\n  return projection(robinsonRaw)\n      .scale(152.63);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {acos, asin, atan2, cos, degrees, radians, sin, sqrt} from \"./math\";\n\nfunction satelliteVerticalRaw(P) {\n  function forward(lambda, phi) {\n    var cosPhi = cos(phi),\n        k = (P - 1) / (P - cosPhi * cos(lambda));\n    return [\n      k * cosPhi * sin(lambda),\n      k * sin(phi)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var rho2 = x * x + y * y,\n        rho = sqrt(rho2),\n        sinc = (P - sqrt(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));\n    return [\n      atan2(x * sinc, rho * sqrt(1 - sinc * sinc)),\n      rho ? asin(y * sinc / rho) : 0\n    ];\n  };\n\n  return forward;\n}\n\nexport function satelliteRaw(P, omega) {\n  var vertical = satelliteVerticalRaw(P);\n  if (!omega) return vertical;\n  var cosOmega = cos(omega),\n      sinOmega = sin(omega);\n\n  function forward(lambda, phi) {\n    var coordinates = vertical(lambda, phi),\n        y = coordinates[1],\n        A = y * sinOmega / (P - 1) + cosOmega;\n    return [\n      coordinates[0] * cosOmega / A,\n      y / A\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var k = (P - 1) / (P - 1 - y * sinOmega);\n    return vertical.invert(k * x, k * y * cosOmega);\n  };\n\n  return forward;\n}\n\nexport default function() {\n  var distance = 2,\n      omega = 0,\n      m = projectionMutator(satelliteRaw),\n      p = m(distance, omega);\n\n  // As a multiple of radius.\n  p.distance = function(_) {\n    if (!arguments.length) return distance;\n    return m(distance = +_, omega);\n  };\n\n  p.tilt = function(_) {\n    if (!arguments.length) return omega * degrees;\n    return m(distance, omega = _ * radians);\n  };\n\n  return p\n      .scale(432.147)\n      .clipAngle(acos(1 / distance) * degrees - 1e-6);\n}\n","var epsilon = 1e-4,\n    epsilonInverse = 1e4,\n    x0 = -180, x0e = x0 + epsilon,\n    x1 = 180, x1e = x1 - epsilon,\n    y0 = -90, y0e = y0 + epsilon,\n    y1 = 90, y1e = y1 - epsilon;\n\nfunction nonempty(coordinates) {\n  return coordinates.length > 0;\n}\n\nfunction quantize(x) {\n  return Math.floor(x * epsilonInverse) / epsilonInverse;\n}\n\nfunction normalizePoint(y) {\n  return y === y0 || y === y1 ? [0, y] : [x0, quantize(y)]; // pole or antimeridian?\n}\n\nfunction clampPoint(p) {\n  var x = p[0], y = p[1], clamped = false;\n  if (x <= x0e) x = x0, clamped = true;\n  else if (x >= x1e) x = x1, clamped = true;\n  if (y <= y0e) y = y0, clamped = true;\n  else if (y >= y1e) y = y1, clamped = true;\n  return clamped ? [x, y] : p;\n}\n\nfunction clampPoints(points) {\n  return points.map(clampPoint);\n}\n\n// For each ring, detect where it crosses the antimeridian or pole.\nfunction extractFragments(rings, polygon, fragments) {\n  for (var j = 0, m = rings.length; j < m; ++j) {\n    var ring = rings[j].slice();\n\n    // By default, assume that this ring doesn’t need any stitching.\n    fragments.push({index: -1, polygon: polygon, ring: ring});\n\n    for (var i = 0, n = ring.length; i < n; ++i) {\n      var point = ring[i],\n          x = point[0],\n          y = point[1];\n\n      // If this is an antimeridian or polar point…\n      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {\n        ring[i] = clampPoint(point);\n\n        // Advance through any antimeridian or polar points…\n        for (var k = i + 1; k < n; ++k) {\n          var pointk = ring[k],\n              xk = pointk[0],\n              yk = pointk[1];\n          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;\n        }\n\n        // If this was just a single antimeridian or polar point,\n        // we don’t need to cut this ring into a fragment;\n        // we can just leave it as-is.\n        if (k === i + 1) continue;\n\n        // Otherwise, if this is not the first point in the ring,\n        // cut the current fragment so that it ends at the current point.\n        // The current point is also normalized for later joining.\n        if (i) {\n          var fragmentBefore = {index: -1, polygon: polygon, ring: ring.slice(0, i + 1)};\n          fragmentBefore.ring[fragmentBefore.ring.length - 1] = normalizePoint(y);\n          fragments[fragments.length - 1] = fragmentBefore;\n        }\n\n        // If the ring started with an antimeridian fragment,\n        // we can ignore that fragment entirely.\n        else fragments.pop();\n\n        // If the remainder of the ring is an antimeridian fragment,\n        // move on to the next ring.\n        if (k >= n) break;\n\n        // Otherwise, add the remaining ring fragment and continue.\n        fragments.push({index: -1, polygon: polygon, ring: ring = ring.slice(k - 1)});\n        ring[0] = normalizePoint(ring[0][1]);\n        i = -1;\n        n = ring.length;\n      }\n    }\n  }\n}\n\n// Now stitch the fragments back together into rings.\nfunction stitchFragments(fragments) {\n  var i, n = fragments.length;\n\n  // To connect the fragments start-to-end, create a simple index by end.\n  var fragmentByStart = {},\n      fragmentByEnd = {},\n      fragment,\n      start,\n      startFragment,\n      end,\n      endFragment;\n\n  // For each fragment…\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    start = fragment.ring[0];\n    end = fragment.ring[fragment.ring.length - 1];\n\n    // If this fragment is closed, add it as a standalone ring.\n    if (start[0] === end[0] && start[1] === end[1]) {\n      fragment.polygon.push(fragment.ring);\n      fragments[i] = null;\n      continue;\n    }\n\n    fragment.index = i;\n    fragmentByStart[start] = fragmentByEnd[end] = fragment;\n  }\n\n  // For each open fragment…\n  for (i = 0; i < n; ++i) {\n    fragment = fragments[i];\n    if (fragment) {\n      start = fragment.ring[0];\n      end = fragment.ring[fragment.ring.length - 1];\n      startFragment = fragmentByEnd[start];\n      endFragment = fragmentByStart[end];\n\n      delete fragmentByStart[start];\n      delete fragmentByEnd[end];\n\n      // If this fragment is closed, add it as a standalone ring.\n      if (start[0] === end[0] && start[1] === end[1]) {\n        fragment.polygon.push(fragment.ring);\n        continue;\n      }\n\n      if (startFragment) {\n        delete fragmentByEnd[start];\n        delete fragmentByStart[startFragment.ring[0]];\n        startFragment.ring.pop(); // drop the shared coordinate\n        fragments[startFragment.index] = null;\n        fragment = {index: -1, polygon: startFragment.polygon, ring: startFragment.ring.concat(fragment.ring)};\n\n        if (startFragment === endFragment) {\n          // Connect both ends to this single fragment to create a ring.\n          fragment.polygon.push(fragment.ring);\n        } else {\n          fragment.index = n++;\n          fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);\n        }\n      } else if (endFragment) {\n        delete fragmentByStart[end];\n        delete fragmentByEnd[endFragment.ring[endFragment.ring.length - 1]];\n        fragment.ring.pop(); // drop the shared coordinate\n        fragment = {index: n++, polygon: endFragment.polygon, ring: fragment.ring.concat(endFragment.ring)};\n        fragments[endFragment.index] = null;\n        fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);\n      } else {\n        fragment.ring.push(fragment.ring[0]); // close ring\n        fragment.polygon.push(fragment.ring);\n      }\n    }\n  }\n}\n\nfunction stitchFeature(input) {\n  var output = {type: \"Feature\", geometry: stitchGeometry(input.geometry)};\n  if (input.id != null) output.id = input.id;\n  if (input.bbox != null) output.bbox = input.bbox;\n  if (input.properties != null) output.properties = input.properties;\n  return output;\n}\n\nfunction stitchGeometry(input) {\n  if (input == null) return input;\n  var output, fragments, i, n;\n  switch (input.type) {\n    case \"GeometryCollection\": output = {type: \"GeometryCollection\", geometries: input.geometries.map(stitchGeometry)}; break;\n    case \"Point\": output = {type: \"Point\", coordinates: clampPoint(input.coordinates)}; break;\n    case \"MultiPoint\": case \"LineString\": output = {type: input.type, coordinates: clampPoints(input.coordinates)}; break;\n    case \"MultiLineString\": output = {type: \"MultiLineString\", coordinates: input.coordinates.map(clampPoints)}; break;\n    case \"Polygon\": {\n      var polygon = [];\n      extractFragments(input.coordinates, polygon, fragments = []);\n      stitchFragments(fragments);\n      output = {type: \"Polygon\", coordinates: polygon};\n      break;\n    }\n    case \"MultiPolygon\": {\n      fragments = [], i = -1, n = input.coordinates.length;\n      var polygons = new Array(n);\n      while (++i < n) extractFragments(input.coordinates[i], polygons[i] = [], fragments);\n      stitchFragments(fragments);\n      output = {type: \"MultiPolygon\", coordinates: polygons.filter(nonempty)};\n      break;\n    }\n    default: return input;\n  }\n  if (input.bbox != null) output.bbox = input.bbox;\n  return output;\n}\n\nexport default function(input) {\n  if (input == null) return input;\n  switch (input.type) {\n    case \"Feature\": return stitchFeature(input);\n    case \"FeatureCollection\": {\n      var output = {type: \"FeatureCollection\", features: input.features.map(stitchFeature)};\n      if (input.bbox != null) output.bbox = input.bbox;\n      return output;\n    }\n    default: return stitchGeometry(input);\n  }\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {atan, quarterPi, sin, tan} from \"./math\";\n\nexport function timesRaw(lambda, phi) {\n  var t = tan(phi / 2),\n      s = sin(quarterPi * t);\n  return [\n    lambda * (0.74482 - 0.34588 * s * s),\n    1.70711 * t\n  ];\n}\n\ntimesRaw.invert = function(x, y) {\n  var t = y / 1.70711,\n      s = sin(quarterPi * t);\n  return [\n    x / (0.74482 - 0.34588 * s * s),\n    2 * atan(t)\n  ];\n};\n\nexport default function() {\n  return projection(timesRaw)\n      .scale(146.153);\n}\n","import {geoInterpolate as interpolate, geoProjection as projection, geoRotation as rotation} from \"d3-geo\";\nimport {asin, degrees, pi, sin, radians} from \"./math\";\n\n// Compute the origin as the midpoint of the two reference points.\n// Rotate one of the reference points by the origin.\n// Apply the spherical law of sines to compute gamma rotation.\nexport default function(raw, p0, p1) {\n  var i = interpolate(p0, p1),\n      o = i(0.5),\n      a = rotation([-o[0], -o[1]])(p0),\n      b = i.distance / 2,\n      y = -asin(sin(a[1] * radians) / sin(b)),\n      R = [-o[0], -o[1], -(a[0] > 0 ? pi - y : y) * degrees],\n      p = projection(raw(b)).rotate(R),\n      r = rotation(R),\n      center = p.center;\n\n  delete p.rotate;\n\n  p.center = function(_) {\n    return arguments.length ? center(r(_)) : r.invert(center());\n  };\n\n  return p\n      .clipAngle(90);\n}\n","import {geoGnomonicRaw as gnomonicRaw} from \"d3-geo\";\nimport {cos} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\nexport function twoPointAzimuthalRaw(d) {\n  var cosd = cos(d);\n\n  function forward(lambda, phi) {\n    var coordinates = gnomonicRaw(lambda, phi);\n    coordinates[0] *= cosd;\n    return coordinates;\n  }\n\n  forward.invert = function(x, y) {\n    return gnomonicRaw.invert(x / cosd, y);\n  };\n\n  return forward;\n}\n\nexport function twoPointAzimuthalUsa() {\n  return twoPointAzimuthal([-158, 21.5], [-77, 39])\n      .clipAngle(60)\n      .scale(400);\n}\n\nexport default function twoPointAzimuthal(p0, p1) {\n  return twoPoint(twoPointAzimuthalRaw, p0, p1);\n}\n","import {geoAzimuthalEquidistantRaw as azimuthalEquidistantRaw} from \"d3-geo\";\nimport {acos, atan2, cos, sin, sqrt, tan} from \"./math\";\nimport twoPoint from \"./twoPoint\";\n\n// TODO clip to ellipse\nexport function twoPointEquidistantRaw(z0) {\n  if (!(z0 *= 2)) return azimuthalEquidistantRaw;\n  var lambdaa = -z0 / 2,\n      lambdab = -lambdaa,\n      z02 = z0 * z0,\n      tanLambda0 = tan(lambdab),\n      S = 0.5 / sin(lambdab);\n\n  function forward(lambda, phi) {\n    var za = acos(cos(phi) * cos(lambda - lambdaa)),\n        zb = acos(cos(phi) * cos(lambda - lambdab)),\n        ys = phi < 0 ? -1 : 1;\n    za *= za, zb *= zb;\n    return [\n      (za - zb) / (2 * z0),\n      ys * sqrt(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var y2 = y * y,\n        cosza = cos(sqrt(y2 + (t = x + lambdaa) * t)),\n        coszb = cos(sqrt(y2 + (t = x + lambdab) * t)),\n        t,\n        d;\n    return [\n      atan2(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),\n      (y < 0 ? -1 : 1) * acos(sqrt(t * t + d * d) * S)\n    ];\n  };\n\n  return forward;\n}\n\nexport function twoPointEquidistantUsa() {\n  return twoPointEquidistant([-158, 21.5], [-77, 39])\n      .clipAngle(130)\n      .scale(122.571);\n}\n\nexport default function twoPointEquidistant(p0, p1) {\n  return twoPoint(twoPointEquidistantRaw, p0, p1);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, acos, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrintenRaw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      G = cosTheta / (sinTheta + cosTheta - 1),\n      P = G * (2 / sinTheta - 1),\n      P2 = P * P,\n      P2_A2 = P2 + A2,\n      G_P2 = G - P2,\n      Q = A2 + G;\n  return [\n    sign(lambda) * pi * (A * G_P2 + sqrt(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2,\n    sign(phi) * pi * (P * Q - A * sqrt((A2 + 1) * P2_A2 - Q * Q)) / P2_A2\n  ];\n}\n\nvanDerGrintenRaw.invert = function(x, y) {\n  if (abs(y) < epsilon) return [x, 0];\n  if (abs(x) < epsilon) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x2 = (x /= pi) * x,\n      y2 = (y /= pi) * y,\n      x2_y2 = x2 + y2,\n      z = x2_y2 * x2_y2,\n      c1 = -abs(y) * (1 + x2_y2),\n      c2 = c1 - 2 * y2 + x2,\n      c3 = -2 * c1 + 1 + 2 * y2 + z,\n      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,\n      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,\n      m1 = 2 * sqrt(-a1 / 3),\n      theta1 = acos(3 * d / (a1 * m1)) / 3;\n  return [\n    pi * (x2_y2 - 1 + sqrt(1 + 2 * (x2 - y2) + z)) / (2 * x),\n    sign(y) * pi * (-m1 * cos(theta1 + pi / 3) - c2 / (3 * c3))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrintenRaw)\n      .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, atan2, cos, halfPi, epsilon, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten2Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = abs(phi / halfPi),\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, sign(phi) * pi * tan(theta / 2)];\n  var cosTheta = cos(theta),\n      A = abs(pi / lambda - lambda / pi) / 2,\n      A2 = A * A,\n      x1 = cosTheta * (sqrt(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);\n  return [\n    sign(lambda) * pi * x1,\n    sign(phi) * pi * sqrt(1 - x1 * (2 * A + x1))\n  ];\n}\n\nvanDerGrinten2Raw.invert = function(x, y) {\n  if (!x) return [0, halfPi * sin(2 * atan(y / pi))];\n  var x1 = abs(x / pi),\n      A = (1 - x1 * x1 - (y /= pi) * y) / (2 * x1),\n      A2 = A * A,\n      B = sqrt(A2 + 1);\n  return [\n    sign(x) * pi * (B - A),\n    sign(y) * halfPi * sin(2 * atan2(sqrt((1 - 2 * A * x1) * (A + B) - x1), sqrt(B + A + x1)))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten2Raw)\n      .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, asin, atan, cos, epsilon, halfPi, pi, sign, sin, sqrt, tan} from \"./math\";\n\nexport function vanDerGrinten3Raw(lambda, phi) {\n  if (abs(phi) < epsilon) return [lambda, 0];\n  var sinTheta = phi / halfPi,\n      theta = asin(sinTheta);\n  if (abs(lambda) < epsilon || abs(abs(phi) - halfPi) < epsilon) return [0, pi * tan(theta / 2)];\n  var A = (pi / lambda - lambda / pi) / 2,\n      y1 = sinTheta / (1 + cos(theta));\n  return [\n    pi * (sign(lambda) * sqrt(A * A + 1 - y1 * y1) - A),\n    pi * y1\n  ];\n}\n\nvanDerGrinten3Raw.invert = function(x, y) {\n  if (!y) return [x, 0];\n  var y1 = y / pi,\n      A = (pi * pi * (1 - y1 * y1) - x * x) / (2 * pi * x);\n  return [\n    x ? pi * (sign(x) * sqrt(A * A + 1) - A) : 0,\n    halfPi * sin(2 * atan(y1))\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten3Raw)\n        .scale(79.4183);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {abs, epsilon, halfPi, pi, sign, sqrt} from \"./math\";\n\nexport function vanDerGrinten4Raw(lambda, phi) {\n  if (!phi) return [lambda, 0];\n  var phi0 = abs(phi);\n  if (!lambda || phi0 === halfPi) return [0, phi];\n  var B = phi0 / halfPi,\n      B2 = B * B,\n      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n      C2 = C * C,\n      BC = B * C,\n      B_C2 = B2 + C2 + 2 * BC,\n      B_3C = B + 3 * C,\n      lambda0 = lambda / halfPi,\n      lambda1 = lambda0 + 1 / lambda0,\n      D = sign(abs(lambda) - halfPi) * sqrt(lambda1 * lambda1 - 4),\n      D2 = D * D,\n      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),\n      x1 = (D * (B_C2 + C2 - 1) + 2 * sqrt(F)) / (4 * B_C2 + D2);\n  return [\n    sign(lambda) * halfPi * x1,\n    sign(phi) * halfPi * sqrt(1 + D * abs(x1) - x1 * x1)\n  ];\n}\n\nvanDerGrinten4Raw.invert = function(x, y) {\n  var delta;\n  if (!x || !y) return [x, y];\n  y /= pi;\n  var x1 = sign(x) * x / halfPi,\n      D = (x1 * x1 - 1 + 4 * y * y) / abs(x1),\n      D2 = D * D,\n      B = 2 * y,\n      i = 50;\n  do {\n    var B2 = B * B,\n        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),\n        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),\n        C2 = C * C,\n        BC = B * C,\n        B_C = B + C,\n        B_C2 = B_C * B_C,\n        B_3C = B + 3 * C,\n        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),\n        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),\n        sqrtF = sqrt(F),\n        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),\n        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);\n    B -= delta = f / f_;\n  } while (delta > epsilon && --i > 0);\n  return [\n    sign(x) * (sqrt(D * D + 4) + D) * pi / 4,\n    halfPi * B\n  ];\n};\n\nexport default function() {\n  return projection(vanDerGrinten4Raw)\n      .scale(127.16);\n}\n","import {geoProjectionMutator as projectionMutator} from \"d3-geo\";\nimport {acos, asin, atan2, cos, degrees, epsilon, halfPi, max, min, pi, radians, sin, sqrt, tan} from \"./math\";\n\nfunction wagnerFormula(cx, cy, m1, m2, n) {\n  function forward(lambda, phi) {\n    var s = m1 * sin(m2 * phi),\n        c0 = sqrt(1 - s * s),\n        c1 = sqrt(2 / (1 + c0 * cos(lambda *= n)));\n    return [\n      cx * c0 * c1 * sin(lambda),\n      cy * s * c1\n    ];\n  }\n\n  forward.invert = function(x, y) {\n    var t1 = x / cx,\n        t2 = y / cy,\n        p = sqrt(t1 * t1 + t2 * t2),\n        c = 2 * asin(p / 2);\n    return [\n      atan2(x * tan(c), cx * p) / n,\n      p && asin(y * sin(c) / (cy * m1 * p)) / m2\n    ];\n  };\n\n  return forward;\n}\n\nexport function wagnerRaw(poleline, parallels, inflation, ratio) {\n  // 60 is always used as reference parallel\n  var phi1 = pi / 3;\n\n  // sanitizing the input values\n  // poleline and parallels may approximate but never equal 0\n  poleline = max(poleline, epsilon);\n  parallels = max(parallels, epsilon);\n  // poleline must be <= 90; parallels may approximate but never equal 180\n  poleline = min(poleline, halfPi);\n  parallels = min(parallels, pi - epsilon);\n  // 0 <= inflation <= 99.999\n  inflation = max(inflation, 0);\n  inflation = min(inflation, 100 - epsilon);\n  // ratio > 0.\n  // sensible values, i.e. something that renders a map which still can be\n  // recognized as world map, are e.g. 20 <= ratio <= 1000.\n  ratio = max(ratio, epsilon);\n\n  // convert values from boehm notation\n  // areal inflation e.g. from 0 to 1 or 20 to 1.2:\n  var vinflation = inflation/100 + 1;\n  // axial ratio e.g. from 200 to 2:\n  var vratio  = ratio / 100;\n  // the other ones are a bit more complicated...\n  var m2 = acos(vinflation * cos(phi1)) / phi1,\n      m1 = sin(poleline) / sin(m2 * halfPi),\n      n = parallels / pi,\n      k = sqrt(vratio * sin(poleline / 2) / sin(parallels / 2)),\n      cx = k / sqrt(n * m1 * m2),\n      cy = 1 / (k * sqrt(n * m1 * m2));\n\n  return wagnerFormula(cx, cy, m1, m2, n);\n}\n\nexport default function() {\n  // default values generate wagner8\n  var poleline = 65 * radians,\n      parallels = 60 * radians,\n      inflation = 20,\n      ratio = 200,\n      mutate = projectionMutator(wagnerRaw),\n      projection = mutate(poleline, parallels, inflation, ratio);\n\n  projection.poleline = function(_) {\n    return arguments.length ? mutate(poleline = +_ * radians, parallels, inflation, ratio) : poleline * degrees;\n  };\n\n  projection.parallels = function(_) {\n    return arguments.length ? mutate(poleline, parallels = +_ * radians, inflation, ratio) : parallels * degrees;\n  };\n  projection.inflation = function(_) {\n    return arguments.length ? mutate(poleline, parallels, inflation = +_, ratio) : inflation;\n  };\n  projection.ratio = function(_) {\n    return arguments.length ? mutate(poleline, parallels, inflation, ratio = +_) : ratio;\n  };\n\n  return projection\n    .scale(163.775);\n}","import {geoProjection as projection} from \"d3-geo\";\nimport {sqrt, pi} from \"./math\";\nimport {mollweideBromleyRaw} from \"./mollweide\";\n\nvar A = 4 * pi + 3 * sqrt(3),\n    B = 2 * sqrt(2 * pi * sqrt(3) / A);\n\nexport var wagner4Raw = mollweideBromleyRaw(B * sqrt(3) / pi, B, A / 6);\n\nexport default function() {\n  return projection(wagner4Raw)\n      .scale(176.84);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {pi, sqrt} from \"./math\";\n\nexport function wagner6Raw(lambda, phi) {\n  return [lambda * sqrt(1 - 3 * phi * phi / (pi * pi)), phi];\n}\n\nwagner6Raw.invert = function(x, y) {\n  return [x / sqrt(1 - 3 * y * y / (pi * pi)), y];\n};\n\nexport default function() {\n  return projection(wagner6Raw)\n      .scale(152.63);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt, tan} from \"./math\";\n\nexport function wagner7Raw(lambda, phi) {\n  var s = 0.90631 * sin(phi),\n      c0 = sqrt(1 - s * s),\n      c1 = sqrt(2 / (1 + c0 * cos(lambda /= 3)));\n  return [\n    2.66723 * c0 * c1 * sin(lambda),\n    1.24104 * s * c1\n  ];\n}\n\nwagner7Raw.invert = function(x, y) {\n  var t1 = x / 2.66723,\n      t2 = y / 1.24104,\n      p = sqrt(t1 * t1 + t2 * t2),\n      c = 2 * asin(p / 2);\n  return [\n    3 * atan2(x * tan(c), 2.66723 * p),\n    p && asin(y * sin(c) / (1.24104 * 0.90631 * p))\n  ];\n};\n\nexport default function() {\n  return projection(wagner7Raw)\n      .scale(172.632);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function wiechelRaw(lambda, phi) {\n  var cosPhi = cos(phi),\n      sinPhi = cos(lambda) * cosPhi,\n      sin1_Phi = 1 - sinPhi,\n      cosLambda = cos(lambda = atan2(sin(lambda) * cosPhi, -sin(phi))),\n      sinLambda = sin(lambda);\n  cosPhi = sqrt(1 - sinPhi * sinPhi);\n  return [\n    sinLambda * cosPhi - cosLambda * sin1_Phi,\n    -cosLambda * cosPhi - sinLambda * sin1_Phi\n  ];\n}\n\nwiechelRaw.invert = function(x, y) {\n  var w = (x * x + y * y) / -2,\n      k = sqrt(-w * (2 + w)),\n      b = y * w + x * k,\n      a = x * w - y * k,\n      D = sqrt(a * a + b * b);\n  return [\n    atan2(k * b, D * (1 + w)),\n    D ? -asin(k * a / D) : 0\n  ];\n};\n\nexport default function() {\n  return projection(wiechelRaw)\n      .rotate([0, -90, 45])\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {geoProjection as projection} from \"d3-geo\";\nimport {aitoffRaw} from \"./aitoff\";\nimport {halfPi, epsilon, sin, cos, sqrt, abs, acos} from \"./math\";\n\nexport function winkel3Raw(lambda, phi) {\n  var coordinates = aitoffRaw(lambda, phi);\n  return [\n    (coordinates[0] + lambda / halfPi) / 2,\n    (coordinates[1] + phi) / 2\n  ];\n}\n\nwinkel3Raw.invert = function(x, y) {\n  var lambda = x, phi = y, i = 25;\n  do {\n    var cosphi = cos(phi),\n        sinphi = sin(phi),\n        sin_2phi = sin(2 * phi),\n        sin2phi = sinphi * sinphi,\n        cos2phi = cosphi * cosphi,\n        sinlambda = sin(lambda),\n        coslambda_2 = cos(lambda / 2),\n        sinlambda_2 = sin(lambda / 2),\n        sin2lambda_2 = sinlambda_2 * sinlambda_2,\n        C = 1 - cos2phi * coslambda_2 * coslambda_2,\n        E = C ? acos(cosphi * coslambda_2) * sqrt(F = 1 / C) : F = 0,\n        F,\n        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / halfPi) - x,\n        fy = 0.5 * (E * sinphi + phi) - y,\n        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / halfPi,\n        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),\n        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),\n        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,\n        denominator = dxdphi * dydlambda - dydphi * dxdlambda,\n        dlambda = (fy * dxdphi - fx * dydphi) / denominator,\n        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;\n    lambda -= dlambda, phi -= dphi;\n  } while ((abs(dlambda) > epsilon || abs(dphi) > epsilon) && --i > 0);\n  return [lambda, phi];\n};\n\nexport default function() {\n  return projection(winkel3Raw)\n      .scale(158.837);\n}\n","export {default as geoAiry, airyRaw as geoAiryRaw} from \"./airy\";\nexport {default as geoAitoff, aitoffRaw as geoAitoffRaw} from \"./aitoff\";\nexport {default as geoArmadillo, armadilloRaw as geoArmadilloRaw} from \"./armadillo\";\nexport {default as geoAugust, augustRaw as geoAugustRaw} from \"./august\";\nexport {default as geoBaker, bakerRaw as geoBakerRaw} from \"./baker\";\nexport {default as geoBerghaus, berghausRaw as geoBerghausRaw} from \"./berghaus\";\nexport {default as geoBertin1953, bertin1953Raw as geoBertin1953Raw} from \"./bertin\";\nexport {default as geoBoggs, boggsRaw as geoBoggsRaw} from \"./boggs\";\nexport {default as geoBonne, bonneRaw as geoBonneRaw} from \"./bonne\";\nexport {default as geoBottomley, bottomleyRaw as geoBottomleyRaw} from \"./bottomley\";\nexport {default as geoBromley, bromleyRaw as geoBromleyRaw} from \"./bromley\";\nexport {default as geoChamberlin, chamberlinRaw as geoChamberlinRaw, chamberlinAfrica as geoChamberlinAfrica} from \"./chamberlin\";\nexport {default as geoCollignon, collignonRaw as geoCollignonRaw} from \"./collignon\";\nexport {default as geoCraig, craigRaw as geoCraigRaw} from \"./craig\";\nexport {default as geoCraster, crasterRaw as geoCrasterRaw} from \"./craster\";\nexport {default as geoCylindricalEqualArea, cylindricalEqualAreaRaw as geoCylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\nexport {default as geoCylindricalStereographic, cylindricalStereographicRaw as geoCylindricalStereographicRaw} from \"./cylindricalStereographic\";\nexport {default as geoEckert1, eckert1Raw as geoEckert1Raw} from \"./eckert1.js\";\nexport {default as geoEckert2, eckert2Raw as geoEckert2Raw} from \"./eckert2.js\";\nexport {default as geoEckert3, eckert3Raw as geoEckert3Raw} from \"./eckert3.js\";\nexport {default as geoEckert4, eckert4Raw as geoEckert4Raw} from \"./eckert4.js\";\nexport {default as geoEckert5, eckert5Raw as geoEckert5Raw} from \"./eckert5.js\";\nexport {default as geoEckert6, eckert6Raw as geoEckert6Raw} from \"./eckert6.js\";\nexport {default as geoEisenlohr, eisenlohrRaw as geoEisenlohrRaw} from \"./eisenlohr.js\";\nexport {default as geoFahey, faheyRaw as geoFaheyRaw} from \"./fahey.js\";\nexport {default as geoFoucaut, foucautRaw as geoFoucautRaw} from \"./foucaut.js\";\nexport {default as geoFoucautSinusoidal, foucautSinusoidalRaw as geoFoucautSinusoidalRaw} from \"./foucautSinusoidal.js\";\nexport {default as geoGilbert} from \"./gilbert.js\";\nexport {default as geoGingery, gingeryRaw as geoGingeryRaw} from \"./gingery.js\";\nexport {default as geoGinzburg4, ginzburg4Raw as geoGinzburg4Raw} from \"./ginzburg4.js\";\nexport {default as geoGinzburg5, ginzburg5Raw as geoGinzburg5Raw} from \"./ginzburg5.js\";\nexport {default as geoGinzburg6, ginzburg6Raw as geoGinzburg6Raw} from \"./ginzburg6.js\";\nexport {default as geoGinzburg8, ginzburg8Raw as geoGinzburg8Raw} from \"./ginzburg8.js\";\nexport {default as geoGinzburg9, ginzburg9Raw as geoGinzburg9Raw} from \"./ginzburg9.js\";\nexport {default as geoGringorten, gringortenRaw as geoGringortenRaw} from \"./gringorten.js\";\nexport {default as geoGuyou, guyouRaw as geoGuyouRaw} from \"./guyou.js\";\nexport {default as geoHammer, hammerRaw as geoHammerRaw} from \"./hammer.js\";\nexport {default as geoHammerRetroazimuthal, hammerRetroazimuthalRaw as geoHammerRetroazimuthalRaw} from \"./hammerRetroazimuthal.js\";\nexport {default as geoHealpix, healpixRaw as geoHealpixRaw} from \"./healpix.js\";\nexport {default as geoHill, hillRaw as geoHillRaw} from \"./hill.js\";\nexport {default as geoHomolosine, homolosineRaw as geoHomolosineRaw} from \"./homolosine.js\";\nexport {default as geoHufnagel, hufnagelRaw as geoHufnagelRaw} from \"./hufnagel.js\";\nexport {default as geoHyperelliptical, hyperellipticalRaw as geoHyperellipticalRaw} from \"./hyperelliptical\";\nexport {default as geoInterrupt} from \"./interrupted/index\";\nexport {default as geoInterruptedBoggs} from \"./interrupted/boggs\";\nexport {default as geoInterruptedHomolosine} from \"./interrupted/homolosine\";\nexport {default as geoInterruptedMollweide} from \"./interrupted/mollweide\";\nexport {default as geoInterruptedMollweideHemispheres} from \"./interrupted/mollweideHemispheres\";\nexport {default as geoInterruptedSinuMollweide} from \"./interrupted/sinuMollweide\";\nexport {default as geoInterruptedSinusoidal} from \"./interrupted/sinusoidal\";\nexport {default as geoKavrayskiy7, kavrayskiy7Raw as geoKavrayskiy7Raw} from \"./kavrayskiy7.js\";\nexport {default as geoLagrange, lagrangeRaw as geoLagrangeRaw} from \"./lagrange.js\";\nexport {default as geoLarrivee, larriveeRaw as geoLarriveeRaw} from \"./larrivee\";\nexport {default as geoLaskowski, laskowskiRaw as geoLaskowskiRaw} from \"./laskowski\";\nexport {default as geoLittrow, littrowRaw as geoLittrowRaw} from \"./littrow.js\";\nexport {default as geoLoximuthal, loximuthalRaw as geoLoximuthalRaw} from \"./loximuthal.js\";\nexport {default as geoMiller, millerRaw as geoMillerRaw} from \"./miller\";\nexport {default as geoModifiedStereographic, modifiedStereographicRaw as geoModifiedStereographicRaw, modifiedStereographicAlaska as geoModifiedStereographicAlaska, modifiedStereographicGs48 as geoModifiedStereographicGs48, modifiedStereographicGs50 as geoModifiedStereographicGs50, modifiedStereographicMiller as geoModifiedStereographicMiller, modifiedStereographicLee as geoModifiedStereographicLee} from \"./modifiedStereographic\";\nexport {default as geoMollweide, mollweideRaw as geoMollweideRaw} from \"./mollweide\";\nexport {default as geoMtFlatPolarParabolic, mtFlatPolarParabolicRaw as geoMtFlatPolarParabolicRaw} from \"./mtFlatPolarParabolic\";\nexport {default as geoMtFlatPolarQuartic, mtFlatPolarQuarticRaw as geoMtFlatPolarQuarticRaw} from \"./mtFlatPolarQuartic\";\nexport {default as geoMtFlatPolarSinusoidal, mtFlatPolarSinusoidalRaw as geoMtFlatPolarSinusoidalRaw} from \"./mtFlatPolarSinusoidal\";\nexport {geoNaturalEarth1 as geoNaturalEarth, geoNaturalEarth1Raw as geoNaturalEarthRaw} from \"d3-geo\"; // DEPRECATED moved to d3-geo\nexport {default as geoNaturalEarth2, naturalEarth2Raw as geoNaturalEarth2Raw} from \"./naturalEarth2\";\nexport {default as geoNellHammer, nellHammerRaw as geoNellHammerRaw} from \"./nellHammer\";\nexport {default as geoInterruptedQuarticAuthalic} from \"./interrupted/quarticAuthalic\";\nexport {default as geoNicolosi, nicolosiRaw as geoNicolosiRaw} from \"./nicolosi\";\nexport {default as geoPatterson, pattersonRaw as geoPattersonRaw} from \"./patterson\";\nexport {default as geoPolyconic, polyconicRaw as geoPolyconicRaw} from \"./polyconic\";\nexport {default as geoPolyhedral} from \"./polyhedral/index.js\";\nexport {default as geoPolyhedralButterfly} from \"./polyhedral/butterfly.js\";\nexport {default as geoPolyhedralCollignon} from \"./polyhedral/collignon.js\";\nexport {default as geoPolyhedralWaterman} from \"./polyhedral/waterman.js\";\nexport {default as geoProject} from \"./project/index\";\nexport {default as geoGringortenQuincuncial} from \"./quincuncial/gringorten.js\";\nexport {default as geoPeirceQuincuncial} from \"./quincuncial/peirce.js\";\nexport {default as geoPierceQuincuncial} from \"./quincuncial/peirce.js\"; // DEPRECATED misspelling\nexport {default as geoQuantize} from \"./quantize\";\nexport {default as geoQuincuncial} from \"./quincuncial/index.js\";\nexport {default as geoRectangularPolyconic, rectangularPolyconicRaw as geoRectangularPolyconicRaw} from \"./rectangularPolyconic\";\nexport {default as geoRobinson, robinsonRaw as geoRobinsonRaw} from \"./robinson\";\nexport {default as geoSatellite, satelliteRaw as geoSatelliteRaw} from \"./satellite\";\nexport {default as geoSinuMollweide, sinuMollweideRaw as geoSinuMollweideRaw} from \"./sinuMollweide\";\nexport {default as geoSinusoidal, sinusoidalRaw as geoSinusoidalRaw} from \"./sinusoidal\";\nexport {default as geoStitch} from \"./stitch\";\nexport {default as geoTimes, timesRaw as geoTimesRaw} from \"./times\";\nexport {default as geoTwoPointAzimuthal, twoPointAzimuthalRaw as geoTwoPointAzimuthalRaw, twoPointAzimuthalUsa as geoTwoPointAzimuthalUsa} from \"./twoPointAzimuthal\";\nexport {default as geoTwoPointEquidistant, twoPointEquidistantRaw as geoTwoPointEquidistantRaw, twoPointEquidistantUsa as geoTwoPointEquidistantUsa} from \"./twoPointEquidistant\";\nexport {default as geoVanDerGrinten, vanDerGrintenRaw as geoVanDerGrintenRaw} from \"./vanDerGrinten\";\nexport {default as geoVanDerGrinten2, vanDerGrinten2Raw as geoVanDerGrinten2Raw} from \"./vanDerGrinten2\";\nexport {default as geoVanDerGrinten3, vanDerGrinten3Raw as geoVanDerGrinten3Raw} from \"./vanDerGrinten3\";\nexport {default as geoVanDerGrinten4, vanDerGrinten4Raw as geoVanDerGrinten4Raw} from \"./vanDerGrinten4\";\nexport {default as geoWagner, wagnerRaw as geoWagnerRaw} from \"./wagner.js\";\nexport {default as geoWagner4, wagner4Raw as geoWagner4Raw} from \"./wagner4.js\";\nexport {default as geoWagner6, wagner6Raw as geoWagner6Raw} from \"./wagner6.js\";\nexport {default as geoWagner7, wagner7Raw as geoWagner7Raw} from \"./wagner7.js\";\nexport {default as geoWiechel, wiechelRaw as geoWiechelRaw} from \"./wiechel.js\";\nexport {default as geoWinkel3, winkel3Raw as geoWinkel3Raw} from \"./winkel3\";\n","import { geoTimes } from 'd3-geo-projection';\n\nexport const makeProjection = (width, height) => geoTimes()\n  .scale(700)\n  .translate([width / 2, height / 2])\n  .precision(.1);\n","import { nest } from 'd3';\n\nclass CountryTotalsDataProvider {\n  constructor({dtp1Data, dtp3Data}) {\n\n    // extracts the list of years in the dataset\n    const years = new Set();\n    dtp1Data.columns.forEach(k => {\n      if (!isNaN(+k)) {\n        years.add(k);\n      }\n    });\n\n    const numericColumnList = dtp1Data.columns.filter(k => k !== 'country');\n\n    this.yearList = Array.from(years);\n    this.vaccineList = ['dtp1', 'dtp3'];\n\n    this.rows = [\n      // Adds vaccine name to every row\n      ...dtp1Data.map(d => ({\n          ...d,\n          vaccine: 'dtp1'\n      })),\n      ...dtp3Data.map(d => ({\n          ...d,\n          vaccine: 'dtp3'\n      }))\n      // Converts all numeric columns to Numbers\n    ].map(d => ({\n      ...d,\n      ...numericColumnList.reduce((acc, k) => {\n        acc[k] = +d[k];\n        return acc;\n      }, {})\n    })).filter(d => d.country !== 'Grand Total');\n  }\n  getRows() {\n    return this.rows;\n  }\n  getYears() { \n    return this.yearList;\n  }\n}\n\nexport default CountryTotalsDataProvider;\n","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self ||\n            typeof global == 'object' && global.global === global && global ||\n            this ||\n            {};\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create;\n\n  // Naked function reference for surrogate-prototype-swapping.\n  var Ctor = function(){};\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.9.1';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var optimizeCb = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      // The 2-argument case is omitted because we’re not using it.\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee;\n\n  // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n  var cb = function(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  };\n\n  // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n  _.iteratee = builtinIteratee = function(value, context) {\n    return cb(value, context, Infinity);\n  };\n\n  // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n  var restArguments = function(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function() {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n      switch (startIndex) {\n        case 0: return func.call(this, rest);\n        case 1: return func.call(this, arguments[0], rest);\n        case 2: return func.call(this, arguments[0], arguments[1], rest);\n      }\n      var args = Array(startIndex + 1);\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  };\n\n  // An internal function for creating a new object that inherits from another.\n  var baseCreate = function(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor;\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function(key) {\n    return function(obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  }\n\n  var deepGet = function(obj, path) {\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n    return length ? obj : void 0;\n  };\n\n  // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n  var isArrayLike = function(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Create a reducing function iterating left or right.\n  var createReduce = function(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n      return memo;\n    };\n\n    return function(obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  };\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = createReduce(1);\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = createReduce(-1);\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = restArguments(function(obj, path, args) {\n    var contextPath, func;\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n    return _.map(obj, function(context) {\n      var method = func;\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n        if (context == null) return void 0;\n        method = context[path];\n      }\n      return method == null ? method : method.apply(context, args);\n    });\n  });\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(v, index, list) {\n        computed = iteratee(v, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection.\n  _.shuffle = function(obj) {\n    return _.sample(obj, Infinity);\n  };\n\n  // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n    return sample.slice(0, n);\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function(value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior, partition) {\n    return function(obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g;\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = group(function(result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true);\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n  _.last = function(array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, Boolean);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0, len = value.length;\n          while (j < len) output[idx++] = value[j++];\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = restArguments(function(array, otherArrays) {\n    return _.difference(array, otherArrays);\n  });\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = restArguments(function(arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  });\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = restArguments(function(array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  });\n\n  // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n  _.unzip = function(array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n    return result;\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = restArguments(_.unzip);\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n  _.object = function(list, values) {\n    var result = {};\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Generator function to create the findIndex and findLastIndex functions.\n  var createPredicateIndexFinder = function(dir) {\n    return function(array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n      return -1;\n    };\n  };\n\n  // Returns the first index on an array-like that passes a predicate test.\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1);\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = getLength(array);\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Generator function to create the indexOf and lastIndexOf functions.\n  var createIndexFinder = function(dir, predicateFind, sortedIndex) {\n    return function(array, item, idx) {\n      var i = 0, length = getLength(array);\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n      return -1;\n    };\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n  _.chunk = function(array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0, length = array.length;\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n    return result;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  };\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = restArguments(function(func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function(callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  });\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n  _.partial = restArguments(function(func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n    var bound = function() {\n      var position = 0, length = boundArgs.length;\n      var args = Array(length);\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return executeBound(func, bound, this, this, args);\n    };\n    return bound;\n  });\n\n  _.partial.placeholder = _;\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = restArguments(function(obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  });\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = restArguments(function(func, wait, args) {\n    return setTimeout(function() {\n      return func.apply(null, args);\n    }, wait);\n  });\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = _.partial(_.delay, _, 1);\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n\n    throttled.cancel = function() {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, result;\n\n    var later = function(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function(args) {\n      if (timeout) clearTimeout(timeout);\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function() {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed on and after the Nth call.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed up to (but not including) the Nth call.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n      if (times <= 1) func = null;\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  _.restArguments = restArguments;\n\n  // Object Functions\n  // ----------------\n\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',\n    'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto;\n\n    // Constructor is a special case.\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  };\n\n  // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (has(obj, key)) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve all the property names of an object.\n  _.allKeys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    // Ahem, IE < 9.\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n  _.mapObject = function(obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // An internal function for creating assigner functions.\n  var createAssigner = function(keysFunc, defaults) {\n    return function(obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n      return obj;\n    };\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = createAssigner(_.allKeys);\n\n  // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n  _.extendOwn = _.assign = createAssigner(_.keys);\n\n  // Returns the first key on an object that passes a predicate test.\n  _.findKey = function(obj, predicate, context) {\n    predicate = cb(predicate, context);\n    var keys = _.keys(obj), key;\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  };\n\n  // Internal pick helper function to determine if `obj` has key `key`.\n  var keyInObj = function(value, key, obj) {\n    return key in obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = restArguments(function(obj, keys) {\n    var result = {}, iteratee = keys[0];\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n    return result;\n  });\n\n  // Return a copy of the object without the blacklisted properties.\n  _.omit = restArguments(function(obj, keys) {\n    var iteratee = keys[0], context;\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  });\n\n  // Fill in a given object with default properties.\n  _.defaults = createAssigner(_.allKeys, true);\n\n  // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n  _.create = function(prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Returns whether an object has a given set of `key:value` pairs.\n  _.isMatch = function(object, attrs) {\n    var keys = _.keys(attrs), length = keys.length;\n    if (object == null) return !length;\n    var obj = Object(object);\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n    return true;\n  };\n\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq, deepEq;\n  eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // `null` or `undefined` only equal to itself (strict comparison).\n    if (a == null || b == null) return false;\n    // `NaN`s are equivalent, but non-reflexive.\n    if (a !== a) return b !== b;\n    // Exhaust primitive checks\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  deepEq = function(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false;\n\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n      var aCtor = a.constructor, bCtor = b.constructor;\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n                               _.isFunction(bCtor) && bCtor instanceof bCtor)\n                          && ('constructor' in a && 'constructor' in b)) {\n        return false;\n      }\n    }\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n\n    // Recursively compare objects and arrays.\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false;\n      // Deep compare the contents, ignoring non-numeric properties.\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      length = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      if (_.keys(b).length !== length) return false;\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return true;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n  var nodelist = root.document && root.document.childNodes;\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`?\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n      obj = obj[key];\n    }\n    return !!length;\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  // Predicate-generating functions. Often useful outside of Underscore.\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n  _.property = function(path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n    return function(obj) {\n      return deepGet(obj, path);\n    };\n  };\n\n  // Generates a function for a given object that returns a given property.\n  _.propertyOf = function(obj) {\n    if (obj == null) {\n      return function(){};\n    }\n    return function(path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n  _.matcher = _.matches = function(attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function(obj) {\n      return _.isMatch(obj, attrs);\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n  // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped.\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n  _.result = function(obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n    return obj;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offset.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    var render;\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var chainResult = function(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n    return _;\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function() {\n    return String(this._wrapped);\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}());\n","'use strict';\n\nvar regions = {};\n\nregions.centralAsia = {\n  name: 'Central Asia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Central_Asia\n    'KZ', // Kazakhstan\n    'KG', // Kyrgyzstan\n    'TJ', // Tajikistan\n    'TM', // Turkmenistan\n    'UZ', // Uzbekistan\n  ]\n}\n\nregions.southernAsia = {\n  name: 'Southern Asia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/South_Asia\n    'AF', // Afghanistan\n    'BD', // Bangladesh\n    'BT', // Bhutan\n    'IO', // British Indian Ocean Territory\n    'IN', // India\n    'IR', // Iran\n    'MV', // Maldives\n    'NP', // Nepal\n    'PK', // Pakistan\n    'LK', // Sri Lanka\n  ]\n}\n\nregions.southeastAsia = {\n  name: 'Southeast Asia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Southeast_Asia\n    'BN', // Brunei\n    'KH', // Cambodia\n    'CX', // Christmas Island\n    'CC', // Cocos (Keeling) Islands\n    'TL', // East Timor\n    'ID', // Indonesia\n    'LA', // Laos\n    'MY', // Malaysia\n    'MM', // Myanmar (Burma)\n    'PH', // Philippines\n    'SG', // Singapore\n    'TH', // Thailand\n    'VN', // Vietnam\n  ]\n}\n\nregions.eastAsia = {\n  name: 'East Asia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/East_Asia\n    'CN', // China\n    'HK', // Hong Kong\n    'JP', // Japan\n    'KP', // North Korea\n    'KR', // South Korea\n    'MO', // Macao\n    'MN', // Mongolia\n    'TW', // Taiwan\n  ]\n}\n\nregions.westernAsia = {\n  name: 'Western Asia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Western_Asia\n    'AM', // Armenia\n    'AZ', // Azerbaijan\n    'BH', // Bahrain\n    'IQ', // Iraq\n    'IL', // Israel\n    'JO', // Jordan\n    'KW', // Kuwait\n    'LB', // Lebanon\n    'OM', // Oman\n    'PS', // Palestinian territories\n    'QA', // Qatar\n    'SA', // Saudi Arabia\n    'SY', // Syria\n    'TR', // Turkey\n    'AE', // United Arab Emirates\n    'YE', // Yemen\n  ]\n}\n\nregions.centralAfrica = {\n  name: 'Central Aftrica',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Central_Africa\n    'AO', // Angola\n    'CM', // Cameroon\n    'CF', // Central African Republic\n    'TD', // Chad\n    'CG', // Republic of the Congo\n    'CD', // Democratic Republic of the Congo\n    'GQ', // Equatorial Guinea\n    'GA', // Gabon\n    'ST', // São Tomé and Príncipe\n  ]\n};\n\nregions.northAfrica = {\n  name: 'North Africa',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/North_Africa\n    'DZ', // Algeria\n    'EG', // Egypt\n    'LY', // Libya\n    'MA', // Morocco\n    'SD', // Sudan\n    'TN', // Tunisia\n    'EH', // Western Sahara\n  ]\n};\n\nregions.southernAfrica = {\n  name: 'Southern Africa',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Southern_Africa\n    'BW', // Botswana\n    'LS', // Lesotho\n    'NA', // Namibia\n    'ZA', // South Africa\n    'SZ', // Swaziland\n  ]\n};\n\nregions.eastAfrica = {\n  name: 'East Africa',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/East_Africa\n    'BI', // Burundi\n    'KM', // Comoros\n    'DJ', // Djibouti\n    'ER', // Eritrea\n    'ET', // Ethiopia\n    'KE', // Kenya\n    'MG', // Madagascar\n    'MW', // Malawi\n    'MU', // Mauritius\n    'YT', // Mayotte (France)\n    'MZ', // Mozambique\n    'RE', // Réunion (France)\n    'RW', // Rwanda\n    'SC', // Seychelles\n    'SO', // Somalia\n    'SS', // South Sudan\n    'TZ', // Tanzania\n    'UG', // Uganda\n    'ZM', // Zambia\n    'ZW', // Zimbabwe\n  ]\n};\n\nregions.westAfrica = {\n  name: 'West Africa',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/West_Africa\n    'BJ', // Benin\n    'BF', // Burkina Faso\n    'CV', // Cabo Verde\n    'CI', // Côte d'Ivoire\n    'GM', // Gambia\n    'GH', // Ghana\n    'GN', // Guinea\n    'GW', // Guinea-Bissau\n    'LR', // Liberia\n    'ML', // Mali\n    'MR', // Mauritania\n    'NE', // Niger\n    'NG', // Nigeria\n    'SH', // Saint Helena, Ascension and Tristan da Cunha (United Kingdom)\n    'SN', // Senegal\n    'SL', // Sierra Leone\n    'TG', // Togo\n  ]\n};\n\nregions.centralAmerica = {\n  name: 'Central America',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Central_America\n    'BZ', // Belize\n    'CR', // Costa Rica\n    'SV', // El Salvador\n    'GT', // Guatemala\n    'HN', // Honduras\n    'NI', // Nicaragua\n    'PA', // Panama\n  ]\n}\n\nregions.northernAmerica = {\n  name: 'Northern America',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Northern_America\n    'BM', // Bermuda\n    'CA', // Canada\n    'GL', // Greenland\n    'MX', // Mexico\n    'PM', // Saint Pierre and Miquelon\n    'US', // United States\n  ]\n}\n\nregions.caribbean = {\n  name: 'Caribbean',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Caribbean\n    'AI', // Anguilla\n    'AG', // Antigua and Barbuda\n    'AW', // Aruba\n    'BS', // Bahamas\n    'BB', // Barbados\n    'BQ', // Bonaire, Sint Eustatius & Saba\n    'VG', // British Virgin Islands\n    'KY', // Cayman Islands\n    'CU', // Cuba\n    'CW', // Curaçao\n    'DM', // Dominica\n    'DO', // Dominican Republic\n    'GD', // Grenada\n    'GP', // Guadeloupe\n    'HT', // Haiti\n    'JM', // Jamaica\n    'MQ', // Martinique\n    'MS', // Montserrat\n    'PR', // Puerto Rico\n    'BL', // Saint Barthélemy\n    'KN', // St. Kitts & Nevis\n    'LC', // Saint Lucia\n    'MF', // Saint Martin\n    'VC', // Saint Vincent and the Grenadines\n    'SX', // Sint Maarten\n    'TT', // Trinidad and Tobago\n    'TC', // Turks & Caicos\n    'VI', // United States Virgin Islands\n  ]\n}\n\nregions.southAmerica = {\n  name: 'South America',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/South_America\n    'AR', // Argentina\n    'BO', // Bolivia\n    'BR', // Brazil\n    'CL', // Chile\n    'CO', // Colombia\n    'EC', // Ecuador\n    'FK', // Falkland Islands\n    'GF', // French Guiana\n    'GY', // Guyana\n    'PY', // Paraguay\n    'PE', // Peru\n    'SR', // Suriname\n    'UY', // Uruguay\n    'VE', // Venezuela\n  ]\n}\n\nregions.antartica = {\n  name: 'Antartica',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Antarctica\n    'AQ', // Antarctica\n    'BV', // Bouvet Island\n    'TF', // French Southern Territories\n    'HM', // Heard Island and McDonald Islands\n    'GS', // South Georgia and the South Sandwich Islands\n  ]\n}\n\nregions.northernEurope = {\n  name: 'Northern Europe',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Northern_Europe\n    'AX', // Åland\n    'DK', // Denmark\n    'EE', // Estonia\n    'FO', // Faroe Islands\n    'FI', // Finland\n    'GG', // Guernsey\n    'IS', // Iceland\n    'IE', // Republic of Ireland\n    'JE', // Jersey (UK)\n    'IM', // Isle of Man\n    'LV', // Latvia\n    'LT', // Lithuania\n    'NO', // Norway\n    'SJ', // Svalbard and Jan Mayen\n    'SE', // Sweden\n    'GB', // United Kingdom\n  ]\n}\n\nregions.southernEurope = {\n  name: 'Southern Europe',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Southern_Europe\n    'AL', // Albania\n    'AD', // Andorra\n    'BA', // Bosnia and Herzegovina\n    'HR', // Croatia\n    'CY', // Cyprus\n    'GI', // Gibraltar\n    'GR', // Greece\n    'IT', // Italy\n    'MK', // Republic of Macedonia\n    'VA', // Vatican City\n    'MT', // Malta\n    'ME', // Montenegro\n    'PT', // Portugal\n    'SM', // San Marino\n    'RS', // Serbia\n    'SI', // Slovenia\n    'ES', // Spain\n  ]\n}\n\nregions.easternEurope = {\n  name: 'Eastern Europe',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Eastern_Europe\n    'BY', // Belarus\n    'BG', // Bulgaria\n    'CZ', // Czech Republic\n    'GE', // Georgia\n    'HU', // Hungary\n    'MD', // Moldova\n    'PL', // Poland\n    'RO', // Romania\n    'RU', // Russia\n    'SK', // Slovakia\n    'UA', // Ukraine\n  ]\n}\n\nregions.westernEurope = {\n  name: 'Western Europe',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Western_Europe\n    'AT', // Austria\n    'BE', // Belgium\n    'FR', // France\n    'DE', // Germany\n    'LI', // Liechtenstein\n    'LU', // Luxembourg\n    'MC', // Monaco\n    'NL', // Netherlands\n    'CH', // Switzerland\n  ],\n};\n \nregions.australia = {\n  name: 'Australia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Oceania\n    'AU', // Australia\n    'NF', // Norfolk Island\n    'NZ', // New Zealand\n  ]\n};\n\nregions.melanesia = {\n  name: 'Melanesia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Oceania\n    'FJ', // Fiji\n    'NC', //  New Caledonia\n    'PG', // Papua New Guinea\n    'SB', // Solomon Islands\n    'VU', // Vanuatu\n  ]\n};    \n\nregions.micronesia = {\n  name: 'Micronesia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Oceania\n    'GU', // Guam\n    'KI', // Kiribati\n    'MH', // Marshall Islands\n    'FM', // Micronesia, Fed. Sts.\n    'NR', // Nauru\n    'MP', // Northern Mariana Islands\n    'PW', // Palau\n    'UM', // United States Minor Outlying Islands\n  ]\n};    \n\nregions.polynesia = {\n  name: 'Polynesia',\n  countries: [\n    // source is http://en.wikipedia.org/wiki/Oceania\n    'AS', // American Samoa\n    'CK', // Cook Islands\n    'PF', // French Polynesia\n    'NU', // Niue\n    'PN', // Pitcairn Islands\n    'WS', // Samoa\n    'TK', // Tokelau\n    'TO', // Tonga\n    'TV', // Tuvalu\n    'WF', // Wallis and Futuna\n  ]\n};\n\nmodule.exports = regions;\n","'use strict';\n\nvar _ = require('underscore');\nvar regions = require('./regions.js');\nvar continents = {};\n\ncontinents.asia = {\n  name: 'Asia',\n  regions: ['centralAsia', 'southernAsia', 'southeastAsia', 'eastAsia', 'westernAsia'],\n  countries: _.flatten([\n    regions.centralAsia.countries,\n    regions.southernAsia.countries,\n    regions.southeastAsia.countries,\n    regions.eastAsia.countries,\n    regions.westernAsia.countries\n  ])\n  .sort()\n};\n\ncontinents.africa = {\n  name: 'Africa',\n  regions: ['centralAfrica', 'northAfrica', 'southernAfrica', 'eastAfrica', 'westAfrica'],\n  countries: _.flatten([\n      regions.centralAfrica.countries,\n      regions.northAfrica.countries,\n      regions.southernAfrica.countries,\n      regions.eastAfrica.countries,\n      regions.westAfrica.countries\n  ])\n  .sort()\n};\n\ncontinents.northAmerica = {\n  name: 'North America',\n  regions: ['centralAmerica', 'northernAmerica', 'caribbean'],\n  countries: _.flatten([\n    regions.centralAmerica.countries,\n    regions.northernAmerica.countries,\n    regions.caribbean.countries\n  ])\n  .sort()\n};\n\ncontinents.southAmerica = {\n  name: 'South America',\n  regions: ['southAmerica'],\n  countries: _.flatten([\n    regions.southAmerica.countries\n  ])\n  .sort()\n}\n\ncontinents.antartica = {\n  name: 'Antartica',\n  regions: ['antartica'],\n  countries: _.flatten([\n    regions.antartica.countries\n  ])\n  .sort()\n}\n\ncontinents.europe = {\n  name: 'Europe',\n  regions: ['northernEurope', 'southernEurope', 'easternEurope', 'westernEurope'],\n  countries: _.flatten([\n    regions.northernEurope.countries,\n    regions.southernEurope.countries,\n    regions.easternEurope.countries,\n    regions.westernEurope.countries\n  ])\n  .sort()\n}\n\ncontinents.oceania = {\n  name: 'Oceania',\n  regions: ['australia', 'melanesia', 'micronesia', 'polynesia'],\n  countries: _.flatten([\n    regions.australia.countries,\n    regions.melanesia.countries,\n    regions.micronesia.countries,\n    regions.polynesia.countries\n  ])\n  .sort()\n};\n\nmodule.exports = continents;\n","module.exports=[{alpha2:\"AC\",alpha3:\"\",countryCallingCodes:[\"+247\"],currencies:[\"USD\"],emoji:\"\",ioc:\"SHP\",languages:[\"eng\"],name:\"Ascension Island\",status:\"reserved\"},{alpha2:\"AD\",alpha3:\"AND\",countryCallingCodes:[\"+376\"],currencies:[\"EUR\"],emoji:\"🇦🇩\",ioc:\"AND\",languages:[\"cat\"],name:\"Andorra\",status:\"assigned\"},{alpha2:\"AE\",alpha3:\"ARE\",countryCallingCodes:[\"+971\"],currencies:[\"AED\"],emoji:\"🇦🇪\",ioc:\"UAE\",languages:[\"ara\"],name:\"United Arab Emirates\",status:\"assigned\"},{alpha2:\"AF\",alpha3:\"AFG\",countryCallingCodes:[\"+93\"],currencies:[\"AFN\"],emoji:\"🇦🇫\",ioc:\"AFG\",languages:[\"pus\"],name:\"Afghanistan\",status:\"assigned\"},{alpha2:\"AG\",alpha3:\"ATG\",countryCallingCodes:[\"+1 268\"],currencies:[\"XCD\"],emoji:\"🇦🇬\",ioc:\"ANT\",languages:[\"eng\"],name:\"Antigua And Barbuda\",status:\"assigned\"},{alpha2:\"AI\",alpha3:\"AIA\",countryCallingCodes:[\"+1 264\"],currencies:[\"XCD\"],emoji:\"🇦🇮\",ioc:\"\",languages:[\"eng\"],name:\"Anguilla\",status:\"assigned\"},{alpha2:\"AI\",alpha3:\"AFI\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"French Afar and Issas\",status:\"deleted\"},{alpha2:\"AL\",alpha3:\"ALB\",countryCallingCodes:[\"+355\"],currencies:[\"ALL\"],emoji:\"🇦🇱\",ioc:\"ALB\",languages:[\"sqi\"],name:\"Albania\",status:\"assigned\"},{alpha2:\"AM\",alpha3:\"ARM\",countryCallingCodes:[\"+374\"],currencies:[\"AMD\"],emoji:\"🇦🇲\",ioc:\"ARM\",languages:[\"hye\",\"rus\"],name:\"Armenia\",status:\"assigned\"},{alpha2:\"AN\",alpha3:\"ANT\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Netherlands Antilles\",status:\"deleted\"},{alpha2:\"AO\",alpha3:\"AGO\",countryCallingCodes:[\"+244\"],currencies:[\"AOA\"],emoji:\"🇦🇴\",ioc:\"ANG\",languages:[\"por\"],name:\"Angola\",status:\"assigned\"},{alpha2:\"AQ\",alpha3:\"ATA\",countryCallingCodes:[\"+672\"],currencies:[],emoji:\"🇦🇶\",ioc:\"\",languages:[],name:\"Antarctica\",status:\"assigned\"},{alpha2:\"AR\",alpha3:\"ARG\",countryCallingCodes:[\"+54\"],currencies:[\"ARS\"],emoji:\"🇦🇷\",ioc:\"ARG\",languages:[\"spa\"],name:\"Argentina\",status:\"assigned\"},{alpha2:\"AS\",alpha3:\"ASM\",countryCallingCodes:[\"+1 684\"],currencies:[\"USD\"],emoji:\"🇦🇸\",ioc:\"ASA\",languages:[\"eng\",\"smo\"],name:\"American Samoa\",status:\"assigned\"},{alpha2:\"AT\",alpha3:\"AUT\",countryCallingCodes:[\"+43\"],currencies:[\"EUR\"],emoji:\"🇦🇹\",ioc:\"AUT\",languages:[\"deu\"],name:\"Austria\",status:\"assigned\"},{alpha2:\"AU\",alpha3:\"AUS\",countryCallingCodes:[\"+61\"],currencies:[\"AUD\"],emoji:\"🇦🇺\",ioc:\"AUS\",languages:[\"eng\"],name:\"Australia\",status:\"assigned\"},{alpha2:\"AW\",alpha3:\"ABW\",countryCallingCodes:[\"+297\"],currencies:[\"AWG\"],emoji:\"🇦🇼\",ioc:\"ARU\",languages:[\"nld\"],name:\"Aruba\",status:\"assigned\"},{alpha2:\"AX\",alpha3:\"ALA\",countryCallingCodes:[\"+358\"],currencies:[\"EUR\"],emoji:\"🇦🇽\",ioc:\"\",languages:[\"swe\"],name:\"Åland Islands\",status:\"assigned\"},{alpha2:\"AZ\",alpha3:\"AZE\",countryCallingCodes:[\"+994\"],currencies:[\"AZN\"],emoji:\"🇦🇿\",ioc:\"AZE\",languages:[\"aze\"],name:\"Azerbaijan\",status:\"assigned\"},{alpha2:\"BA\",alpha3:\"BIH\",countryCallingCodes:[\"+387\"],currencies:[\"BAM\"],emoji:\"🇧🇦\",ioc:\"BIH\",languages:[\"bos\",\"cre\",\"srp\"],name:\"Bosnia & Herzegovina\",status:\"assigned\"},{alpha2:\"BB\",alpha3:\"BRB\",countryCallingCodes:[\"+1 246\"],currencies:[\"BBD\"],emoji:\"🇧🇧\",ioc:\"BAR\",languages:[\"eng\"],name:\"Barbados\",status:\"assigned\"},{alpha2:\"BD\",alpha3:\"BGD\",countryCallingCodes:[\"+880\"],currencies:[\"BDT\"],emoji:\"🇧🇩\",ioc:\"BAN\",languages:[\"ben\"],name:\"Bangladesh\",status:\"assigned\"},{alpha2:\"BE\",alpha3:\"BEL\",countryCallingCodes:[\"+32\"],currencies:[\"EUR\"],emoji:\"🇧🇪\",ioc:\"BEL\",languages:[\"nld\",\"fra\",\"deu\"],name:\"Belgium\",status:\"assigned\"},{alpha2:\"BF\",alpha3:\"BFA\",countryCallingCodes:[\"+226\"],currencies:[\"XOF\"],emoji:\"🇧🇫\",ioc:\"BUR\",languages:[\"fra\"],name:\"Burkina Faso\",status:\"assigned\"},{alpha2:\"BG\",alpha3:\"BGR\",countryCallingCodes:[\"+359\"],currencies:[\"BGN\"],emoji:\"🇧🇬\",ioc:\"BUL\",languages:[\"bul\"],name:\"Bulgaria\",status:\"assigned\"},{alpha2:\"BH\",alpha3:\"BHR\",countryCallingCodes:[\"+973\"],currencies:[\"BHD\"],emoji:\"🇧🇭\",ioc:\"BRN\",languages:[\"ara\"],name:\"Bahrain\",status:\"assigned\"},{alpha2:\"BI\",alpha3:\"BDI\",countryCallingCodes:[\"+257\"],currencies:[\"BIF\"],emoji:\"🇧🇮\",ioc:\"BDI\",languages:[\"fra\"],name:\"Burundi\",status:\"assigned\"},{alpha2:\"BJ\",alpha3:\"BEN\",countryCallingCodes:[\"+229\"],currencies:[\"XOF\"],emoji:\"🇧🇯\",ioc:\"BEN\",languages:[\"fra\"],name:\"Benin\",status:\"assigned\"},{alpha2:\"BL\",alpha3:\"BLM\",countryCallingCodes:[\"+590\"],currencies:[\"EUR\"],emoji:\"🇧🇱\",ioc:\"\",languages:[\"fra\"],name:\"Saint Barthélemy\",status:\"assigned\"},{alpha2:\"BM\",alpha3:\"BMU\",countryCallingCodes:[\"+1 441\"],currencies:[\"BMD\"],emoji:\"🇧🇲\",ioc:\"BER\",languages:[\"eng\"],name:\"Bermuda\",status:\"assigned\"},{alpha2:\"BN\",alpha3:\"BRN\",countryCallingCodes:[\"+673\"],currencies:[\"BND\"],emoji:\"🇧🇳\",ioc:\"BRU\",languages:[\"msa\",\"eng\"],name:\"Brunei Darussalam\",status:\"assigned\"},{alpha2:\"BO\",alpha3:\"BOL\",countryCallingCodes:[\"+591\"],currencies:[\"BOB\",\"BOV\"],emoji:\"🇧🇴\",ioc:\"BOL\",languages:[\"spa\",\"aym\",\"que\"],name:\"Bolivia, Plurinational State Of\",status:\"assigned\"},{alpha2:\"BQ\",alpha3:\"BES\",countryCallingCodes:[\"+599\"],currencies:[\"USD\"],emoji:\"🇧🇶\",ioc:\"\",languages:[\"nld\"],name:\"Bonaire, Saint Eustatius And Saba\",status:\"assigned\"},{alpha2:\"BQ\",alpha3:\"ATB\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"British Antarctic Territory\",status:\"deleted\"},{alpha2:\"BR\",alpha3:\"BRA\",countryCallingCodes:[\"+55\"],currencies:[\"BRL\"],emoji:\"🇧🇷\",ioc:\"BRA\",languages:[\"por\"],name:\"Brazil\",status:\"assigned\"},{alpha2:\"BS\",alpha3:\"BHS\",countryCallingCodes:[\"+1 242\"],currencies:[\"BSD\"],emoji:\"🇧🇸\",ioc:\"BAH\",languages:[\"eng\"],name:\"Bahamas\",status:\"assigned\"},{alpha2:\"BT\",alpha3:\"BTN\",countryCallingCodes:[\"+975\"],currencies:[\"INR\",\"BTN\"],emoji:\"🇧🇹\",ioc:\"BHU\",languages:[\"dzo\"],name:\"Bhutan\",status:\"assigned\"},{alpha2:\"BU\",alpha3:\"BUR\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Burma\",status:\"deleted\"},{alpha2:\"BV\",alpha3:\"BVT\",countryCallingCodes:[],currencies:[\"NOK\"],emoji:\"🇧🇻\",ioc:\"\",languages:[],name:\"Bouvet Island\",status:\"assigned\"},{alpha2:\"BW\",alpha3:\"BWA\",countryCallingCodes:[\"+267\"],currencies:[\"BWP\"],emoji:\"🇧🇼\",ioc:\"BOT\",languages:[\"eng\",\"tsn\"],name:\"Botswana\",status:\"assigned\"},{alpha2:\"BY\",alpha3:\"BLR\",countryCallingCodes:[\"+375\"],currencies:[\"BYR\"],emoji:\"🇧🇾\",ioc:\"BLR\",languages:[\"bel\",\"rus\"],name:\"Belarus\",status:\"assigned\"},{alpha2:\"BY\",alpha3:\"BYS\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Byelorussian SSR\",status:\"deleted\"},{alpha2:\"BZ\",alpha3:\"BLZ\",countryCallingCodes:[\"+501\"],currencies:[\"BZD\"],emoji:\"🇧🇿\",ioc:\"BIZ\",languages:[\"eng\"],name:\"Belize\",status:\"assigned\"},{alpha2:\"CA\",alpha3:\"CAN\",countryCallingCodes:[\"+1\"],currencies:[\"CAD\"],emoji:\"🇨🇦\",ioc:\"CAN\",languages:[\"eng\",\"fra\"],name:\"Canada\",status:\"assigned\"},{alpha2:\"CC\",alpha3:\"CCK\",countryCallingCodes:[\"+61\"],currencies:[\"AUD\"],emoji:\"🇨🇨\",ioc:\"\",languages:[\"eng\"],name:\"Cocos (Keeling) Islands\",status:\"assigned\"},{alpha2:\"CD\",alpha3:\"COD\",countryCallingCodes:[\"+243\"],currencies:[\"CDF\"],emoji:\"🇨🇩\",ioc:\"COD\",languages:[\"fra\",\"lin\",\"kon\",\"swa\"],name:\"Democratic Republic Of Congo\",status:\"assigned\"},{alpha2:\"CF\",alpha3:\"CAF\",countryCallingCodes:[\"+236\"],currencies:[\"XAF\"],emoji:\"🇨🇫\",ioc:\"CAF\",languages:[\"fra\",\"sag\"],name:\"Central African Republic\",status:\"assigned\"},{alpha2:\"CG\",alpha3:\"COG\",countryCallingCodes:[\"+242\"],currencies:[\"XAF\"],emoji:\"🇨🇬\",ioc:\"CGO\",languages:[\"fra\",\"lin\"],name:\"Republic Of Congo\",status:\"assigned\"},{alpha2:\"CH\",alpha3:\"CHE\",countryCallingCodes:[\"+41\"],currencies:[\"CHF\",\"CHE\",\"CHW\"],emoji:\"🇨🇭\",ioc:\"SUI\",languages:[\"deu\",\"fra\",\"ita\",\"roh\"],name:\"Switzerland\",status:\"assigned\"},{alpha2:\"CI\",alpha3:\"CIV\",countryCallingCodes:[\"+225\"],currencies:[\"XOF\"],emoji:\"🇨🇮\",ioc:\"CIV\",languages:[\"fra\"],name:\"Côte d'Ivoire\",status:\"assigned\"},{alpha2:\"CK\",alpha3:\"COK\",countryCallingCodes:[\"+682\"],currencies:[\"NZD\"],emoji:\"🇨🇰\",ioc:\"COK\",languages:[\"eng\",\"mri\"],name:\"Cook Islands\",status:\"assigned\"},{alpha2:\"CL\",alpha3:\"CHL\",countryCallingCodes:[\"+56\"],currencies:[\"CLP\",\"CLF\"],emoji:\"🇨🇱\",ioc:\"CHI\",languages:[\"spa\"],name:\"Chile\",status:\"assigned\"},{alpha2:\"CM\",alpha3:\"CMR\",countryCallingCodes:[\"+237\"],currencies:[\"XAF\"],emoji:\"🇨🇲\",ioc:\"CMR\",languages:[\"eng\",\"fra\"],name:\"Cameroon\",status:\"assigned\"},{alpha2:\"CN\",alpha3:\"CHN\",countryCallingCodes:[\"+86\"],currencies:[\"CNY\"],emoji:\"🇨🇳\",ioc:\"CHN\",languages:[\"zho\"],name:\"China\",status:\"assigned\"},{alpha2:\"CO\",alpha3:\"COL\",countryCallingCodes:[\"+57\"],currencies:[\"COP\",\"COU\"],emoji:\"🇨🇴\",ioc:\"COL\",languages:[\"spa\"],name:\"Colombia\",status:\"assigned\"},{alpha2:\"CP\",alpha3:\"\",countryCallingCodes:[],currencies:[\"EUR\"],emoji:\"\",ioc:\"\",languages:[],name:\"Clipperton Island\",status:\"reserved\"},{alpha2:\"CR\",alpha3:\"CRI\",countryCallingCodes:[\"+506\"],currencies:[\"CRC\"],emoji:\"🇨🇷\",ioc:\"CRC\",languages:[\"spa\"],name:\"Costa Rica\",status:\"assigned\"},{alpha2:\"CS\",alpha3:\"CSK\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Czechoslovakia\",status:\"deleted\"},{alpha2:\"CS\",alpha3:\"SCG\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Serbia and Montenegro\",status:\"deleted\"},{alpha2:\"CT\",alpha3:\"CTE\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Canton and Enderbury Islands\",status:\"deleted\"},{alpha2:\"CU\",alpha3:\"CUB\",countryCallingCodes:[\"+53\"],currencies:[\"CUP\",\"CUC\"],emoji:\"🇨🇺\",ioc:\"CUB\",languages:[\"spa\"],name:\"Cuba\",status:\"assigned\"},{alpha2:\"CV\",alpha3:\"CPV\",countryCallingCodes:[\"+238\"],currencies:[\"CVE\"],emoji:\"🇨🇻\",ioc:\"CPV\",languages:[\"por\"],name:\"Cabo Verde\",status:\"assigned\"},{alpha2:\"CW\",alpha3:\"CUW\",countryCallingCodes:[\"+599\"],currencies:[\"ANG\"],emoji:\"🇨🇼\",ioc:\"\",languages:[\"nld\"],name:\"Curacao\",status:\"assigned\"},{alpha2:\"CX\",alpha3:\"CXR\",countryCallingCodes:[\"+61\"],currencies:[\"AUD\"],emoji:\"🇨🇽\",ioc:\"\",languages:[\"eng\"],name:\"Christmas Island\",status:\"assigned\"},{alpha2:\"CY\",alpha3:\"CYP\",countryCallingCodes:[\"+357\"],currencies:[\"EUR\"],emoji:\"🇨🇾\",ioc:\"CYP\",languages:[\"ell\",\"tur\"],name:\"Cyprus\",status:\"assigned\"},{alpha2:\"CZ\",alpha3:\"CZE\",countryCallingCodes:[\"+420\"],currencies:[\"CZK\"],emoji:\"🇨🇿\",ioc:\"CZE\",languages:[\"ces\"],name:\"Czech Republic\",status:\"assigned\"},{alpha2:\"DD\",alpha3:\"DDR\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"German Democratic Republic\",status:\"deleted\"},{alpha2:\"DE\",alpha3:\"DEU\",countryCallingCodes:[\"+49\"],currencies:[\"EUR\"],emoji:\"🇩🇪\",ioc:\"GER\",languages:[\"deu\"],name:\"Germany\",status:\"assigned\"},{alpha2:\"DG\",alpha3:\"\",countryCallingCodes:[],currencies:[\"USD\"],emoji:\"\",ioc:\"\",languages:[],name:\"Diego Garcia\",status:\"reserved\"},{alpha2:\"DJ\",alpha3:\"DJI\",countryCallingCodes:[\"+253\"],currencies:[\"DJF\"],emoji:\"🇩🇯\",ioc:\"DJI\",languages:[\"ara\",\"fra\"],name:\"Djibouti\",status:\"assigned\"},{alpha2:\"DK\",alpha3:\"DNK\",countryCallingCodes:[\"+45\"],currencies:[\"DKK\"],emoji:\"🇩🇰\",ioc:\"DEN\",languages:[\"dan\"],name:\"Denmark\",status:\"assigned\"},{alpha2:\"DM\",alpha3:\"DMA\",countryCallingCodes:[\"+1 767\"],currencies:[\"XCD\"],emoji:\"🇩🇲\",ioc:\"DMA\",languages:[\"eng\"],name:\"Dominica\",status:\"assigned\"},{alpha2:\"DO\",alpha3:\"DOM\",countryCallingCodes:[\"+1 809\",\"+1 829\",\"+1 849\"],currencies:[\"DOP\"],emoji:\"🇩🇴\",ioc:\"DOM\",languages:[\"spa\"],name:\"Dominican Republic\",status:\"assigned\"},{alpha2:\"DY\",alpha3:\"DHY\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Dahomey\",status:\"deleted\"},{alpha2:\"DZ\",alpha3:\"DZA\",countryCallingCodes:[\"+213\"],currencies:[\"DZD\"],emoji:\"🇩🇿\",ioc:\"ALG\",languages:[\"ara\"],name:\"Algeria\",status:\"assigned\"},{alpha2:\"EA\",alpha3:\"\",countryCallingCodes:[],currencies:[\"EUR\"],emoji:\"\",ioc:\"\",languages:[],name:\"Ceuta, Mulilla\",status:\"reserved\"},{alpha2:\"EC\",alpha3:\"ECU\",countryCallingCodes:[\"+593\"],currencies:[\"USD\"],emoji:\"🇪🇨\",ioc:\"ECU\",languages:[\"spa\",\"que\"],name:\"Ecuador\",status:\"assigned\"},{alpha2:\"EE\",alpha3:\"EST\",countryCallingCodes:[\"+372\"],currencies:[\"EUR\"],emoji:\"🇪🇪\",ioc:\"EST\",languages:[\"est\"],name:\"Estonia\",status:\"assigned\"},{alpha2:\"EG\",alpha3:\"EGY\",countryCallingCodes:[\"+20\"],currencies:[\"EGP\"],emoji:\"🇪🇬\",ioc:\"EGY\",languages:[\"ara\"],name:\"Egypt\",status:\"assigned\"},{alpha2:\"EH\",alpha3:\"ESH\",countryCallingCodes:[\"+212\"],currencies:[\"MAD\"],emoji:\"🇪🇭\",ioc:\"\",languages:[],name:\"Western Sahara\",status:\"assigned\"},{alpha2:\"ER\",alpha3:\"ERI\",countryCallingCodes:[\"+291\"],currencies:[\"ERN\"],emoji:\"🇪🇷\",ioc:\"ERI\",languages:[\"eng\",\"ara\",\"tir\"],name:\"Eritrea\",status:\"assigned\"},{alpha2:\"ES\",alpha3:\"ESP\",countryCallingCodes:[\"+34\"],currencies:[\"EUR\"],emoji:\"🇪🇸\",ioc:\"ESP\",languages:[\"spa\"],name:\"Spain\",status:\"assigned\"},{alpha2:\"ET\",alpha3:\"ETH\",countryCallingCodes:[\"+251\"],currencies:[\"ETB\"],emoji:\"🇪🇹\",ioc:\"ETH\",languages:[\"amh\"],name:\"Ethiopia\",status:\"assigned\"},{alpha2:\"EU\",alpha3:\"\",countryCallingCodes:[\"+388\"],currencies:[\"EUR\"],emoji:\"🇪🇺\",ioc:\"\",languages:[],name:\"European Union\",status:\"reserved\"},{alpha2:\"FI\",alpha3:\"FIN\",countryCallingCodes:[\"+358\"],currencies:[\"EUR\"],emoji:\"🇫🇮\",ioc:\"FIN\",languages:[\"fin\",\"swe\"],name:\"Finland\",status:\"assigned\"},{alpha2:\"FJ\",alpha3:\"FJI\",countryCallingCodes:[\"+679\"],currencies:[\"FJD\"],emoji:\"🇫🇯\",ioc:\"FIJ\",languages:[\"eng\",\"fij\"],name:\"Fiji\",status:\"assigned\"},{alpha2:\"FK\",alpha3:\"FLK\",countryCallingCodes:[\"+500\"],currencies:[\"FKP\"],emoji:\"🇫🇰\",ioc:\"\",languages:[\"eng\"],name:\"Falkland Islands\",status:\"assigned\"},{alpha2:\"FM\",alpha3:\"FSM\",countryCallingCodes:[\"+691\"],currencies:[\"USD\"],emoji:\"🇫🇲\",ioc:\"FSM\",languages:[\"eng\"],name:\"Micronesia, Federated States Of\",status:\"assigned\"},{alpha2:\"FO\",alpha3:\"FRO\",countryCallingCodes:[\"+298\"],currencies:[\"DKK\"],emoji:\"🇫🇴\",ioc:\"FAI\",languages:[\"fao\",\"dan\"],name:\"Faroe Islands\",status:\"assigned\"},{alpha2:\"FQ\",alpha3:\"ATF\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"French Southern and Antarctic Territories\",status:\"deleted\"},{alpha2:\"FR\",alpha3:\"FRA\",countryCallingCodes:[\"+33\"],currencies:[\"EUR\"],emoji:\"🇫🇷\",ioc:\"FRA\",languages:[\"fra\"],name:\"France\",status:\"assigned\"},{alpha2:\"FX\",alpha3:\"\",countryCallingCodes:[\"+241\"],currencies:[\"EUR\"],emoji:\"\",ioc:\"\",languages:[\"fra\"],name:\"France, Metropolitan\",status:\"reserved\"},{alpha2:\"GA\",alpha3:\"GAB\",countryCallingCodes:[\"+241\"],currencies:[\"XAF\"],emoji:\"🇬🇦\",ioc:\"GAB\",languages:[\"fra\"],name:\"Gabon\",status:\"assigned\"},{alpha2:\"GB\",alpha3:\"GBR\",countryCallingCodes:[\"+44\"],currencies:[\"GBP\"],emoji:\"🇬🇧\",ioc:\"GBR\",languages:[\"eng\",\"cor\",\"gle\",\"gla\",\"cym\"],name:\"United Kingdom\",status:\"assigned\"},{alpha2:\"GD\",alpha3:\"GRD\",countryCallingCodes:[\"+473\"],currencies:[\"XCD\"],emoji:\"🇬🇩\",ioc:\"GRN\",languages:[\"eng\"],name:\"Grenada\",status:\"assigned\"},{alpha2:\"GE\",alpha3:\"GEO\",countryCallingCodes:[\"+995\"],currencies:[\"GEL\"],emoji:\"🇬🇪\",ioc:\"GEO\",languages:[\"kat\"],name:\"Georgia\",status:\"assigned\"},{alpha2:\"GE\",alpha3:\"GEL\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Gilbert and Ellice Islands\",status:\"deleted\"},{alpha2:\"GF\",alpha3:\"GUF\",countryCallingCodes:[\"+594\"],currencies:[\"EUR\"],emoji:\"🇬🇫\",ioc:\"\",languages:[\"fra\"],name:\"French Guiana\",status:\"assigned\"},{alpha2:\"GG\",alpha3:\"GGY\",countryCallingCodes:[\"+44\"],currencies:[\"GBP\"],emoji:\"🇬🇬\",ioc:\"GCI\",languages:[\"fra\"],name:\"Guernsey\",status:\"assigned\"},{alpha2:\"GH\",alpha3:\"GHA\",countryCallingCodes:[\"+233\"],currencies:[\"GHS\"],emoji:\"🇬🇭\",ioc:\"GHA\",languages:[\"eng\"],name:\"Ghana\",status:\"assigned\"},{alpha2:\"GI\",alpha3:\"GIB\",countryCallingCodes:[\"+350\"],currencies:[\"GIP\"],emoji:\"🇬🇮\",ioc:\"\",languages:[\"eng\"],name:\"Gibraltar\",status:\"assigned\"},{alpha2:\"GL\",alpha3:\"GRL\",countryCallingCodes:[\"+299\"],currencies:[\"DKK\"],emoji:\"🇬🇱\",ioc:\"\",languages:[\"kal\"],name:\"Greenland\",status:\"assigned\"},{alpha2:\"GM\",alpha3:\"GMB\",countryCallingCodes:[\"+220\"],currencies:[\"GMD\"],emoji:\"🇬🇲\",ioc:\"GAM\",languages:[\"eng\"],name:\"Gambia\",status:\"assigned\"},{alpha2:\"GN\",alpha3:\"GIN\",countryCallingCodes:[\"+224\"],currencies:[\"GNF\"],emoji:\"🇬🇳\",ioc:\"GUI\",languages:[\"fra\"],name:\"Guinea\",status:\"assigned\"},{alpha2:\"GP\",alpha3:\"GLP\",countryCallingCodes:[\"+590\"],currencies:[\"EUR\"],emoji:\"🇬🇵\",ioc:\"\",languages:[\"fra\"],name:\"Guadeloupe\",status:\"assigned\"},{alpha2:\"GQ\",alpha3:\"GNQ\",countryCallingCodes:[\"+240\"],currencies:[\"XAF\"],emoji:\"🇬🇶\",ioc:\"GEQ\",languages:[\"spa\",\"fra\",\"por\"],name:\"Equatorial Guinea\",status:\"assigned\"},{alpha2:\"GR\",alpha3:\"GRC\",countryCallingCodes:[\"+30\"],currencies:[\"EUR\"],emoji:\"🇬🇷\",ioc:\"GRE\",languages:[\"ell\"],name:\"Greece\",status:\"assigned\"},{alpha2:\"GS\",alpha3:\"SGS\",countryCallingCodes:[],currencies:[\"GBP\"],emoji:\"🇬🇸\",ioc:\"\",languages:[\"eng\"],name:\"South Georgia And The South Sandwich Islands\",status:\"assigned\"},{alpha2:\"GT\",alpha3:\"GTM\",countryCallingCodes:[\"+502\"],currencies:[\"GTQ\"],emoji:\"🇬🇹\",ioc:\"GUA\",languages:[\"spa\"],name:\"Guatemala\",status:\"assigned\"},{alpha2:\"GU\",alpha3:\"GUM\",countryCallingCodes:[\"+1 671\"],currencies:[\"USD\"],emoji:\"🇬🇺\",ioc:\"GUM\",languages:[\"eng\"],name:\"Guam\",status:\"assigned\"},{alpha2:\"GW\",alpha3:\"GNB\",countryCallingCodes:[\"+245\"],currencies:[\"XOF\"],emoji:\"🇬🇼\",ioc:\"GBS\",languages:[\"por\"],name:\"Guinea-bissau\",status:\"assigned\"},{alpha2:\"GY\",alpha3:\"GUY\",countryCallingCodes:[\"+592\"],currencies:[\"GYD\"],emoji:\"🇬🇾\",ioc:\"GUY\",languages:[\"eng\"],name:\"Guyana\",status:\"assigned\"},{alpha2:\"HK\",alpha3:\"HKG\",countryCallingCodes:[\"+852\"],currencies:[\"HKD\"],emoji:\"🇭🇰\",ioc:\"HKG\",languages:[\"zho\",\"eng\"],name:\"Hong Kong\",status:\"assigned\"},{alpha2:\"HM\",alpha3:\"HMD\",countryCallingCodes:[],currencies:[\"AUD\"],emoji:\"🇭🇲\",ioc:\"\",languages:[],name:\"Heard Island And McDonald Islands\",status:\"assigned\"},{alpha2:\"HN\",alpha3:\"HND\",countryCallingCodes:[\"+504\"],currencies:[\"HNL\"],emoji:\"🇭🇳\",ioc:\"HON\",languages:[\"spa\"],name:\"Honduras\",status:\"assigned\"},{alpha2:\"HR\",alpha3:\"HRV\",countryCallingCodes:[\"+385\"],currencies:[\"HRK\"],emoji:\"🇭🇷\",ioc:\"CRO\",languages:[\"hrv\"],name:\"Croatia\",status:\"assigned\"},{alpha2:\"HT\",alpha3:\"HTI\",countryCallingCodes:[\"+509\"],currencies:[\"HTG\",\"USD\"],emoji:\"🇭🇹\",ioc:\"HAI\",languages:[\"fra\",\"hat\"],name:\"Haiti\",status:\"assigned\"},{alpha2:\"HU\",alpha3:\"HUN\",countryCallingCodes:[\"+36\"],currencies:[\"HUF\"],emoji:\"🇭🇺\",ioc:\"HUN\",languages:[\"hun\"],name:\"Hungary\",status:\"assigned\"},{alpha2:\"HV\",alpha3:\"HVO\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Upper Volta\",status:\"deleted\"},{alpha2:\"IC\",alpha3:\"\",countryCallingCodes:[],currencies:[\"EUR\"],emoji:\"\",ioc:\"\",languages:[],name:\"Canary Islands\",status:\"reserved\"},{alpha2:\"ID\",alpha3:\"IDN\",countryCallingCodes:[\"+62\"],currencies:[\"IDR\"],emoji:\"🇮🇩\",ioc:\"INA\",languages:[\"ind\"],name:\"Indonesia\",status:\"assigned\"},{alpha2:\"IE\",alpha3:\"IRL\",countryCallingCodes:[\"+353\"],currencies:[\"EUR\"],emoji:\"🇮🇪\",ioc:\"IRL\",languages:[\"eng\",\"gle\"],name:\"Ireland\",status:\"assigned\"},{alpha2:\"IL\",alpha3:\"ISR\",countryCallingCodes:[\"+972\"],currencies:[\"ILS\"],emoji:\"🇮🇱\",ioc:\"ISR\",languages:[\"heb\",\"ara\",\"eng\"],name:\"Israel\",status:\"assigned\"},{alpha2:\"IM\",alpha3:\"IMN\",countryCallingCodes:[\"+44\"],currencies:[\"GBP\"],emoji:\"🇮🇲\",ioc:\"\",languages:[\"eng\",\"glv\"],name:\"Isle Of Man\",status:\"assigned\"},{alpha2:\"IN\",alpha3:\"IND\",countryCallingCodes:[\"+91\"],currencies:[\"INR\"],emoji:\"🇮🇳\",ioc:\"IND\",languages:[\"eng\",\"hin\"],name:\"India\",status:\"assigned\"},{alpha2:\"IO\",alpha3:\"IOT\",countryCallingCodes:[\"+246\"],currencies:[\"USD\"],emoji:\"🇮🇴\",ioc:\"\",languages:[\"eng\"],name:\"British Indian Ocean Territory\",status:\"assigned\"},{alpha2:\"IQ\",alpha3:\"IRQ\",countryCallingCodes:[\"+964\"],currencies:[\"IQD\"],emoji:\"🇮🇶\",ioc:\"IRQ\",languages:[\"ara\",\"kur\"],name:\"Iraq\",status:\"assigned\"},{alpha2:\"IR\",alpha3:\"IRN\",countryCallingCodes:[\"+98\"],currencies:[\"IRR\"],emoji:\"🇮🇷\",ioc:\"IRI\",languages:[\"fas\"],name:\"Iran, Islamic Republic Of\",status:\"assigned\"},{alpha2:\"IS\",alpha3:\"ISL\",countryCallingCodes:[\"+354\"],currencies:[\"ISK\"],emoji:\"🇮🇸\",ioc:\"ISL\",languages:[\"isl\"],name:\"Iceland\",status:\"assigned\"},{alpha2:\"IT\",alpha3:\"ITA\",countryCallingCodes:[\"+39\"],currencies:[\"EUR\"],emoji:\"🇮🇹\",ioc:\"ITA\",languages:[\"ita\"],name:\"Italy\",status:\"assigned\"},{alpha2:\"JE\",alpha3:\"JEY\",countryCallingCodes:[\"+44\"],currencies:[\"GBP\"],emoji:\"🇯🇪\",ioc:\"JCI\",languages:[\"eng\",\"fra\"],name:\"Jersey\",status:\"assigned\"},{alpha2:\"JM\",alpha3:\"JAM\",countryCallingCodes:[\"+1 876\"],currencies:[\"JMD\"],emoji:\"🇯🇲\",ioc:\"JAM\",languages:[\"eng\"],name:\"Jamaica\",status:\"assigned\"},{alpha2:\"JO\",alpha3:\"JOR\",countryCallingCodes:[\"+962\"],currencies:[\"JOD\"],emoji:\"🇯🇴\",ioc:\"JOR\",languages:[\"ara\"],name:\"Jordan\",status:\"assigned\"},{alpha2:\"JP\",alpha3:\"JPN\",countryCallingCodes:[\"+81\"],currencies:[\"JPY\"],emoji:\"🇯🇵\",ioc:\"JPN\",languages:[\"jpn\"],name:\"Japan\",status:\"assigned\"},{alpha2:\"JT\",alpha3:\"JTN\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Johnston Island\",status:\"deleted\"},{alpha2:\"KE\",alpha3:\"KEN\",countryCallingCodes:[\"+254\"],currencies:[\"KES\"],emoji:\"🇰🇪\",ioc:\"KEN\",languages:[\"eng\",\"swa\"],name:\"Kenya\",status:\"assigned\"},{alpha2:\"KG\",alpha3:\"KGZ\",countryCallingCodes:[\"+996\"],currencies:[\"KGS\"],emoji:\"🇰🇬\",ioc:\"KGZ\",languages:[\"rus\"],name:\"Kyrgyzstan\",status:\"assigned\"},{alpha2:\"KH\",alpha3:\"KHM\",countryCallingCodes:[\"+855\"],currencies:[\"KHR\"],emoji:\"🇰🇭\",ioc:\"CAM\",languages:[\"khm\"],name:\"Cambodia\",status:\"assigned\"},{alpha2:\"KI\",alpha3:\"KIR\",countryCallingCodes:[\"+686\"],currencies:[\"AUD\"],emoji:\"🇰🇮\",ioc:\"KIR\",languages:[\"eng\"],name:\"Kiribati\",status:\"assigned\"},{alpha2:\"KM\",alpha3:\"COM\",countryCallingCodes:[\"+269\"],currencies:[\"KMF\"],emoji:\"🇰🇲\",ioc:\"COM\",languages:[\"ara\",\"fra\"],name:\"Comoros\",status:\"assigned\"},{alpha2:\"KN\",alpha3:\"KNA\",countryCallingCodes:[\"+1 869\"],currencies:[\"XCD\"],emoji:\"🇰🇳\",ioc:\"SKN\",languages:[\"eng\"],name:\"Saint Kitts And Nevis\",status:\"assigned\"},{alpha2:\"KP\",alpha3:\"PRK\",countryCallingCodes:[\"+850\"],currencies:[\"KPW\"],emoji:\"🇰🇵\",ioc:\"PRK\",languages:[\"kor\"],name:\"Korea, Democratic People's Republic Of\",status:\"assigned\"},{alpha2:\"KR\",alpha3:\"KOR\",countryCallingCodes:[\"+82\"],currencies:[\"KRW\"],emoji:\"🇰🇷\",ioc:\"KOR\",languages:[\"kor\"],name:\"Korea, Republic Of\",status:\"assigned\"},{alpha2:\"KW\",alpha3:\"KWT\",countryCallingCodes:[\"+965\"],currencies:[\"KWD\"],emoji:\"🇰🇼\",ioc:\"KUW\",languages:[\"ara\"],name:\"Kuwait\",status:\"assigned\"},{alpha2:\"KY\",alpha3:\"CYM\",countryCallingCodes:[\"+1 345\"],currencies:[\"KYD\"],emoji:\"🇰🇾\",ioc:\"CAY\",languages:[\"eng\"],name:\"Cayman Islands\",status:\"assigned\"},{alpha2:\"KZ\",alpha3:\"KAZ\",countryCallingCodes:[\"+7\",\"+7 6\",\"+7 7\"],currencies:[\"KZT\"],emoji:\"🇰🇿\",ioc:\"KAZ\",languages:[\"kaz\",\"rus\"],name:\"Kazakhstan\",status:\"assigned\"},{alpha2:\"LA\",alpha3:\"LAO\",countryCallingCodes:[\"+856\"],currencies:[\"LAK\"],emoji:\"🇱🇦\",ioc:\"LAO\",languages:[\"lao\"],name:\"Lao People's Democratic Republic\",status:\"assigned\"},{alpha2:\"LB\",alpha3:\"LBN\",countryCallingCodes:[\"+961\"],currencies:[\"LBP\"],emoji:\"🇱🇧\",ioc:\"LIB\",languages:[\"ara\",\"hye\"],name:\"Lebanon\",status:\"assigned\"},{alpha2:\"LC\",alpha3:\"LCA\",countryCallingCodes:[\"+1 758\"],currencies:[\"XCD\"],emoji:\"🇱🇨\",ioc:\"LCA\",languages:[\"eng\"],name:\"Saint Lucia\",status:\"assigned\"},{alpha2:\"LI\",alpha3:\"LIE\",countryCallingCodes:[\"+423\"],currencies:[\"CHF\"],emoji:\"🇱🇮\",ioc:\"LIE\",languages:[\"deu\"],name:\"Liechtenstein\",status:\"assigned\"},{alpha2:\"LK\",alpha3:\"LKA\",countryCallingCodes:[\"+94\"],currencies:[\"LKR\"],emoji:\"🇱🇰\",ioc:\"SRI\",languages:[\"sin\",\"tam\"],name:\"Sri Lanka\",status:\"assigned\"},{alpha2:\"LR\",alpha3:\"LBR\",countryCallingCodes:[\"+231\"],currencies:[\"LRD\"],emoji:\"🇱🇷\",ioc:\"LBR\",languages:[\"eng\"],name:\"Liberia\",status:\"assigned\"},{alpha2:\"LS\",alpha3:\"LSO\",countryCallingCodes:[\"+266\"],currencies:[\"LSL\",\"ZAR\"],emoji:\"🇱🇸\",ioc:\"LES\",languages:[\"eng\",\"sot\"],name:\"Lesotho\",status:\"assigned\"},{alpha2:\"LT\",alpha3:\"LTU\",countryCallingCodes:[\"+370\"],currencies:[\"EUR\"],emoji:\"🇱🇹\",ioc:\"LTU\",languages:[\"lit\"],name:\"Lithuania\",status:\"assigned\"},{alpha2:\"LU\",alpha3:\"LUX\",countryCallingCodes:[\"+352\"],currencies:[\"EUR\"],emoji:\"🇱🇺\",ioc:\"LUX\",languages:[\"fra\",\"deu\",\"ltz\"],name:\"Luxembourg\",status:\"assigned\"},{alpha2:\"LV\",alpha3:\"LVA\",countryCallingCodes:[\"+371\"],currencies:[\"EUR\"],emoji:\"🇱🇻\",ioc:\"LAT\",languages:[\"lav\"],name:\"Latvia\",status:\"assigned\"},{alpha2:\"LY\",alpha3:\"LBY\",countryCallingCodes:[\"+218\"],currencies:[\"LYD\"],emoji:\"🇱🇾\",ioc:\"LBA\",languages:[\"ara\"],name:\"Libya\",status:\"assigned\"},{alpha2:\"MA\",alpha3:\"MAR\",countryCallingCodes:[\"+212\"],currencies:[\"MAD\"],emoji:\"🇲🇦\",ioc:\"MAR\",languages:[\"ara\"],name:\"Morocco\",status:\"assigned\"},{alpha2:\"MC\",alpha3:\"MCO\",countryCallingCodes:[\"+377\"],currencies:[\"EUR\"],emoji:\"🇲🇨\",ioc:\"MON\",languages:[\"fra\"],name:\"Monaco\",status:\"assigned\"},{alpha2:\"MD\",alpha3:\"MDA\",countryCallingCodes:[\"+373\"],currencies:[\"MDL\"],emoji:\"🇲🇩\",ioc:\"MDA\",languages:[\"ron\"],name:\"Moldova\",status:\"assigned\"},{alpha2:\"ME\",alpha3:\"MNE\",countryCallingCodes:[\"+382\"],currencies:[\"EUR\"],emoji:\"🇲🇪\",ioc:\"MNE\",languages:[\"mot\"],name:\"Montenegro\",status:\"assigned\"},{alpha2:\"MF\",alpha3:\"MAF\",countryCallingCodes:[\"+590\"],currencies:[\"EUR\"],emoji:\"🇲🇫\",ioc:\"\",languages:[\"fra\"],name:\"Saint Martin\",status:\"assigned\"},{alpha2:\"MG\",alpha3:\"MDG\",countryCallingCodes:[\"+261\"],currencies:[\"MGA\"],emoji:\"🇲🇬\",ioc:\"MAD\",languages:[\"fra\",\"mlg\"],name:\"Madagascar\",status:\"assigned\"},{alpha2:\"MH\",alpha3:\"MHL\",countryCallingCodes:[\"+692\"],currencies:[\"USD\"],emoji:\"🇲🇭\",ioc:\"MHL\",languages:[\"eng\",\"mah\"],name:\"Marshall Islands\",status:\"assigned\"},{alpha2:\"MI\",alpha3:\"MID\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Midway Islands\",status:\"deleted\"},{alpha2:\"MK\",alpha3:\"MKD\",countryCallingCodes:[\"+389\"],currencies:[\"MKD\"],emoji:\"🇲🇰\",ioc:\"MKD\",languages:[\"mkd\"],name:\"Macedonia, The Former Yugoslav Republic Of\",status:\"assigned\"},{alpha2:\"ML\",alpha3:\"MLI\",countryCallingCodes:[\"+223\"],currencies:[\"XOF\"],emoji:\"🇲🇱\",ioc:\"MLI\",languages:[\"fra\"],name:\"Mali\",status:\"assigned\"},{alpha2:\"MM\",alpha3:\"MMR\",countryCallingCodes:[\"+95\"],currencies:[\"MMK\"],emoji:\"🇲🇲\",ioc:\"MYA\",languages:[\"mya\"],name:\"Myanmar\",status:\"assigned\"},{alpha2:\"MN\",alpha3:\"MNG\",countryCallingCodes:[\"+976\"],currencies:[\"MNT\"],emoji:\"🇲🇳\",ioc:\"MGL\",languages:[\"mon\"],name:\"Mongolia\",status:\"assigned\"},{alpha2:\"MO\",alpha3:\"MAC\",countryCallingCodes:[\"+853\"],currencies:[\"MOP\"],emoji:\"🇲🇴\",ioc:\"MAC\",languages:[\"zho\",\"por\"],name:\"Macao\",status:\"assigned\"},{alpha2:\"MP\",alpha3:\"MNP\",countryCallingCodes:[\"+1 670\"],currencies:[\"USD\"],emoji:\"🇲🇵\",ioc:\"\",languages:[\"eng\"],name:\"Northern Mariana Islands\",status:\"assigned\"},{alpha2:\"MQ\",alpha3:\"MTQ\",countryCallingCodes:[\"+596\"],currencies:[\"EUR\"],emoji:\"🇲🇶\",ioc:\"\",languages:[],name:\"Martinique\",status:\"assigned\"},{alpha2:\"MR\",alpha3:\"MRT\",countryCallingCodes:[\"+222\"],currencies:[\"MRO\"],emoji:\"🇲🇷\",ioc:\"MTN\",languages:[\"ara\",\"fra\"],name:\"Mauritania\",status:\"assigned\"},{alpha2:\"MS\",alpha3:\"MSR\",countryCallingCodes:[\"+1 664\"],currencies:[\"XCD\"],emoji:\"🇲🇸\",ioc:\"\",languages:[],name:\"Montserrat\",status:\"assigned\"},{alpha2:\"MT\",alpha3:\"MLT\",countryCallingCodes:[\"+356\"],currencies:[\"EUR\"],emoji:\"🇲🇹\",ioc:\"MLT\",languages:[\"mlt\",\"eng\"],name:\"Malta\",status:\"assigned\"},{alpha2:\"MU\",alpha3:\"MUS\",countryCallingCodes:[\"+230\"],currencies:[\"MUR\"],emoji:\"🇲🇺\",ioc:\"MRI\",languages:[\"eng\",\"fra\"],name:\"Mauritius\",status:\"assigned\"},{alpha2:\"MV\",alpha3:\"MDV\",countryCallingCodes:[\"+960\"],currencies:[\"MVR\"],emoji:\"🇲🇻\",ioc:\"MDV\",languages:[\"div\"],name:\"Maldives\",status:\"assigned\"},{alpha2:\"MW\",alpha3:\"MWI\",countryCallingCodes:[\"+265\"],currencies:[\"MWK\"],emoji:\"🇲🇼\",ioc:\"MAW\",languages:[\"eng\",\"nya\"],name:\"Malawi\",status:\"assigned\"},{alpha2:\"MX\",alpha3:\"MEX\",countryCallingCodes:[\"+52\"],currencies:[\"MXN\",\"MXV\"],emoji:\"🇲🇽\",ioc:\"MEX\",languages:[\"spa\"],name:\"Mexico\",status:\"assigned\"},{alpha2:\"MY\",alpha3:\"MYS\",countryCallingCodes:[\"+60\"],currencies:[\"MYR\"],emoji:\"🇲🇾\",ioc:\"MAS\",languages:[\"msa\",\"eng\"],name:\"Malaysia\",status:\"assigned\"},{alpha2:\"MZ\",alpha3:\"MOZ\",countryCallingCodes:[\"+258\"],currencies:[\"MZN\"],emoji:\"🇲🇿\",ioc:\"MOZ\",languages:[\"por\"],name:\"Mozambique\",status:\"assigned\"},{alpha2:\"NA\",alpha3:\"NAM\",countryCallingCodes:[\"+264\"],currencies:[\"NAD\",\"ZAR\"],emoji:\"🇳🇦\",ioc:\"NAM\",languages:[\"eng\"],name:\"Namibia\",status:\"assigned\"},{alpha2:\"NC\",alpha3:\"NCL\",countryCallingCodes:[\"+687\"],currencies:[\"XPF\"],emoji:\"🇳🇨\",ioc:\"\",languages:[\"fra\"],name:\"New Caledonia\",status:\"assigned\"},{alpha2:\"NE\",alpha3:\"NER\",countryCallingCodes:[\"+227\"],currencies:[\"XOF\"],emoji:\"🇳🇪\",ioc:\"NIG\",languages:[\"fra\"],name:\"Niger\",status:\"assigned\"},{alpha2:\"NF\",alpha3:\"NFK\",countryCallingCodes:[\"+672\"],currencies:[\"AUD\"],emoji:\"🇳🇫\",ioc:\"\",languages:[\"eng\"],name:\"Norfolk Island\",status:\"assigned\"},{alpha2:\"NG\",alpha3:\"NGA\",countryCallingCodes:[\"+234\"],currencies:[\"NGN\"],emoji:\"🇳🇬\",ioc:\"NGR\",languages:[\"eng\"],name:\"Nigeria\",status:\"assigned\"},{alpha2:\"NH\",alpha3:\"NHB\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"New Hebrides\",status:\"deleted\"},{alpha2:\"NI\",alpha3:\"NIC\",countryCallingCodes:[\"+505\"],currencies:[\"NIO\"],emoji:\"🇳🇮\",ioc:\"NCA\",languages:[\"spa\"],name:\"Nicaragua\",status:\"assigned\"},{alpha2:\"NL\",alpha3:\"NLD\",countryCallingCodes:[\"+31\"],currencies:[\"EUR\"],emoji:\"🇳🇱\",ioc:\"NED\",languages:[\"nld\"],name:\"Netherlands\",status:\"assigned\"},{alpha2:\"NO\",alpha3:\"NOR\",countryCallingCodes:[\"+47\"],currencies:[\"NOK\"],emoji:\"🇳🇴\",ioc:\"NOR\",languages:[\"nor\"],name:\"Norway\",status:\"assigned\"},{alpha2:\"NP\",alpha3:\"NPL\",countryCallingCodes:[\"+977\"],currencies:[\"NPR\"],emoji:\"🇳🇵\",ioc:\"NEP\",languages:[\"nep\"],name:\"Nepal\",status:\"assigned\"},{alpha2:\"NQ\",alpha3:\"ATN\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Dronning Maud Land\",status:\"deleted\"},{alpha2:\"NR\",alpha3:\"NRU\",countryCallingCodes:[\"+674\"],currencies:[\"AUD\"],emoji:\"🇳🇷\",ioc:\"NRU\",languages:[\"eng\",\"nau\"],name:\"Nauru\",status:\"assigned\"},{alpha2:\"NT\",alpha3:\"NTZ\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Neutral Zone\",status:\"deleted\"},{alpha2:\"NU\",alpha3:\"NIU\",countryCallingCodes:[\"+683\"],currencies:[\"NZD\"],emoji:\"🇳🇺\",ioc:\"\",languages:[\"eng\"],name:\"Niue\",status:\"assigned\"},{alpha2:\"NZ\",alpha3:\"NZL\",countryCallingCodes:[\"+64\"],currencies:[\"NZD\"],emoji:\"🇳🇿\",ioc:\"NZL\",languages:[\"eng\"],name:\"New Zealand\",status:\"assigned\"},{alpha2:\"OM\",alpha3:\"OMN\",countryCallingCodes:[\"+968\"],currencies:[\"OMR\"],emoji:\"🇴🇲\",ioc:\"OMA\",languages:[\"ara\"],name:\"Oman\",status:\"assigned\"},{alpha2:\"PA\",alpha3:\"PAN\",countryCallingCodes:[\"+507\"],currencies:[\"PAB\",\"USD\"],emoji:\"🇵🇦\",ioc:\"PAN\",languages:[\"spa\"],name:\"Panama\",status:\"assigned\"},{alpha2:\"PC\",alpha3:\"PCI\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Pacific Islands, Trust Territory of the\",status:\"deleted\"},{alpha2:\"PE\",alpha3:\"PER\",countryCallingCodes:[\"+51\"],currencies:[\"PEN\"],emoji:\"🇵🇪\",ioc:\"PER\",languages:[\"spa\",\"aym\",\"que\"],name:\"Peru\",status:\"assigned\"},{alpha2:\"PF\",alpha3:\"PYF\",countryCallingCodes:[\"+689\"],currencies:[\"XPF\"],emoji:\"🇵🇫\",ioc:\"\",languages:[\"fra\"],name:\"French Polynesia\",status:\"assigned\"},{alpha2:\"PG\",alpha3:\"PNG\",countryCallingCodes:[\"+675\"],currencies:[\"PGK\"],emoji:\"🇵🇬\",ioc:\"PNG\",languages:[\"eng\"],name:\"Papua New Guinea\",status:\"assigned\"},{alpha2:\"PH\",alpha3:\"PHL\",countryCallingCodes:[\"+63\"],currencies:[\"PHP\"],emoji:\"🇵🇭\",ioc:\"PHI\",languages:[\"eng\"],name:\"Philippines\",status:\"assigned\"},{alpha2:\"PK\",alpha3:\"PAK\",countryCallingCodes:[\"+92\"],currencies:[\"PKR\"],emoji:\"🇵🇰\",ioc:\"PAK\",languages:[\"urd\",\"eng\"],name:\"Pakistan\",status:\"assigned\"},{alpha2:\"PL\",alpha3:\"POL\",countryCallingCodes:[\"+48\"],currencies:[\"PLN\"],emoji:\"🇵🇱\",ioc:\"POL\",languages:[\"pol\"],name:\"Poland\",status:\"assigned\"},{alpha2:\"PM\",alpha3:\"SPM\",countryCallingCodes:[\"+508\"],currencies:[\"EUR\"],emoji:\"🇵🇲\",ioc:\"\",languages:[\"eng\"],name:\"Saint Pierre And Miquelon\",status:\"assigned\"},{alpha2:\"PN\",alpha3:\"PCN\",countryCallingCodes:[\"+872\"],currencies:[\"NZD\"],emoji:\"🇵🇳\",ioc:\"\",languages:[\"eng\"],name:\"Pitcairn\",status:\"assigned\"},{alpha2:\"PR\",alpha3:\"PRI\",countryCallingCodes:[\"+1 787\",\"+1 939\"],currencies:[\"USD\"],emoji:\"🇵🇷\",ioc:\"PUR\",languages:[\"spa\",\"eng\"],name:\"Puerto Rico\",status:\"assigned\"},{alpha2:\"PS\",alpha3:\"PSE\",countryCallingCodes:[\"+970\"],currencies:[\"JOD\",\"EGP\",\"ILS\"],emoji:\"🇵🇸\",ioc:\"PLE\",languages:[\"ara\"],name:\"Palestinian Territory, Occupied\",status:\"assigned\"},{alpha2:\"PT\",alpha3:\"PRT\",countryCallingCodes:[\"+351\"],currencies:[\"EUR\"],emoji:\"🇵🇹\",ioc:\"POR\",languages:[\"por\"],name:\"Portugal\",status:\"assigned\"},{alpha2:\"PU\",alpha3:\"PUS\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"U.S. Miscellaneous Pacific Islands\",status:\"deleted\"},{alpha2:\"PW\",alpha3:\"PLW\",countryCallingCodes:[\"+680\"],currencies:[\"USD\"],emoji:\"🇵🇼\",ioc:\"PLW\",languages:[\"eng\"],name:\"Palau\",status:\"assigned\"},{alpha2:\"PY\",alpha3:\"PRY\",countryCallingCodes:[\"+595\"],currencies:[\"PYG\"],emoji:\"🇵🇾\",ioc:\"PAR\",languages:[\"spa\"],name:\"Paraguay\",status:\"assigned\"},{alpha2:\"PZ\",alpha3:\"PCZ\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Panama Canal Zone\",status:\"deleted\"},{alpha2:\"QA\",alpha3:\"QAT\",countryCallingCodes:[\"+974\"],currencies:[\"QAR\"],emoji:\"🇶🇦\",ioc:\"QAT\",languages:[\"ara\"],name:\"Qatar\",status:\"assigned\"},{alpha2:\"RE\",alpha3:\"REU\",countryCallingCodes:[\"+262\"],currencies:[\"EUR\"],emoji:\"🇷🇪\",ioc:\"\",languages:[\"fra\"],name:\"Reunion\",status:\"assigned\"},{alpha2:\"RH\",alpha3:\"RHO\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Southern Rhodesia\",status:\"deleted\"},{alpha2:\"RO\",alpha3:\"ROU\",countryCallingCodes:[\"+40\"],currencies:[\"RON\"],emoji:\"🇷🇴\",ioc:\"ROU\",languages:[\"ron\"],name:\"Romania\",status:\"assigned\"},{alpha2:\"RS\",alpha3:\"SRB\",countryCallingCodes:[\"+381\"],currencies:[\"RSD\"],emoji:\"🇷🇸\",ioc:\"SRB\",languages:[\"srp\"],name:\"Serbia\",status:\"assigned\"},{alpha2:\"RU\",alpha3:\"RUS\",countryCallingCodes:[\"+7\",\"+7 3\",\"+7 4\",\"+7 8\"],currencies:[\"RUB\"],emoji:\"🇷🇺\",ioc:\"RUS\",languages:[\"rus\"],name:\"Russian Federation\",status:\"assigned\"},{alpha2:\"RW\",alpha3:\"RWA\",countryCallingCodes:[\"+250\"],currencies:[\"RWF\"],emoji:\"🇷🇼\",ioc:\"RWA\",languages:[\"eng\",\"fra\",\"kin\"],name:\"Rwanda\",status:\"assigned\"},{alpha2:\"SA\",alpha3:\"SAU\",countryCallingCodes:[\"+966\"],currencies:[\"SAR\"],emoji:\"🇸🇦\",ioc:\"KSA\",languages:[\"ara\"],name:\"Saudi Arabia\",status:\"assigned\"},{alpha2:\"SB\",alpha3:\"SLB\",countryCallingCodes:[\"+677\"],currencies:[\"SBD\"],emoji:\"🇸🇧\",ioc:\"SOL\",languages:[\"eng\"],name:\"Solomon Islands\",status:\"assigned\"},{alpha2:\"SC\",alpha3:\"SYC\",countryCallingCodes:[\"+248\"],currencies:[\"SCR\"],emoji:\"🇸🇨\",ioc:\"SEY\",languages:[\"eng\",\"fra\"],name:\"Seychelles\",status:\"assigned\"},{alpha2:\"SD\",alpha3:\"SDN\",countryCallingCodes:[\"+249\"],currencies:[\"SDG\"],emoji:\"🇸🇩\",ioc:\"SUD\",languages:[\"ara\",\"eng\"],name:\"Sudan\",status:\"assigned\"},{alpha2:\"SE\",alpha3:\"SWE\",countryCallingCodes:[\"+46\"],currencies:[\"SEK\"],emoji:\"🇸🇪\",ioc:\"SWE\",languages:[\"swe\"],name:\"Sweden\",status:\"assigned\"},{alpha2:\"SG\",alpha3:\"SGP\",countryCallingCodes:[\"+65\"],currencies:[\"SGD\"],emoji:\"🇸🇬\",ioc:\"SIN\",languages:[\"eng\",\"zho\",\"msa\",\"tam\"],name:\"Singapore\",status:\"assigned\"},{alpha2:\"SH\",alpha3:\"SHN\",countryCallingCodes:[\"+290\"],currencies:[\"SHP\"],emoji:\"🇸🇭\",ioc:\"\",languages:[\"eng\"],name:\"Saint Helena, Ascension And Tristan Da Cunha\",status:\"assigned\"},{alpha2:\"SI\",alpha3:\"SVN\",countryCallingCodes:[\"+386\"],currencies:[\"EUR\"],emoji:\"🇸🇮\",ioc:\"SLO\",languages:[\"slv\"],name:\"Slovenia\",status:\"assigned\"},{alpha2:\"SJ\",alpha3:\"SJM\",countryCallingCodes:[\"+47\"],currencies:[\"NOK\"],emoji:\"🇸🇯\",ioc:\"\",languages:[],name:\"Svalbard And Jan Mayen\",status:\"assigned\"},{alpha2:\"SK\",alpha3:\"SVK\",countryCallingCodes:[\"+421\"],currencies:[\"EUR\"],emoji:\"🇸🇰\",ioc:\"SVK\",languages:[\"slk\"],name:\"Slovakia\",status:\"assigned\"},{alpha2:\"SK\",alpha3:\"SKM\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Sikkim\",status:\"deleted\"},{alpha2:\"SL\",alpha3:\"SLE\",countryCallingCodes:[\"+232\"],currencies:[\"SLL\"],emoji:\"🇸🇱\",ioc:\"SLE\",languages:[\"eng\"],name:\"Sierra Leone\",status:\"assigned\"},{alpha2:\"SM\",alpha3:\"SMR\",countryCallingCodes:[\"+378\"],currencies:[\"EUR\"],emoji:\"🇸🇲\",ioc:\"SMR\",languages:[\"ita\"],name:\"San Marino\",status:\"assigned\"},{alpha2:\"SN\",alpha3:\"SEN\",countryCallingCodes:[\"+221\"],currencies:[\"XOF\"],emoji:\"🇸🇳\",ioc:\"SEN\",languages:[\"fra\"],name:\"Senegal\",status:\"assigned\"},{alpha2:\"SO\",alpha3:\"SOM\",countryCallingCodes:[\"+252\"],currencies:[\"SOS\"],emoji:\"🇸🇴\",ioc:\"SOM\",languages:[\"som\"],name:\"Somalia\",status:\"assigned\"},{alpha2:\"SR\",alpha3:\"SUR\",countryCallingCodes:[\"+597\"],currencies:[\"SRD\"],emoji:\"🇸🇷\",ioc:\"SUR\",languages:[\"nld\"],name:\"Suriname\",status:\"assigned\"},{alpha2:\"SS\",alpha3:\"SSD\",countryCallingCodes:[\"+211\"],currencies:[\"SSP\"],emoji:\"🇸🇸\",ioc:\"SSD\",languages:[\"eng\"],name:\"South Sudan\",status:\"assigned\"},{alpha2:\"ST\",alpha3:\"STP\",countryCallingCodes:[\"+239\"],currencies:[\"STD\"],emoji:\"🇸🇹\",ioc:\"STP\",languages:[\"por\"],name:\"Sao Tome and Principe\",status:\"assigned\"},{alpha2:\"SU\",alpha3:\"\",countryCallingCodes:[],currencies:[\"RUB\"],emoji:\"\",ioc:\"\",languages:[\"rus\"],name:\"USSR\",status:\"reserved\"},{alpha2:\"SV\",alpha3:\"SLV\",countryCallingCodes:[\"+503\"],currencies:[\"USD\"],emoji:\"🇸🇻\",ioc:\"ESA\",languages:[\"spa\"],name:\"El Salvador\",status:\"assigned\"},{alpha2:\"SX\",alpha3:\"SXM\",countryCallingCodes:[\"+1 721\"],currencies:[\"ANG\"],emoji:\"🇸🇽\",ioc:\"\",languages:[\"nld\"],name:\"Sint Maarten\",status:\"assigned\"},{alpha2:\"SY\",alpha3:\"SYR\",countryCallingCodes:[\"+963\"],currencies:[\"SYP\"],emoji:\"🇸🇾\",ioc:\"SYR\",languages:[\"ara\"],name:\"Syrian Arab Republic\",status:\"assigned\"},{alpha2:\"SZ\",alpha3:\"SWZ\",countryCallingCodes:[\"+268\"],currencies:[\"SZL\"],emoji:\"🇸🇿\",ioc:\"SWZ\",languages:[\"eng\",\"ssw\"],name:\"Swaziland\",status:\"assigned\"},{alpha2:\"TA\",alpha3:\"\",countryCallingCodes:[\"+290\"],currencies:[\"GBP\"],emoji:\"\",ioc:\"\",languages:[],name:\"Tristan de Cunha\",status:\"reserved\"},{alpha2:\"TC\",alpha3:\"TCA\",countryCallingCodes:[\"+1 649\"],currencies:[\"USD\"],emoji:\"🇹🇨\",ioc:\"\",languages:[\"eng\"],name:\"Turks And Caicos Islands\",status:\"assigned\"},{alpha2:\"TD\",alpha3:\"TCD\",countryCallingCodes:[\"+235\"],currencies:[\"XAF\"],emoji:\"🇹🇩\",ioc:\"CHA\",languages:[\"ara\",\"fra\"],name:\"Chad\",status:\"assigned\"},{alpha2:\"TF\",alpha3:\"ATF\",countryCallingCodes:[],currencies:[\"EUR\"],emoji:\"🇹🇫\",ioc:\"\",languages:[\"fra\"],name:\"French Southern Territories\",status:\"assigned\"},{alpha2:\"TG\",alpha3:\"TGO\",countryCallingCodes:[\"+228\"],currencies:[\"XOF\"],emoji:\"🇹🇬\",ioc:\"TOG\",languages:[\"fra\"],name:\"Togo\",status:\"assigned\"},{alpha2:\"TH\",alpha3:\"THA\",countryCallingCodes:[\"+66\"],currencies:[\"THB\"],emoji:\"🇹🇭\",ioc:\"THA\",languages:[\"tha\"],name:\"Thailand\",status:\"assigned\"},{alpha2:\"TJ\",alpha3:\"TJK\",countryCallingCodes:[\"+992\"],currencies:[\"TJS\"],emoji:\"🇹🇯\",ioc:\"TJK\",languages:[\"tgk\",\"rus\"],name:\"Tajikistan\",status:\"assigned\"},{alpha2:\"TK\",alpha3:\"TKL\",countryCallingCodes:[\"+690\"],currencies:[\"NZD\"],emoji:\"🇹🇰\",ioc:\"\",languages:[\"eng\"],name:\"Tokelau\",status:\"assigned\"},{alpha2:\"TL\",alpha3:\"TLS\",countryCallingCodes:[\"+670\"],currencies:[\"USD\"],emoji:\"🇹🇱\",ioc:\"TLS\",languages:[\"por\"],name:\"Timor-Leste, Democratic Republic of\",status:\"assigned\"},{alpha2:\"TM\",alpha3:\"TKM\",countryCallingCodes:[\"+993\"],currencies:[\"TMT\"],emoji:\"🇹🇲\",ioc:\"TKM\",languages:[\"tuk\",\"rus\"],name:\"Turkmenistan\",status:\"assigned\"},{alpha2:\"TN\",alpha3:\"TUN\",countryCallingCodes:[\"+216\"],currencies:[\"TND\"],emoji:\"🇹🇳\",ioc:\"TUN\",languages:[\"ara\"],name:\"Tunisia\",status:\"assigned\"},{alpha2:\"TO\",alpha3:\"TON\",countryCallingCodes:[\"+676\"],currencies:[\"TOP\"],emoji:\"🇹🇴\",ioc:\"TGA\",languages:[\"eng\"],name:\"Tonga\",status:\"assigned\"},{alpha2:\"TP\",alpha3:\"TMP\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"East Timor\",status:\"deleted\"},{alpha2:\"TR\",alpha3:\"TUR\",countryCallingCodes:[\"+90\"],currencies:[\"TRY\"],emoji:\"🇹🇷\",ioc:\"TUR\",languages:[\"tur\"],name:\"Turkey\",status:\"assigned\"},{alpha2:\"TT\",alpha3:\"TTO\",countryCallingCodes:[\"+1 868\"],currencies:[\"TTD\"],emoji:\"🇹🇹\",ioc:\"TTO\",languages:[\"eng\"],name:\"Trinidad And Tobago\",status:\"assigned\"},{alpha2:\"TV\",alpha3:\"TUV\",countryCallingCodes:[\"+688\"],currencies:[\"AUD\"],emoji:\"🇹🇻\",ioc:\"TUV\",languages:[\"eng\"],name:\"Tuvalu\",status:\"assigned\"},{alpha2:\"TW\",alpha3:\"TWN\",countryCallingCodes:[\"+886\"],currencies:[\"TWD\"],emoji:\"🇹🇼\",ioc:\"TPE\",languages:[\"zho\"],name:\"Taiwan\",status:\"assigned\"},{alpha2:\"TZ\",alpha3:\"TZA\",countryCallingCodes:[\"+255\"],currencies:[\"TZS\"],emoji:\"🇹🇿\",ioc:\"TAN\",languages:[\"swa\",\"eng\"],name:\"Tanzania, United Republic Of\",status:\"assigned\"},{alpha2:\"UA\",alpha3:\"UKR\",countryCallingCodes:[\"+380\"],currencies:[\"UAH\"],emoji:\"🇺🇦\",ioc:\"UKR\",languages:[\"ukr\",\"rus\"],name:\"Ukraine\",status:\"assigned\"},{alpha2:\"UG\",alpha3:\"UGA\",countryCallingCodes:[\"+256\"],currencies:[\"UGX\"],emoji:\"🇺🇬\",ioc:\"UGA\",languages:[\"eng\",\"swa\"],name:\"Uganda\",status:\"assigned\"},{alpha2:\"UK\",alpha3:\"\",countryCallingCodes:[],currencies:[\"GBP\"],emoji:\"\",ioc:\"\",languages:[\"eng\",\"cor\",\"gle\",\"gla\",\"cym\"],name:\"United Kingdom\",status:\"reserved\"},{alpha2:\"UM\",alpha3:\"UMI\",countryCallingCodes:[\"+1\"],currencies:[\"USD\"],emoji:\"🇺🇲\",ioc:\"\",languages:[\"eng\"],name:\"United States Minor Outlying Islands\",status:\"assigned\"},{alpha2:\"US\",alpha3:\"USA\",countryCallingCodes:[\"+1\"],currencies:[\"USD\"],emoji:\"🇺🇸\",ioc:\"USA\",languages:[\"eng\"],name:\"United States\",status:\"assigned\"},{alpha2:\"UY\",alpha3:\"URY\",countryCallingCodes:[\"+598\"],currencies:[\"UYU\",\"UYI\"],emoji:\"🇺🇾\",ioc:\"URU\",languages:[\"spa\"],name:\"Uruguay\",status:\"assigned\"},{alpha2:\"UZ\",alpha3:\"UZB\",countryCallingCodes:[\"+998\"],currencies:[\"UZS\"],emoji:\"🇺🇿\",ioc:\"UZB\",languages:[\"uzb\",\"rus\"],name:\"Uzbekistan\",status:\"assigned\"},{alpha2:\"VA\",alpha3:\"VAT\",countryCallingCodes:[\"+379\",\"+39\"],currencies:[\"EUR\"],emoji:\"🇻🇦\",ioc:\"\",languages:[\"ita\"],name:\"Vatican City State\",status:\"assigned\"},{alpha2:\"VC\",alpha3:\"VCT\",countryCallingCodes:[\"+1 784\"],currencies:[\"XCD\"],emoji:\"🇻🇨\",ioc:\"VIN\",languages:[\"eng\"],name:\"Saint Vincent And The Grenadines\",status:\"assigned\"},{alpha2:\"VD\",alpha3:\"VDR\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Viet-Nam, Democratic Republic of\",status:\"deleted\"},{alpha2:\"VE\",alpha3:\"VEN\",countryCallingCodes:[\"+58\"],currencies:[\"VEF\"],emoji:\"🇻🇪\",ioc:\"VEN\",languages:[\"spa\"],name:\"Venezuela, Bolivarian Republic Of\",status:\"assigned\"},{alpha2:\"VG\",alpha3:\"VGB\",countryCallingCodes:[\"+1 284\"],currencies:[\"USD\"],emoji:\"🇻🇬\",ioc:\"IVB\",languages:[\"eng\"],name:\"Virgin Islands (British)\",status:\"assigned\"},{alpha2:\"VI\",alpha3:\"VIR\",countryCallingCodes:[\"+1 340\"],currencies:[\"USD\"],emoji:\"🇻🇮\",ioc:\"ISV\",languages:[\"eng\"],name:\"Virgin Islands (US)\",status:\"assigned\"},{alpha2:\"VN\",alpha3:\"VNM\",countryCallingCodes:[\"+84\"],currencies:[\"VND\"],emoji:\"🇻🇳\",ioc:\"VIE\",languages:[\"vie\"],name:\"Viet Nam\",status:\"assigned\"},{alpha2:\"VU\",alpha3:\"VUT\",countryCallingCodes:[\"+678\"],currencies:[\"VUV\"],emoji:\"🇻🇺\",ioc:\"VAN\",languages:[\"bis\",\"eng\",\"fra\"],name:\"Vanuatu\",status:\"assigned\"},{alpha2:\"WF\",alpha3:\"WLF\",countryCallingCodes:[\"+681\"],currencies:[\"XPF\"],emoji:\"🇼🇫\",ioc:\"\",languages:[\"fra\"],name:\"Wallis And Futuna\",status:\"assigned\"},{alpha2:\"WK\",alpha3:\"WAK\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Wake Island\",status:\"deleted\"},{alpha2:\"WS\",alpha3:\"WSM\",countryCallingCodes:[\"+685\"],currencies:[\"WST\"],emoji:\"🇼🇸\",ioc:\"SAM\",languages:[\"eng\",\"smo\"],name:\"Samoa\",status:\"assigned\"},{alpha2:\"XK\",alpha3:\"\",countryCallingCodes:[\"+383\"],currencies:[\"EUR\"],emoji:\"\",ioc:\"KOS\",languages:[\"sqi\",\"srp\",\"bos\",\"tur\",\"rom\"],name:\"Kosovo\",status:\"user assigned\"},{alpha2:\"YD\",alpha3:\"YMD\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Yemen, Democratic\",status:\"deleted\"},{alpha2:\"YE\",alpha3:\"YEM\",countryCallingCodes:[\"+967\"],currencies:[\"YER\"],emoji:\"🇾🇪\",ioc:\"YEM\",languages:[\"ara\"],name:\"Yemen\",status:\"assigned\"},{alpha2:\"YT\",alpha3:\"MYT\",countryCallingCodes:[\"+262\"],currencies:[\"EUR\"],emoji:\"🇾🇹\",ioc:\"\",languages:[\"fra\"],name:\"Mayotte\",status:\"assigned\"},{alpha2:\"YU\",alpha3:\"YUG\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Yugoslavia\",status:\"deleted\"},{alpha2:\"ZA\",alpha3:\"ZAF\",countryCallingCodes:[\"+27\"],currencies:[\"ZAR\"],emoji:\"🇿🇦\",ioc:\"RSA\",languages:[\"afr\",\"eng\",\"nbl\",\"som\",\"tso\",\"ven\",\"xho\",\"zul\"],name:\"South Africa\",status:\"assigned\"},{alpha2:\"ZM\",alpha3:\"ZMB\",countryCallingCodes:[\"+260\"],currencies:[\"ZMW\"],emoji:\"🇿🇲\",ioc:\"ZAM\",languages:[\"eng\"],name:\"Zambia\",status:\"assigned\"},{alpha2:\"ZR\",alpha3:\"ZAR\",countryCallingCodes:[],currencies:[],ioc:\"\",languages:[],name:\"Zaire\",status:\"deleted\"},{alpha2:\"ZW\",alpha3:\"ZWE\",countryCallingCodes:[\"+263\"],currencies:[\"USD\",\"ZAR\",\"BWP\",\"GBP\",\"EUR\"],emoji:\"🇿🇼\",ioc:\"ZIM\",languages:[\"eng\",\"sna\",\"nde\"],name:\"Zimbabwe\",status:\"assigned\"}];","module.exports=[{code:\"AED\",decimals:2,name:\"United Arab Emirates dirham\",number:\"784\"},{code:\"AFN\",decimals:2,name:\"Afghan afghani\",number:\"971\"},{code:\"ALL\",decimals:2,name:\"Albanian lek\",number:\"8\"},{code:\"AMD\",decimals:2,name:\"Armenian dram\",number:\"51\"},{code:\"ANG\",decimals:2,name:\"Netherlands Antillean guilder\",number:\"532\"},{code:\"AOA\",decimals:2,name:\"Angolan kwanza\",number:\"973\"},{code:\"ARS\",decimals:2,name:\"Argentine peso\",number:\"32\"},{code:\"AUD\",decimals:2,name:\"Australian dollar\",number:\"36\"},{code:\"AWG\",decimals:2,name:\"Aruban florin\",number:\"533\"},{code:\"AZN\",decimals:2,name:\"Azerbaijani manat\",number:\"944\"},{code:\"BAM\",decimals:2,name:\"Bosnia and Herzegovina convertible mark\",number:\"977\"},{code:\"BBD\",decimals:2,name:\"Barbados dollar\",number:\"52\"},{code:\"BDT\",decimals:2,name:\"Bangladeshi taka\",number:\"50\"},{code:\"BGN\",decimals:2,name:\"Bulgarian lev\",number:\"975\"},{code:\"BHD\",decimals:3,name:\"Bahraini dinar\",number:\"48\"},{code:\"BIF\",decimals:0,name:\"Burundian franc\",number:\"108\"},{code:\"BMD\",decimals:2,name:\"Bermudian dollar (customarily known as Bermuda dollar)\",number:\"60\"},{code:\"BND\",decimals:2,name:\"Brunei dollar\",number:\"96\"},{code:\"BOB\",decimals:2,name:\"Boliviano\",number:\"68\"},{code:\"BOV\",decimals:2,name:\"Bolivian Mvdol (funds code)\",number:\"984\"},{code:\"BRL\",decimals:2,name:\"Brazilian real\",number:\"986\"},{code:\"BSD\",decimals:2,name:\"Bahamian dollar\",number:\"44\"},{code:\"BTN\",decimals:2,name:\"Bhutanese ngultrum\",number:\"64\"},{code:\"BWP\",decimals:2,name:\"Botswana pula\",number:\"72\"},{code:\"BYR\",decimals:0,name:\"Belarusian ruble\",number:\"974\"},{code:\"BZD\",decimals:2,name:\"Belize dollar\",number:\"84\"},{code:\"CAD\",decimals:2,name:\"Canadian dollar\",number:\"124\"},{code:\"CDF\",decimals:2,name:\"Congolese franc\",number:\"976\"},{code:\"CHE\",decimals:2,name:\"WIR Euro (complementary currency)\",number:\"947\"},{code:\"CHF\",decimals:2,name:\"Swiss franc\",number:\"756\"},{code:\"CHW\",decimals:2,name:\"WIR Franc (complementary currency)\",number:\"948\"},{code:\"CLF\",decimals:0,name:\"Unidad de Fomento (funds code)\",number:\"990\"},{code:\"CLP\",decimals:0,name:\"Chilean peso\",number:\"152\"},{code:\"CNY\",decimals:2,name:\"Chinese yuan\",number:\"156\"},{code:\"COP\",decimals:2,name:\"Colombian peso\",number:\"170\"},{code:\"COU\",decimals:2,name:\"Unidad de Valor Real\",number:\"970\"},{code:\"CRC\",decimals:2,name:\"Costa Rican colon\",number:\"188\"},{code:\"CUC\",decimals:2,name:\"Cuban convertible peso\",number:\"931\"},{code:\"CUP\",decimals:2,name:\"Cuban peso\",number:\"192\"},{code:\"CVE\",decimals:0,name:\"Cape Verde escudo\",number:\"132\"},{code:\"CZK\",decimals:2,name:\"Czech koruna\",number:\"203\"},{code:\"DJF\",decimals:0,name:\"Djiboutian franc\",number:\"262\"},{code:\"DKK\",decimals:2,name:\"Danish krone\",number:\"208\"},{code:\"DOP\",decimals:2,name:\"Dominican peso\",number:\"214\"},{code:\"DZD\",decimals:2,name:\"Algerian dinar\",number:\"12\"},{code:\"EGP\",decimals:2,name:\"Egyptian pound\",number:\"818\"},{code:\"ERN\",decimals:2,name:\"Eritrean nakfa\",number:\"232\"},{code:\"ETB\",decimals:2,name:\"Ethiopian birr\",number:\"230\"},{code:\"EUR\",decimals:2,name:\"Euro\",number:\"978\"},{code:\"FJD\",decimals:2,name:\"Fiji dollar\",number:\"242\"},{code:\"FKP\",decimals:2,name:\"Falkland Islands pound\",number:\"238\"},{code:\"GBP\",decimals:2,name:\"Pound sterling\",number:\"826\"},{code:\"GEL\",decimals:2,name:\"Georgian lari\",number:\"981\"},{code:\"GHS\",decimals:2,name:\"Ghanaian cedi\",number:\"936\"},{code:\"GIP\",decimals:2,name:\"Gibraltar pound\",number:\"292\"},{code:\"GMD\",decimals:2,name:\"Gambian dalasi\",number:\"270\"},{code:\"GNF\",decimals:0,name:\"Guinean franc\",number:\"324\"},{code:\"GTQ\",decimals:2,name:\"Guatemalan quetzal\",number:\"320\"},{code:\"GYD\",decimals:2,name:\"Guyanese dollar\",number:\"328\"},{code:\"HKD\",decimals:2,name:\"Hong Kong dollar\",number:\"344\"},{code:\"HNL\",decimals:2,name:\"Honduran lempira\",number:\"340\"},{code:\"HRK\",decimals:2,name:\"Croatian kuna\",number:\"191\"},{code:\"HTG\",decimals:2,name:\"Haitian gourde\",number:\"332\"},{code:\"HUF\",decimals:2,name:\"Hungarian forint\",number:\"348\"},{code:\"IDR\",decimals:2,name:\"Indonesian rupiah\",number:\"360\"},{code:\"ILS\",decimals:2,name:\"Israeli new shekel\",number:\"376\"},{code:\"INR\",decimals:2,name:\"Indian rupee\",number:\"356\"},{code:\"IQD\",decimals:3,name:\"Iraqi dinar\",number:\"368\"},{code:\"IRR\",decimals:0,name:\"Iranian rial\",number:\"364\"},{code:\"ISK\",decimals:0,name:\"Icelandic króna\",number:\"352\"},{code:\"JMD\",decimals:2,name:\"Jamaican dollar\",number:\"388\"},{code:\"JOD\",decimals:3,name:\"Jordanian dinar\",number:\"400\"},{code:\"JPY\",decimals:0,name:\"Japanese yen\",number:\"392\"},{code:\"KES\",decimals:2,name:\"Kenyan shilling\",number:\"404\"},{code:\"KGS\",decimals:2,name:\"Kyrgyzstani som\",number:\"417\"},{code:\"KHR\",decimals:2,name:\"Cambodian riel\",number:\"116\"},{code:\"KMF\",decimals:0,name:\"Comoro franc\",number:\"174\"},{code:\"KPW\",decimals:0,name:\"North Korean won\",number:\"408\"},{code:\"KRW\",decimals:0,name:\"South Korean won\",number:\"410\"},{code:\"KWD\",decimals:3,name:\"Kuwaiti dinar\",number:\"414\"},{code:\"KYD\",decimals:2,name:\"Cayman Islands dollar\",number:\"136\"},{code:\"KZT\",decimals:2,name:\"Kazakhstani tenge\",number:\"398\"},{code:\"LAK\",decimals:0,name:\"Lao kip\",number:\"418\"},{code:\"LBP\",decimals:0,name:\"Lebanese pound\",number:\"422\"},{code:\"LKR\",decimals:2,name:\"Sri Lankan rupee\",number:\"144\"},{code:\"LRD\",decimals:2,name:\"Liberian dollar\",number:\"430\"},{code:\"LSL\",decimals:2,name:\"Lesotho loti\",number:\"426\"},{code:\"LTL\",decimals:2,name:\"Lithuanian litas\",number:\"440\"},{code:\"LVL\",decimals:2,name:\"Latvian lats\",number:\"428\"},{code:\"LYD\",decimals:3,name:\"Libyan dinar\",number:\"434\"},{code:\"MAD\",decimals:2,name:\"Moroccan dirham\",number:\"504\"},{code:\"MDL\",decimals:2,name:\"Moldovan leu\",number:\"498\"},{code:\"MGA\",decimals:0,name:\"Malagasy ariary\",number:\"969\"},{code:\"MKD\",decimals:0,name:\"Macedonian denar\",number:\"807\"},{code:\"MMK\",decimals:0,name:\"Myanma kyat\",number:\"104\"},{code:\"MNT\",decimals:2,name:\"Mongolian tugrik\",number:\"496\"},{code:\"MOP\",decimals:2,name:\"Macanese pataca\",number:\"446\"},{code:\"MRO\",decimals:0,name:\"Mauritanian ouguiya\",number:\"478\"},{code:\"MUR\",decimals:2,name:\"Mauritian rupee\",number:\"480\"},{code:\"MVR\",decimals:2,name:\"Maldivian rufiyaa\",number:\"462\"},{code:\"MWK\",decimals:2,name:\"Malawian kwacha\",number:\"454\"},{code:\"MXN\",decimals:2,name:\"Mexican peso\",number:\"484\"},{code:\"MXV\",decimals:2,name:\"Mexican Unidad de Inversion (UDI) (funds code)\",number:\"979\"},{code:\"MYR\",decimals:2,name:\"Malaysian ringgit\",number:\"458\"},{code:\"MZN\",decimals:2,name:\"Mozambican metical\",number:\"943\"},{code:\"NAD\",decimals:2,name:\"Namibian dollar\",number:\"516\"},{code:\"NGN\",decimals:2,name:\"Nigerian naira\",number:\"566\"},{code:\"NIO\",decimals:2,name:\"Nicaraguan córdoba\",number:\"558\"},{code:\"NOK\",decimals:2,name:\"Norwegian krone\",number:\"578\"},{code:\"NPR\",decimals:2,name:\"Nepalese rupee\",number:\"524\"},{code:\"NZD\",decimals:2,name:\"New Zealand dollar\",number:\"554\"},{code:\"OMR\",decimals:3,name:\"Omani rial\",number:\"512\"},{code:\"PAB\",decimals:2,name:\"Panamanian balboa\",number:\"590\"},{code:\"PEN\",decimals:2,name:\"Peruvian nuevo sol\",number:\"604\"},{code:\"PGK\",decimals:2,name:\"Papua New Guinean kina\",number:\"598\"},{code:\"PHP\",decimals:2,name:\"Philippine peso\",number:\"608\"},{code:\"PKR\",decimals:2,name:\"Pakistani rupee\",number:\"586\"},{code:\"PLN\",decimals:2,name:\"Polish złoty\",number:\"985\"},{code:\"PYG\",decimals:0,name:\"Paraguayan guaraní\",number:\"600\"},{code:\"QAR\",decimals:2,name:\"Qatari riyal\",number:\"634\"},{code:\"RON\",decimals:2,name:\"Romanian new leu\",number:\"946\"},{code:\"RSD\",decimals:2,name:\"Serbian dinar\",number:\"941\"},{code:\"RUB\",decimals:2,name:\"Russian rouble\",number:\"643\"},{code:\"RWF\",decimals:0,name:\"Rwandan franc\",number:\"646\"},{code:\"SAR\",decimals:2,name:\"Saudi riyal\",number:\"682\"},{code:\"SBD\",decimals:2,name:\"Solomon Islands dollar\",number:\"90\"},{code:\"SCR\",decimals:2,name:\"Seychelles rupee\",number:\"690\"},{code:\"SDG\",decimals:2,name:\"Sudanese pound\",number:\"938\"},{code:\"SEK\",decimals:2,name:\"Swedish krona/kronor\",number:\"752\"},{code:\"SGD\",decimals:2,name:\"Singapore dollar\",number:\"702\"},{code:\"SHP\",decimals:2,name:\"Saint Helena pound\",number:\"654\"},{code:\"SLL\",decimals:0,name:\"Sierra Leonean leone\",number:\"694\"},{code:\"SOS\",decimals:2,name:\"Somali shilling\",number:\"706\"},{code:\"SRD\",decimals:2,name:\"Surinamese dollar\",number:\"968\"},{code:\"SSP\",decimals:2,name:\"South Sudanese pound\",number:\"728\"},{code:\"STD\",decimals:0,name:\"São Tomé and Príncipe dobra\",number:\"678\"},{code:\"SYP\",decimals:2,name:\"Syrian pound\",number:\"760\"},{code:\"SZL\",decimals:2,name:\"Swazi lilangeni\",number:\"748\"},{code:\"THB\",decimals:2,name:\"Thai baht\",number:\"764\"},{code:\"TJS\",decimals:2,name:\"Tajikistani somoni\",number:\"972\"},{code:\"TMT\",decimals:2,name:\"Turkmenistani manat\",number:\"934\"},{code:\"TND\",decimals:3,name:\"Tunisian dinar\",number:\"788\"},{code:\"TOP\",decimals:2,name:\"Tongan paʻanga\",number:\"776\"},{code:\"TRY\",decimals:2,name:\"Turkish lira\",number:\"949\"},{code:\"TTD\",decimals:2,name:\"Trinidad and Tobago dollar\",number:\"780\"},{code:\"TWD\",decimals:2,name:\"New Taiwan dollar\",number:\"901\"},{code:\"TZS\",decimals:2,name:\"Tanzanian shilling\",number:\"834\"},{code:\"UAH\",decimals:2,name:\"Ukrainian hryvnia\",number:\"980\"},{code:\"UGX\",decimals:2,name:\"Ugandan shilling\",number:\"800\"},{code:\"USD\",decimals:2,name:\"United States dollar\",number:\"840\"},{code:\"USN\",decimals:2,name:\"United States dollar (next day) (funds code)\",number:\"997\"},{code:\"USS\",decimals:2,name:\"United States dollar (same day) (funds code) (one source[who?] claims it is no longer used, but it is still on the ISO 4217-MA list)\",number:\"998\"},{code:\"UYI\",decimals:0,name:\"Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)\",number:\"940\"},{code:\"UYU\",decimals:2,name:\"Uruguayan peso\",number:\"858\"},{code:\"UZS\",decimals:2,name:\"Uzbekistan som\",number:\"860\"},{code:\"VEF\",decimals:2,name:\"Venezuelan bolívar fuerte\",number:\"937\"},{code:\"VND\",decimals:0,name:\"Vietnamese dong\",number:\"704\"},{code:\"VUV\",decimals:0,name:\"Vanuatu vatu\",number:\"548\"},{code:\"WST\",decimals:2,name:\"Samoan tala\",number:\"882\"},{code:\"XAF\",decimals:0,name:\"CFA franc BEAC\",number:\"950\"},{code:\"XAG\",decimals:null,name:\"Silver (one troy ounce)\",number:\"961\"},{code:\"XAU\",decimals:null,name:\"Gold (one troy ounce)\",number:\"959\"},{code:\"XBA\",decimals:null,name:\"European Composite Unit (EURCO) (bond market unit)\",number:\"955\"},{code:\"XBB\",decimals:null,name:\"European Monetary Unit (E.M.U.-6) (bond market unit)\",number:\"956\"},{code:\"XBC\",decimals:null,name:\"European Unit of Account 9 (E.U.A.-9) (bond market unit)\",number:\"957\"},{code:\"XBD\",decimals:null,name:\"European Unit of Account 17 (E.U.A.-17) (bond market unit)\",number:\"958\"},{code:\"XCD\",decimals:2,name:\"East Caribbean dollar\",number:\"951\"},{code:\"XDR\",decimals:null,name:\"Special drawing rights\",number:\"960\"},{code:\"XFU\",decimals:null,name:\"UIC franc (special settlement currency)\",number:\"Nil\"},{code:\"XOF\",decimals:0,name:\"CFA franc BCEAO\",number:\"952\"},{code:\"XPD\",decimals:null,name:\"Palladium (one troy ounce)\",number:\"964\"},{code:\"XPF\",decimals:0,name:\"CFP franc\",number:\"953\"},{code:\"XPT\",decimals:null,name:\"Platinum (one troy ounce)\",number:\"962\"},{code:\"XTS\",decimals:null,name:\"Code reserved for testing purposes\",number:\"963\"},{code:\"XXX\",decimals:null,name:\"No currency\",number:\"999\"},{code:\"YER\",decimals:2,name:\"Yemeni rial\",number:\"886\"},{code:\"ZAR\",decimals:2,name:\"South African rand\",number:\"710\"},{code:\"ZMW\",decimals:2,name:\"Zambian kwacha\",number:\"967\"}];","module.exports=[{alpha2:\"aa\",alpha3:\"aar\",bibliographic:\"\",name:\"Afar\"},{alpha2:\"ab\",alpha3:\"abk\",bibliographic:\"\",name:\"Abkhazian\"},{alpha2:\"\",alpha3:\"ace\",bibliographic:\"\",name:\"Achinese\"},{alpha2:\"\",alpha3:\"ach\",bibliographic:\"\",name:\"Acoli\"},{alpha2:\"\",alpha3:\"ada\",bibliographic:\"\",name:\"Adangme\"},{alpha2:\"\",alpha3:\"ady\",bibliographic:\"\",name:\"Adygei\"},{alpha2:\"\",alpha3:\"ady\",bibliographic:\"\",name:\"Adyghe\"},{alpha2:\"\",alpha3:\"afa\",bibliographic:\"\",name:\"Afro-Asiatic languages\"},{alpha2:\"\",alpha3:\"afh\",bibliographic:\"\",name:\"Afrihili\"},{alpha2:\"af\",alpha3:\"afr\",bibliographic:\"\",name:\"Afrikaans\"},{alpha2:\"\",alpha3:\"ain\",bibliographic:\"\",name:\"Ainu\"},{alpha2:\"ak\",alpha3:\"aka\",bibliographic:\"\",name:\"Akan\"},{alpha2:\"\",alpha3:\"akk\",bibliographic:\"\",name:\"Akkadian\"},{alpha2:\"\",alpha3:\"ale\",bibliographic:\"\",name:\"Aleut\"},{alpha2:\"\",alpha3:\"alg\",bibliographic:\"\",name:\"Algonquian languages\"},{alpha2:\"\",alpha3:\"alt\",bibliographic:\"\",name:\"Southern Altai\"},{alpha2:\"am\",alpha3:\"amh\",bibliographic:\"\",name:\"Amharic\"},{alpha2:\"\",alpha3:\"ang\",bibliographic:\"\",name:\"English, Old (ca.450-1100)\"},{alpha2:\"\",alpha3:\"anp\",bibliographic:\"\",name:\"Angika\"},{alpha2:\"\",alpha3:\"apa\",bibliographic:\"\",name:\"Apache languages\"},{alpha2:\"ar\",alpha3:\"ara\",bibliographic:\"\",name:\"Arabic\"},{alpha2:\"\",alpha3:\"arc\",bibliographic:\"\",name:\"Imperial Aramaic (700-300 BCE)\"},{alpha2:\"\",alpha3:\"arc\",bibliographic:\"\",name:\"Official Aramaic (700-300 BCE)\"},{alpha2:\"an\",alpha3:\"arg\",bibliographic:\"\",name:\"Aragonese\"},{alpha2:\"\",alpha3:\"arn\",bibliographic:\"\",name:\"Mapuche\"},{alpha2:\"\",alpha3:\"arn\",bibliographic:\"\",name:\"Mapudungun\"},{alpha2:\"\",alpha3:\"arp\",bibliographic:\"\",name:\"Arapaho\"},{alpha2:\"\",alpha3:\"art\",bibliographic:\"\",name:\"Artificial languages\"},{alpha2:\"\",alpha3:\"arw\",bibliographic:\"\",name:\"Arawak\"},{alpha2:\"as\",alpha3:\"asm\",bibliographic:\"\",name:\"Assamese\"},{alpha2:\"\",alpha3:\"ast\",bibliographic:\"\",name:\"Asturian\"},{alpha2:\"\",alpha3:\"ast\",bibliographic:\"\",name:\"Asturleonese\"},{alpha2:\"\",alpha3:\"ast\",bibliographic:\"\",name:\"Bable\"},{alpha2:\"\",alpha3:\"ast\",bibliographic:\"\",name:\"Leonese\"},{alpha2:\"\",alpha3:\"ath\",bibliographic:\"\",name:\"Athapascan languages\"},{alpha2:\"\",alpha3:\"aus\",bibliographic:\"\",name:\"Australian languages\"},{alpha2:\"av\",alpha3:\"ava\",bibliographic:\"\",name:\"Avaric\"},{alpha2:\"ae\",alpha3:\"ave\",bibliographic:\"\",name:\"Avestan\"},{alpha2:\"\",alpha3:\"awa\",bibliographic:\"\",name:\"Awadhi\"},{alpha2:\"ay\",alpha3:\"aym\",bibliographic:\"\",name:\"Aymara\"},{alpha2:\"az\",alpha3:\"aze\",bibliographic:\"\",name:\"Azerbaijani\"},{alpha2:\"\",alpha3:\"bad\",bibliographic:\"\",name:\"Banda languages\"},{alpha2:\"\",alpha3:\"bai\",bibliographic:\"\",name:\"Bamileke languages\"},{alpha2:\"ba\",alpha3:\"bak\",bibliographic:\"\",name:\"Bashkir\"},{alpha2:\"\",alpha3:\"bal\",bibliographic:\"\",name:\"Baluchi\"},{alpha2:\"bm\",alpha3:\"bam\",bibliographic:\"\",name:\"Bambara\"},{alpha2:\"\",alpha3:\"ban\",bibliographic:\"\",name:\"Balinese\"},{alpha2:\"\",alpha3:\"bas\",bibliographic:\"\",name:\"Basa\"},{alpha2:\"\",alpha3:\"bat\",bibliographic:\"\",name:\"Baltic languages\"},{alpha2:\"\",alpha3:\"bej\",bibliographic:\"\",name:\"Bedawiyet\"},{alpha2:\"\",alpha3:\"bej\",bibliographic:\"\",name:\"Beja\"},{alpha2:\"be\",alpha3:\"bel\",bibliographic:\"\",name:\"Belarusian\"},{alpha2:\"\",alpha3:\"bem\",bibliographic:\"\",name:\"Bemba\"},{alpha2:\"bn\",alpha3:\"ben\",bibliographic:\"\",name:\"Bengali\"},{alpha2:\"\",alpha3:\"ber\",bibliographic:\"\",name:\"Berber languages\"},{alpha2:\"\",alpha3:\"bho\",bibliographic:\"\",name:\"Bhojpuri\"},{alpha2:\"bh\",alpha3:\"bih\",bibliographic:\"\",name:\"Bihari languages\"},{alpha2:\"\",alpha3:\"bik\",bibliographic:\"\",name:\"Bikol\"},{alpha2:\"\",alpha3:\"bin\",bibliographic:\"\",name:\"Bini\"},{alpha2:\"\",alpha3:\"bin\",bibliographic:\"\",name:\"Edo\"},{alpha2:\"bi\",alpha3:\"bis\",bibliographic:\"\",name:\"Bislama\"},{alpha2:\"\",alpha3:\"bla\",bibliographic:\"\",name:\"Siksika\"},{alpha2:\"\",alpha3:\"bnt\",bibliographic:\"\",name:\"Bantu languages\"},{alpha2:\"bo\",alpha3:\"bod\",bibliographic:\"tib\",name:\"Tibetan\"},{alpha2:\"bs\",alpha3:\"bos\",bibliographic:\"\",name:\"Bosnian\"},{alpha2:\"\",alpha3:\"bra\",bibliographic:\"\",name:\"Braj\"},{alpha2:\"br\",alpha3:\"bre\",bibliographic:\"\",name:\"Breton\"},{alpha2:\"\",alpha3:\"btk\",bibliographic:\"\",name:\"Batak languages\"},{alpha2:\"\",alpha3:\"bua\",bibliographic:\"\",name:\"Buriat\"},{alpha2:\"\",alpha3:\"bug\",bibliographic:\"\",name:\"Buginese\"},{alpha2:\"bg\",alpha3:\"bul\",bibliographic:\"\",name:\"Bulgarian\"},{alpha2:\"\",alpha3:\"byn\",bibliographic:\"\",name:\"Bilin\"},{alpha2:\"\",alpha3:\"byn\",bibliographic:\"\",name:\"Blin\"},{alpha2:\"\",alpha3:\"cad\",bibliographic:\"\",name:\"Caddo\"},{alpha2:\"\",alpha3:\"cai\",bibliographic:\"\",name:\"Central American Indian languages\"},{alpha2:\"\",alpha3:\"car\",bibliographic:\"\",name:\"Galibi Carib\"},{alpha2:\"ca\",alpha3:\"cat\",bibliographic:\"\",name:\"Catalan\"},{alpha2:\"ca\",alpha3:\"cat\",bibliographic:\"\",name:\"Valencian\"},{alpha2:\"\",alpha3:\"cau\",bibliographic:\"\",name:\"Caucasian languages\"},{alpha2:\"\",alpha3:\"ceb\",bibliographic:\"\",name:\"Cebuano\"},{alpha2:\"\",alpha3:\"cel\",bibliographic:\"\",name:\"Celtic languages\"},{alpha2:\"cs\",alpha3:\"ces\",bibliographic:\"cze\",name:\"Czech\"},{alpha2:\"ch\",alpha3:\"cha\",bibliographic:\"\",name:\"Chamorro\"},{alpha2:\"\",alpha3:\"chb\",bibliographic:\"\",name:\"Chibcha\"},{alpha2:\"ce\",alpha3:\"che\",bibliographic:\"\",name:\"Chechen\"},{alpha2:\"\",alpha3:\"chg\",bibliographic:\"\",name:\"Chagatai\"},{alpha2:\"\",alpha3:\"chk\",bibliographic:\"\",name:\"Chuukese\"},{alpha2:\"\",alpha3:\"chm\",bibliographic:\"\",name:\"Mari\"},{alpha2:\"\",alpha3:\"chn\",bibliographic:\"\",name:\"Chinook jargon\"},{alpha2:\"\",alpha3:\"cho\",bibliographic:\"\",name:\"Choctaw\"},{alpha2:\"\",alpha3:\"chp\",bibliographic:\"\",name:\"Chipewyan\"},{alpha2:\"\",alpha3:\"chp\",bibliographic:\"\",name:\"Dene Suline\"},{alpha2:\"\",alpha3:\"chr\",bibliographic:\"\",name:\"Cherokee\"},{alpha2:\"cu\",alpha3:\"chu\",bibliographic:\"\",name:\"Church Slavic\"},{alpha2:\"cu\",alpha3:\"chu\",bibliographic:\"\",name:\"Church Slavonic\"},{alpha2:\"cu\",alpha3:\"chu\",bibliographic:\"\",name:\"Old Bulgarian\"},{alpha2:\"cu\",alpha3:\"chu\",bibliographic:\"\",name:\"Old Church Slavonic\"},{alpha2:\"cu\",alpha3:\"chu\",bibliographic:\"\",name:\"Old Slavonic\"},{alpha2:\"cv\",alpha3:\"chv\",bibliographic:\"\",name:\"Chuvash\"},{alpha2:\"\",alpha3:\"chy\",bibliographic:\"\",name:\"Cheyenne\"},{alpha2:\"\",alpha3:\"cmc\",bibliographic:\"\",name:\"Chamic languages\"},{alpha2:\"\",alpha3:\"cop\",bibliographic:\"\",name:\"Coptic\"},{alpha2:\"kw\",alpha3:\"cor\",bibliographic:\"\",name:\"Cornish\"},{alpha2:\"co\",alpha3:\"cos\",bibliographic:\"\",name:\"Corsican\"},{alpha2:\"\",alpha3:\"cpe\",bibliographic:\"\",name:\"Creoles and pidgins, English based\"},{alpha2:\"\",alpha3:\"cpf\",bibliographic:\"\",name:\"Creoles and pidgins, French-based\"},{alpha2:\"\",alpha3:\"cpp\",bibliographic:\"\",name:\"Creoles and pidgins, Portuguese-based\"},{alpha2:\"cr\",alpha3:\"cre\",bibliographic:\"\",name:\"Cree\"},{alpha2:\"\",alpha3:\"crh\",bibliographic:\"\",name:\"Crimean Tatar\"},{alpha2:\"\",alpha3:\"crh\",bibliographic:\"\",name:\"Crimean Turkish\"},{alpha2:\"\",alpha3:\"crp\",bibliographic:\"\",name:\"Creoles and pidgins\"},{alpha2:\"\",alpha3:\"csb\",bibliographic:\"\",name:\"Kashubian\"},{alpha2:\"\",alpha3:\"cus\",bibliographic:\"\",name:\"Cushitic languages\"},{alpha2:\"cy\",alpha3:\"cym\",bibliographic:\"wel\",name:\"Welsh\"},{alpha2:\"\",alpha3:\"dak\",bibliographic:\"\",name:\"Dakota\"},{alpha2:\"da\",alpha3:\"dan\",bibliographic:\"\",name:\"Danish\"},{alpha2:\"\",alpha3:\"dar\",bibliographic:\"\",name:\"Dargwa\"},{alpha2:\"\",alpha3:\"day\",bibliographic:\"\",name:\"Land Dayak languages\"},{alpha2:\"\",alpha3:\"del\",bibliographic:\"\",name:\"Delaware\"},{alpha2:\"\",alpha3:\"den\",bibliographic:\"\",name:\"Slave (Athapascan)\"},{alpha2:\"de\",alpha3:\"deu\",bibliographic:\"ger\",name:\"German\"},{alpha2:\"\",alpha3:\"dgr\",bibliographic:\"\",name:\"Dogrib\"},{alpha2:\"\",alpha3:\"din\",bibliographic:\"\",name:\"Dinka\"},{alpha2:\"dv\",alpha3:\"div\",bibliographic:\"\",name:\"Dhivehi\"},{alpha2:\"dv\",alpha3:\"div\",bibliographic:\"\",name:\"Divehi\"},{alpha2:\"dv\",alpha3:\"div\",bibliographic:\"\",name:\"Maldivian\"},{alpha2:\"\",alpha3:\"doi\",bibliographic:\"\",name:\"Dogri\"},{alpha2:\"\",alpha3:\"dra\",bibliographic:\"\",name:\"Dravidian languages\"},{alpha2:\"\",alpha3:\"dsb\",bibliographic:\"\",name:\"Lower Sorbian\"},{alpha2:\"\",alpha3:\"dua\",bibliographic:\"\",name:\"Duala\"},{alpha2:\"\",alpha3:\"dum\",bibliographic:\"\",name:\"Dutch, Middle (ca.1050-1350)\"},{alpha2:\"\",alpha3:\"dyu\",bibliographic:\"\",name:\"Dyula\"},{alpha2:\"dz\",alpha3:\"dzo\",bibliographic:\"\",name:\"Dzongkha\"},{alpha2:\"\",alpha3:\"efi\",bibliographic:\"\",name:\"Efik\"},{alpha2:\"\",alpha3:\"egy\",bibliographic:\"\",name:\"Egyptian (Ancient)\"},{alpha2:\"\",alpha3:\"eka\",bibliographic:\"\",name:\"Ekajuk\"},{alpha2:\"el\",alpha3:\"ell\",bibliographic:\"gre\",name:\"Greek, Modern (1453-)\"},{alpha2:\"\",alpha3:\"elx\",bibliographic:\"\",name:\"Elamite\"},{alpha2:\"en\",alpha3:\"eng\",bibliographic:\"\",name:\"English\"},{alpha2:\"\",alpha3:\"enm\",bibliographic:\"\",name:\"English, Middle (1100-1500)\"},{alpha2:\"eo\",alpha3:\"epo\",bibliographic:\"\",name:\"Esperanto\"},{alpha2:\"et\",alpha3:\"est\",bibliographic:\"\",name:\"Estonian\"},{alpha2:\"eu\",alpha3:\"eus\",bibliographic:\"baq\",name:\"Basque\"},{alpha2:\"ee\",alpha3:\"ewe\",bibliographic:\"\",name:\"Ewe\"},{alpha2:\"\",alpha3:\"ewo\",bibliographic:\"\",name:\"Ewondo\"},{alpha2:\"\",alpha3:\"fan\",bibliographic:\"\",name:\"Fang\"},{alpha2:\"fo\",alpha3:\"fao\",bibliographic:\"\",name:\"Faroese\"},{alpha2:\"fa\",alpha3:\"fas\",bibliographic:\"per\",name:\"Persian\"},{alpha2:\"\",alpha3:\"fat\",bibliographic:\"\",name:\"Fanti\"},{alpha2:\"fj\",alpha3:\"fij\",bibliographic:\"\",name:\"Fijian\"},{alpha2:\"\",alpha3:\"fil\",bibliographic:\"\",name:\"Filipino\"},{alpha2:\"\",alpha3:\"fil\",bibliographic:\"\",name:\"Pilipino\"},{alpha2:\"fi\",alpha3:\"fin\",bibliographic:\"\",name:\"Finnish\"},{alpha2:\"\",alpha3:\"fiu\",bibliographic:\"\",name:\"Finno-Ugrian languages\"},{alpha2:\"\",alpha3:\"fon\",bibliographic:\"\",name:\"Fon\"},{alpha2:\"fr\",alpha3:\"fra\",bibliographic:\"fre\",name:\"French\"},{alpha2:\"\",alpha3:\"frm\",bibliographic:\"\",name:\"French, Middle (ca.1400-1600)\"},{alpha2:\"\",alpha3:\"fro\",bibliographic:\"\",name:\"French, Old (842-ca.1400)\"},{alpha2:\"\",alpha3:\"frr\",bibliographic:\"\",name:\"Northern Frisian\"},{alpha2:\"\",alpha3:\"frs\",bibliographic:\"\",name:\"Eastern Frisian\"},{alpha2:\"fy\",alpha3:\"fry\",bibliographic:\"\",name:\"Western Frisian\"},{alpha2:\"ff\",alpha3:\"ful\",bibliographic:\"\",name:\"Fulah\"},{alpha2:\"\",alpha3:\"fur\",bibliographic:\"\",name:\"Friulian\"},{alpha2:\"\",alpha3:\"gaa\",bibliographic:\"\",name:\"Ga\"},{alpha2:\"\",alpha3:\"gay\",bibliographic:\"\",name:\"Gayo\"},{alpha2:\"\",alpha3:\"gba\",bibliographic:\"\",name:\"Gbaya\"},{alpha2:\"\",alpha3:\"gem\",bibliographic:\"\",name:\"Germanic languages\"},{alpha2:\"\",alpha3:\"gez\",bibliographic:\"\",name:\"Geez\"},{alpha2:\"\",alpha3:\"gil\",bibliographic:\"\",name:\"Gilbertese\"},{alpha2:\"gd\",alpha3:\"gla\",bibliographic:\"\",name:\"Gaelic\"},{alpha2:\"gd\",alpha3:\"gla\",bibliographic:\"\",name:\"Scottish Gaelic\"},{alpha2:\"ga\",alpha3:\"gle\",bibliographic:\"\",name:\"Irish\"},{alpha2:\"gl\",alpha3:\"glg\",bibliographic:\"\",name:\"Galician\"},{alpha2:\"gv\",alpha3:\"glv\",bibliographic:\"\",name:\"Manx\"},{alpha2:\"\",alpha3:\"gmh\",bibliographic:\"\",name:\"German, Middle High (ca.1050-1500)\"},{alpha2:\"\",alpha3:\"goh\",bibliographic:\"\",name:\"German, Old High (ca.750-1050)\"},{alpha2:\"\",alpha3:\"gon\",bibliographic:\"\",name:\"Gondi\"},{alpha2:\"\",alpha3:\"gor\",bibliographic:\"\",name:\"Gorontalo\"},{alpha2:\"\",alpha3:\"got\",bibliographic:\"\",name:\"Gothic\"},{alpha2:\"\",alpha3:\"grb\",bibliographic:\"\",name:\"Grebo\"},{alpha2:\"\",alpha3:\"grc\",bibliographic:\"\",name:\"Greek, Ancient (to 1453)\"},{alpha2:\"gn\",alpha3:\"grn\",bibliographic:\"\",name:\"Guarani\"},{alpha2:\"\",alpha3:\"gsw\",bibliographic:\"\",name:\"Alemannic\"},{alpha2:\"\",alpha3:\"gsw\",bibliographic:\"\",name:\"Alsatian\"},{alpha2:\"\",alpha3:\"gsw\",bibliographic:\"\",name:\"Swiss German\"},{alpha2:\"gu\",alpha3:\"guj\",bibliographic:\"\",name:\"Gujarati\"},{alpha2:\"\",alpha3:\"gwi\",bibliographic:\"\",name:\"Gwich'in\"},{alpha2:\"\",alpha3:\"hai\",bibliographic:\"\",name:\"Haida\"},{alpha2:\"ht\",alpha3:\"hat\",bibliographic:\"\",name:\"Haitian\"},{alpha2:\"ht\",alpha3:\"hat\",bibliographic:\"\",name:\"Haitian Creole\"},{alpha2:\"ha\",alpha3:\"hau\",bibliographic:\"\",name:\"Hausa\"},{alpha2:\"\",alpha3:\"haw\",bibliographic:\"\",name:\"Hawaiian\"},{alpha2:\"he\",alpha3:\"heb\",bibliographic:\"\",name:\"Hebrew\"},{alpha2:\"hz\",alpha3:\"her\",bibliographic:\"\",name:\"Herero\"},{alpha2:\"\",alpha3:\"hil\",bibliographic:\"\",name:\"Hiligaynon\"},{alpha2:\"\",alpha3:\"him\",bibliographic:\"\",name:\"Himachali languages\"},{alpha2:\"\",alpha3:\"him\",bibliographic:\"\",name:\"Western Pahari languages\"},{alpha2:\"hi\",alpha3:\"hin\",bibliographic:\"\",name:\"Hindi\"},{alpha2:\"\",alpha3:\"hit\",bibliographic:\"\",name:\"Hittite\"},{alpha2:\"\",alpha3:\"hmn\",bibliographic:\"\",name:\"Hmong\"},{alpha2:\"\",alpha3:\"hmn\",bibliographic:\"\",name:\"Mong\"},{alpha2:\"ho\",alpha3:\"hmo\",bibliographic:\"\",name:\"Hiri Motu\"},{alpha2:\"hr\",alpha3:\"hrv\",bibliographic:\"\",name:\"Croatian\"},{alpha2:\"\",alpha3:\"hsb\",bibliographic:\"\",name:\"Upper Sorbian\"},{alpha2:\"hu\",alpha3:\"hun\",bibliographic:\"\",name:\"Hungarian\"},{alpha2:\"\",alpha3:\"hup\",bibliographic:\"\",name:\"Hupa\"},{alpha2:\"hy\",alpha3:\"hye\",bibliographic:\"arm\",name:\"Armenian\"},{alpha2:\"\",alpha3:\"iba\",bibliographic:\"\",name:\"Iban\"},{alpha2:\"ig\",alpha3:\"ibo\",bibliographic:\"\",name:\"Igbo\"},{alpha2:\"io\",alpha3:\"ido\",bibliographic:\"\",name:\"Ido\"},{alpha2:\"ii\",alpha3:\"iii\",bibliographic:\"\",name:\"Nuosu\"},{alpha2:\"ii\",alpha3:\"iii\",bibliographic:\"\",name:\"Sichuan Yi\"},{alpha2:\"\",alpha3:\"ijo\",bibliographic:\"\",name:\"Ijo languages\"},{alpha2:\"iu\",alpha3:\"iku\",bibliographic:\"\",name:\"Inuktitut\"},{alpha2:\"ie\",alpha3:\"ile\",bibliographic:\"\",name:\"Interlingue\"},{alpha2:\"ie\",alpha3:\"ile\",bibliographic:\"\",name:\"Occidental\"},{alpha2:\"\",alpha3:\"ilo\",bibliographic:\"\",name:\"Iloko\"},{alpha2:\"ia\",alpha3:\"ina\",bibliographic:\"\",name:\"Interlingua (International Auxiliary Language Association)\"},{alpha2:\"\",alpha3:\"inc\",bibliographic:\"\",name:\"Indic languages\"},{alpha2:\"id\",alpha3:\"ind\",bibliographic:\"\",name:\"Indonesian\"},{alpha2:\"\",alpha3:\"ine\",bibliographic:\"\",name:\"Indo-European languages\"},{alpha2:\"\",alpha3:\"inh\",bibliographic:\"\",name:\"Ingush\"},{alpha2:\"ik\",alpha3:\"ipk\",bibliographic:\"\",name:\"Inupiaq\"},{alpha2:\"\",alpha3:\"ira\",bibliographic:\"\",name:\"Iranian languages\"},{alpha2:\"\",alpha3:\"iro\",bibliographic:\"\",name:\"Iroquoian languages\"},{alpha2:\"is\",alpha3:\"isl\",bibliographic:\"ice\",name:\"Icelandic\"},{alpha2:\"it\",alpha3:\"ita\",bibliographic:\"\",name:\"Italian\"},{alpha2:\"jv\",alpha3:\"jav\",bibliographic:\"\",name:\"Javanese\"},{alpha2:\"\",alpha3:\"jbo\",bibliographic:\"\",name:\"Lojban\"},{alpha2:\"ja\",alpha3:\"jpn\",bibliographic:\"\",name:\"Japanese\"},{alpha2:\"\",alpha3:\"jpr\",bibliographic:\"\",name:\"Judeo-Persian\"},{alpha2:\"\",alpha3:\"jrb\",bibliographic:\"\",name:\"Judeo-Arabic\"},{alpha2:\"\",alpha3:\"kaa\",bibliographic:\"\",name:\"Kara-Kalpak\"},{alpha2:\"\",alpha3:\"kab\",bibliographic:\"\",name:\"Kabyle\"},{alpha2:\"\",alpha3:\"kac\",bibliographic:\"\",name:\"Jingpho\"},{alpha2:\"\",alpha3:\"kac\",bibliographic:\"\",name:\"Kachin\"},{alpha2:\"kl\",alpha3:\"kal\",bibliographic:\"\",name:\"Greenlandic\"},{alpha2:\"kl\",alpha3:\"kal\",bibliographic:\"\",name:\"Kalaallisut\"},{alpha2:\"\",alpha3:\"kam\",bibliographic:\"\",name:\"Kamba\"},{alpha2:\"kn\",alpha3:\"kan\",bibliographic:\"\",name:\"Kannada\"},{alpha2:\"\",alpha3:\"kar\",bibliographic:\"\",name:\"Karen languages\"},{alpha2:\"ks\",alpha3:\"kas\",bibliographic:\"\",name:\"Kashmiri\"},{alpha2:\"ka\",alpha3:\"kat\",bibliographic:\"geo\",name:\"Georgian\"},{alpha2:\"kr\",alpha3:\"kau\",bibliographic:\"\",name:\"Kanuri\"},{alpha2:\"\",alpha3:\"kaw\",bibliographic:\"\",name:\"Kawi\"},{alpha2:\"kk\",alpha3:\"kaz\",bibliographic:\"\",name:\"Kazakh\"},{alpha2:\"\",alpha3:\"kbd\",bibliographic:\"\",name:\"Kabardian\"},{alpha2:\"\",alpha3:\"kha\",bibliographic:\"\",name:\"Khasi\"},{alpha2:\"\",alpha3:\"khi\",bibliographic:\"\",name:\"Khoisan languages\"},{alpha2:\"km\",alpha3:\"khm\",bibliographic:\"\",name:\"Central Khmer\"},{alpha2:\"\",alpha3:\"kho\",bibliographic:\"\",name:\"Khotanese\"},{alpha2:\"\",alpha3:\"kho\",bibliographic:\"\",name:\"Sakan\"},{alpha2:\"ki\",alpha3:\"kik\",bibliographic:\"\",name:\"Gikuyu\"},{alpha2:\"ki\",alpha3:\"kik\",bibliographic:\"\",name:\"Kikuyu\"},{alpha2:\"rw\",alpha3:\"kin\",bibliographic:\"\",name:\"Kinyarwanda\"},{alpha2:\"ky\",alpha3:\"kir\",bibliographic:\"\",name:\"Kirghiz\"},{alpha2:\"ky\",alpha3:\"kir\",bibliographic:\"\",name:\"Kyrgyz\"},{alpha2:\"\",alpha3:\"kmb\",bibliographic:\"\",name:\"Kimbundu\"},{alpha2:\"\",alpha3:\"kok\",bibliographic:\"\",name:\"Konkani\"},{alpha2:\"kv\",alpha3:\"kom\",bibliographic:\"\",name:\"Komi\"},{alpha2:\"kg\",alpha3:\"kon\",bibliographic:\"\",name:\"Kongo\"},{alpha2:\"ko\",alpha3:\"kor\",bibliographic:\"\",name:\"Korean\"},{alpha2:\"\",alpha3:\"kos\",bibliographic:\"\",name:\"Kosraean\"},{alpha2:\"\",alpha3:\"kpe\",bibliographic:\"\",name:\"Kpelle\"},{alpha2:\"\",alpha3:\"krc\",bibliographic:\"\",name:\"Karachay-Balkar\"},{alpha2:\"\",alpha3:\"krl\",bibliographic:\"\",name:\"Karelian\"},{alpha2:\"\",alpha3:\"kro\",bibliographic:\"\",name:\"Kru languages\"},{alpha2:\"\",alpha3:\"kru\",bibliographic:\"\",name:\"Kurukh\"},{alpha2:\"kj\",alpha3:\"kua\",bibliographic:\"\",name:\"Kuanyama\"},{alpha2:\"kj\",alpha3:\"kua\",bibliographic:\"\",name:\"Kwanyama\"},{alpha2:\"\",alpha3:\"kum\",bibliographic:\"\",name:\"Kumyk\"},{alpha2:\"ku\",alpha3:\"kur\",bibliographic:\"\",name:\"Kurdish\"},{alpha2:\"\",alpha3:\"kut\",bibliographic:\"\",name:\"Kutenai\"},{alpha2:\"\",alpha3:\"lad\",bibliographic:\"\",name:\"Ladino\"},{alpha2:\"\",alpha3:\"lah\",bibliographic:\"\",name:\"Lahnda\"},{alpha2:\"\",alpha3:\"lam\",bibliographic:\"\",name:\"Lamba\"},{alpha2:\"lo\",alpha3:\"lao\",bibliographic:\"\",name:\"Lao\"},{alpha2:\"la\",alpha3:\"lat\",bibliographic:\"\",name:\"Latin\"},{alpha2:\"lv\",alpha3:\"lav\",bibliographic:\"\",name:\"Latvian\"},{alpha2:\"\",alpha3:\"lez\",bibliographic:\"\",name:\"Lezghian\"},{alpha2:\"li\",alpha3:\"lim\",bibliographic:\"\",name:\"Limburgan\"},{alpha2:\"li\",alpha3:\"lim\",bibliographic:\"\",name:\"Limburger\"},{alpha2:\"li\",alpha3:\"lim\",bibliographic:\"\",name:\"Limburgish\"},{alpha2:\"ln\",alpha3:\"lin\",bibliographic:\"\",name:\"Lingala\"},{alpha2:\"lt\",alpha3:\"lit\",bibliographic:\"\",name:\"Lithuanian\"},{alpha2:\"\",alpha3:\"lol\",bibliographic:\"\",name:\"Mongo\"},{alpha2:\"\",alpha3:\"loz\",bibliographic:\"\",name:\"Lozi\"},{alpha2:\"lb\",alpha3:\"ltz\",bibliographic:\"\",name:\"Letzeburgesch\"},{alpha2:\"lb\",alpha3:\"ltz\",bibliographic:\"\",name:\"Luxembourgish\"},{alpha2:\"\",alpha3:\"lua\",bibliographic:\"\",name:\"Luba-Lulua\"},{alpha2:\"lu\",alpha3:\"lub\",bibliographic:\"\",name:\"Luba-Katanga\"},{alpha2:\"lg\",alpha3:\"lug\",bibliographic:\"\",name:\"Ganda\"},{alpha2:\"\",alpha3:\"lui\",bibliographic:\"\",name:\"Luiseno\"},{alpha2:\"\",alpha3:\"lun\",bibliographic:\"\",name:\"Lunda\"},{alpha2:\"\",alpha3:\"luo\",bibliographic:\"\",name:\"Luo (Kenya and Tanzania)\"},{alpha2:\"\",alpha3:\"lus\",bibliographic:\"\",name:\"Lushai\"},{alpha2:\"\",alpha3:\"mad\",bibliographic:\"\",name:\"Madurese\"},{alpha2:\"\",alpha3:\"mag\",bibliographic:\"\",name:\"Magahi\"},{alpha2:\"mh\",alpha3:\"mah\",bibliographic:\"\",name:\"Marshallese\"},{alpha2:\"\",alpha3:\"mai\",bibliographic:\"\",name:\"Maithili\"},{alpha2:\"\",alpha3:\"mak\",bibliographic:\"\",name:\"Makasar\"},{alpha2:\"ml\",alpha3:\"mal\",bibliographic:\"\",name:\"Malayalam\"},{alpha2:\"\",alpha3:\"man\",bibliographic:\"\",name:\"Mandingo\"},{alpha2:\"\",alpha3:\"map\",bibliographic:\"\",name:\"Austronesian languages\"},{alpha2:\"mr\",alpha3:\"mar\",bibliographic:\"\",name:\"Marathi\"},{alpha2:\"\",alpha3:\"mas\",bibliographic:\"\",name:\"Masai\"},{alpha2:\"\",alpha3:\"mdf\",bibliographic:\"\",name:\"Moksha\"},{alpha2:\"\",alpha3:\"mdr\",bibliographic:\"\",name:\"Mandar\"},{alpha2:\"\",alpha3:\"men\",bibliographic:\"\",name:\"Mende\"},{alpha2:\"\",alpha3:\"mga\",bibliographic:\"\",name:\"Irish, Middle (900-1200)\"},{alpha2:\"\",alpha3:\"mic\",bibliographic:\"\",name:\"Mi'kmaq\"},{alpha2:\"\",alpha3:\"mic\",bibliographic:\"\",name:\"Micmac\"},{alpha2:\"\",alpha3:\"min\",bibliographic:\"\",name:\"Minangkabau\"},{alpha2:\"\",alpha3:\"mis\",bibliographic:\"\",name:\"Uncoded languages\"},{alpha2:\"mk\",alpha3:\"mkd\",bibliographic:\"mac\",name:\"Macedonian\"},{alpha2:\"\",alpha3:\"mkh\",bibliographic:\"\",name:\"Mon-Khmer languages\"},{alpha2:\"mg\",alpha3:\"mlg\",bibliographic:\"\",name:\"Malagasy\"},{alpha2:\"mt\",alpha3:\"mlt\",bibliographic:\"\",name:\"Maltese\"},{alpha2:\"\",alpha3:\"mnc\",bibliographic:\"\",name:\"Manchu\"},{alpha2:\"\",alpha3:\"mni\",bibliographic:\"\",name:\"Manipuri\"},{alpha2:\"\",alpha3:\"mno\",bibliographic:\"\",name:\"Manobo languages\"},{alpha2:\"\",alpha3:\"moh\",bibliographic:\"\",name:\"Mohawk\"},{alpha2:\"mn\",alpha3:\"mon\",bibliographic:\"\",name:\"Mongolian\"},{alpha2:\"\",alpha3:\"mos\",bibliographic:\"\",name:\"Mossi\"},{alpha2:\"\",alpha3:\"mot\",bibliographic:\"\",name:\"Montenegrin\"},{alpha2:\"mi\",alpha3:\"mri\",bibliographic:\"mao\",name:\"Maori\"},{alpha2:\"ms\",alpha3:\"msa\",bibliographic:\"may\",name:\"Malay\"},{alpha2:\"\",alpha3:\"mul\",bibliographic:\"\",name:\"Multiple languages\"},{alpha2:\"\",alpha3:\"mun\",bibliographic:\"\",name:\"Munda languages\"},{alpha2:\"\",alpha3:\"mus\",bibliographic:\"\",name:\"Creek\"},{alpha2:\"\",alpha3:\"mwl\",bibliographic:\"\",name:\"Mirandese\"},{alpha2:\"\",alpha3:\"mwr\",bibliographic:\"\",name:\"Marwari\"},{alpha2:\"my\",alpha3:\"mya\",bibliographic:\"bur\",name:\"Burmese\"},{alpha2:\"\",alpha3:\"myn\",bibliographic:\"\",name:\"Mayan languages\"},{alpha2:\"\",alpha3:\"myv\",bibliographic:\"\",name:\"Erzya\"},{alpha2:\"\",alpha3:\"nah\",bibliographic:\"\",name:\"Nahuatl languages\"},{alpha2:\"\",alpha3:\"nai\",bibliographic:\"\",name:\"North American Indian languages\"},{alpha2:\"\",alpha3:\"nap\",bibliographic:\"\",name:\"Neapolitan\"},{alpha2:\"na\",alpha3:\"nau\",bibliographic:\"\",name:\"Nauru\"},{alpha2:\"nv\",alpha3:\"nav\",bibliographic:\"\",name:\"Navaho\"},{alpha2:\"nv\",alpha3:\"nav\",bibliographic:\"\",name:\"Navajo\"},{alpha2:\"nr\",alpha3:\"nbl\",bibliographic:\"\",name:\"Ndebele, South\"},{alpha2:\"nr\",alpha3:\"nbl\",bibliographic:\"\",name:\"South Ndebele\"},{alpha2:\"nd\",alpha3:\"nde\",bibliographic:\"\",name:\"Ndebele, North\"},{alpha2:\"nd\",alpha3:\"nde\",bibliographic:\"\",name:\"North Ndebele\"},{alpha2:\"ng\",alpha3:\"ndo\",bibliographic:\"\",name:\"Ndonga\"},{alpha2:\"\",alpha3:\"nds\",bibliographic:\"\",name:\"German, Low\"},{alpha2:\"\",alpha3:\"nds\",bibliographic:\"\",name:\"Low German\"},{alpha2:\"\",alpha3:\"nds\",bibliographic:\"\",name:\"Low Saxon\"},{alpha2:\"\",alpha3:\"nds\",bibliographic:\"\",name:\"Saxon, Low\"},{alpha2:\"ne\",alpha3:\"nep\",bibliographic:\"\",name:\"Nepali\"},{alpha2:\"\",alpha3:\"new\",bibliographic:\"\",name:\"Nepal Bhasa\"},{alpha2:\"\",alpha3:\"new\",bibliographic:\"\",name:\"Newari\"},{alpha2:\"\",alpha3:\"nia\",bibliographic:\"\",name:\"Nias\"},{alpha2:\"\",alpha3:\"nic\",bibliographic:\"\",name:\"Niger-Kordofanian languages\"},{alpha2:\"\",alpha3:\"niu\",bibliographic:\"\",name:\"Niuean\"},{alpha2:\"nl\",alpha3:\"nld\",bibliographic:\"dut\",name:\"Dutch\"},{alpha2:\"nl\",alpha3:\"nld\",bibliographic:\"dut\",name:\"Flemish\"},{alpha2:\"nn\",alpha3:\"nno\",bibliographic:\"\",name:\"Norwegian Nynorsk\"},{alpha2:\"nn\",alpha3:\"nno\",bibliographic:\"\",name:\"Nynorsk, Norwegian\"},{alpha2:\"nb\",alpha3:\"nob\",bibliographic:\"\",name:\"Bokmål, Norwegian\"},{alpha2:\"nb\",alpha3:\"nob\",bibliographic:\"\",name:\"Norwegian Bokmål\"},{alpha2:\"\",alpha3:\"nog\",bibliographic:\"\",name:\"Nogai\"},{alpha2:\"\",alpha3:\"non\",bibliographic:\"\",name:\"Norse, Old\"},{alpha2:\"no\",alpha3:\"nor\",bibliographic:\"\",name:\"Norwegian\"},{alpha2:\"\",alpha3:\"nqo\",bibliographic:\"\",name:\"N'Ko\"},{alpha2:\"\",alpha3:\"nso\",bibliographic:\"\",name:\"Northern Sotho\"},{alpha2:\"\",alpha3:\"nso\",bibliographic:\"\",name:\"Pedi\"},{alpha2:\"\",alpha3:\"nso\",bibliographic:\"\",name:\"Sepedi\"},{alpha2:\"\",alpha3:\"nso\",bibliographic:\"\",name:\"Sotho, Northern\"},{alpha2:\"\",alpha3:\"nub\",bibliographic:\"\",name:\"Nubian languages\"},{alpha2:\"\",alpha3:\"nwc\",bibliographic:\"\",name:\"Classical Nepal Bhasa\"},{alpha2:\"\",alpha3:\"nwc\",bibliographic:\"\",name:\"Classical Newari\"},{alpha2:\"\",alpha3:\"nwc\",bibliographic:\"\",name:\"Old Newari\"},{alpha2:\"ny\",alpha3:\"nya\",bibliographic:\"\",name:\"Chewa\"},{alpha2:\"ny\",alpha3:\"nya\",bibliographic:\"\",name:\"Chichewa\"},{alpha2:\"ny\",alpha3:\"nya\",bibliographic:\"\",name:\"Nyanja\"},{alpha2:\"\",alpha3:\"nym\",bibliographic:\"\",name:\"Nyamwezi\"},{alpha2:\"\",alpha3:\"nyn\",bibliographic:\"\",name:\"Nyankole\"},{alpha2:\"\",alpha3:\"nyo\",bibliographic:\"\",name:\"Nyoro\"},{alpha2:\"\",alpha3:\"nzi\",bibliographic:\"\",name:\"Nzima\"},{alpha2:\"oc\",alpha3:\"oci\",bibliographic:\"\",name:\"Occitan (post 1500)\"},{alpha2:\"oj\",alpha3:\"oji\",bibliographic:\"\",name:\"Ojibwa\"},{alpha2:\"or\",alpha3:\"ori\",bibliographic:\"\",name:\"Oriya\"},{alpha2:\"om\",alpha3:\"orm\",bibliographic:\"\",name:\"Oromo\"},{alpha2:\"\",alpha3:\"osa\",bibliographic:\"\",name:\"Osage\"},{alpha2:\"os\",alpha3:\"oss\",bibliographic:\"\",name:\"Ossetian\"},{alpha2:\"os\",alpha3:\"oss\",bibliographic:\"\",name:\"Ossetic\"},{alpha2:\"\",alpha3:\"ota\",bibliographic:\"\",name:\"Turkish, Ottoman (1500-1928)\"},{alpha2:\"\",alpha3:\"oto\",bibliographic:\"\",name:\"Otomian languages\"},{alpha2:\"\",alpha3:\"paa\",bibliographic:\"\",name:\"Papuan languages\"},{alpha2:\"\",alpha3:\"pag\",bibliographic:\"\",name:\"Pangasinan\"},{alpha2:\"\",alpha3:\"pal\",bibliographic:\"\",name:\"Pahlavi\"},{alpha2:\"\",alpha3:\"pam\",bibliographic:\"\",name:\"Kapampangan\"},{alpha2:\"\",alpha3:\"pam\",bibliographic:\"\",name:\"Pampanga\"},{alpha2:\"pa\",alpha3:\"pan\",bibliographic:\"\",name:\"Panjabi\"},{alpha2:\"pa\",alpha3:\"pan\",bibliographic:\"\",name:\"Punjabi\"},{alpha2:\"\",alpha3:\"pap\",bibliographic:\"\",name:\"Papiamento\"},{alpha2:\"\",alpha3:\"pau\",bibliographic:\"\",name:\"Palauan\"},{alpha2:\"\",alpha3:\"peo\",bibliographic:\"\",name:\"Persian, Old (ca.600-400 B.C.)\"},{alpha2:\"\",alpha3:\"phi\",bibliographic:\"\",name:\"Philippine languages\"},{alpha2:\"\",alpha3:\"phn\",bibliographic:\"\",name:\"Phoenician\"},{alpha2:\"pi\",alpha3:\"pli\",bibliographic:\"\",name:\"Pali\"},{alpha2:\"pl\",alpha3:\"pol\",bibliographic:\"\",name:\"Polish\"},{alpha2:\"\",alpha3:\"pon\",bibliographic:\"\",name:\"Pohnpeian\"},{alpha2:\"pt\",alpha3:\"por\",bibliographic:\"\",name:\"Portuguese\"},{alpha2:\"\",alpha3:\"pra\",bibliographic:\"\",name:\"Prakrit languages\"},{alpha2:\"\",alpha3:\"pro\",bibliographic:\"\",name:\"Occitan, Old (to 1500)\"},{alpha2:\"\",alpha3:\"pro\",bibliographic:\"\",name:\"Provençal, Old (to 1500)\"},{alpha2:\"ps\",alpha3:\"pus\",bibliographic:\"\",name:\"Pashto\"},{alpha2:\"ps\",alpha3:\"pus\",bibliographic:\"\",name:\"Pushto\"},{alpha2:\"qu\",alpha3:\"que\",bibliographic:\"\",name:\"Quechua\"},{alpha2:\"\",alpha3:\"raj\",bibliographic:\"\",name:\"Rajasthani\"},{alpha2:\"\",alpha3:\"rap\",bibliographic:\"\",name:\"Rapanui\"},{alpha2:\"\",alpha3:\"rar\",bibliographic:\"\",name:\"Cook Islands Maori\"},{alpha2:\"\",alpha3:\"rar\",bibliographic:\"\",name:\"Rarotongan\"},{alpha2:\"\",alpha3:\"roa\",bibliographic:\"\",name:\"Romance languages\"},{alpha2:\"rm\",alpha3:\"roh\",bibliographic:\"\",name:\"Romansh\"},{alpha2:\"\",alpha3:\"rom\",bibliographic:\"\",name:\"Romany\"},{alpha2:\"ro\",alpha3:\"ron\",bibliographic:\"rum\",name:\"Moldavian\"},{alpha2:\"ro\",alpha3:\"ron\",bibliographic:\"rum\",name:\"Romanian\"},{alpha2:\"rn\",alpha3:\"run\",bibliographic:\"\",name:\"Rundi\"},{alpha2:\"\",alpha3:\"rup\",bibliographic:\"\",name:\"Aromanian\"},{alpha2:\"\",alpha3:\"rup\",bibliographic:\"\",name:\"Arumanian\"},{alpha2:\"\",alpha3:\"rup\",bibliographic:\"\",name:\"Macedo-Romanian\"},{alpha2:\"ru\",alpha3:\"rus\",bibliographic:\"\",name:\"Russian\"},{alpha2:\"\",alpha3:\"sad\",bibliographic:\"\",name:\"Sandawe\"},{alpha2:\"sg\",alpha3:\"sag\",bibliographic:\"\",name:\"Sango\"},{alpha2:\"\",alpha3:\"sah\",bibliographic:\"\",name:\"Yakut\"},{alpha2:\"\",alpha3:\"sai\",bibliographic:\"\",name:\"South American Indian languages\"},{alpha2:\"\",alpha3:\"sal\",bibliographic:\"\",name:\"Salishan languages\"},{alpha2:\"\",alpha3:\"sam\",bibliographic:\"\",name:\"Samaritan Aramaic\"},{alpha2:\"sa\",alpha3:\"san\",bibliographic:\"\",name:\"Sanskrit\"},{alpha2:\"\",alpha3:\"sas\",bibliographic:\"\",name:\"Sasak\"},{alpha2:\"\",alpha3:\"sat\",bibliographic:\"\",name:\"Santali\"},{alpha2:\"\",alpha3:\"scn\",bibliographic:\"\",name:\"Sicilian\"},{alpha2:\"\",alpha3:\"sco\",bibliographic:\"\",name:\"Scots\"},{alpha2:\"\",alpha3:\"sel\",bibliographic:\"\",name:\"Selkup\"},{alpha2:\"\",alpha3:\"sem\",bibliographic:\"\",name:\"Semitic languages\"},{alpha2:\"\",alpha3:\"sga\",bibliographic:\"\",name:\"Irish, Old (to 900)\"},{alpha2:\"\",alpha3:\"sgn\",bibliographic:\"\",name:\"Sign Languages\"},{alpha2:\"\",alpha3:\"shn\",bibliographic:\"\",name:\"Shan\"},{alpha2:\"\",alpha3:\"sid\",bibliographic:\"\",name:\"Sidamo\"},{alpha2:\"si\",alpha3:\"sin\",bibliographic:\"\",name:\"Sinhala\"},{alpha2:\"si\",alpha3:\"sin\",bibliographic:\"\",name:\"Sinhalese\"},{alpha2:\"\",alpha3:\"sio\",bibliographic:\"\",name:\"Siouan languages\"},{alpha2:\"\",alpha3:\"sit\",bibliographic:\"\",name:\"Sino-Tibetan languages\"},{alpha2:\"\",alpha3:\"sla\",bibliographic:\"\",name:\"Slavic languages\"},{alpha2:\"sk\",alpha3:\"slk\",bibliographic:\"slo\",name:\"Slovak\"},{alpha2:\"sl\",alpha3:\"slv\",bibliographic:\"\",name:\"Slovenian\"},{alpha2:\"\",alpha3:\"sma\",bibliographic:\"\",name:\"Southern Sami\"},{alpha2:\"se\",alpha3:\"sme\",bibliographic:\"\",name:\"Northern Sami\"},{alpha2:\"\",alpha3:\"smi\",bibliographic:\"\",name:\"Sami languages\"},{alpha2:\"\",alpha3:\"smj\",bibliographic:\"\",name:\"Lule Sami\"},{alpha2:\"\",alpha3:\"smn\",bibliographic:\"\",name:\"Inari Sami\"},{alpha2:\"sm\",alpha3:\"smo\",bibliographic:\"\",name:\"Samoan\"},{alpha2:\"\",alpha3:\"sms\",bibliographic:\"\",name:\"Skolt Sami\"},{alpha2:\"sn\",alpha3:\"sna\",bibliographic:\"\",name:\"Shona\"},{alpha2:\"sd\",alpha3:\"snd\",bibliographic:\"\",name:\"Sindhi\"},{alpha2:\"\",alpha3:\"snk\",bibliographic:\"\",name:\"Soninke\"},{alpha2:\"\",alpha3:\"sog\",bibliographic:\"\",name:\"Sogdian\"},{alpha2:\"so\",alpha3:\"som\",bibliographic:\"\",name:\"Somali\"},{alpha2:\"\",alpha3:\"son\",bibliographic:\"\",name:\"Songhai languages\"},{alpha2:\"st\",alpha3:\"sot\",bibliographic:\"\",name:\"Sotho, Southern\"},{alpha2:\"es\",alpha3:\"spa\",bibliographic:\"\",name:\"Castilian\"},{alpha2:\"es\",alpha3:\"spa\",bibliographic:\"\",name:\"Spanish\"},{alpha2:\"sq\",alpha3:\"sqi\",bibliographic:\"alb\",name:\"Albanian\"},{alpha2:\"sc\",alpha3:\"srd\",bibliographic:\"\",name:\"Sardinian\"},{alpha2:\"\",alpha3:\"srn\",bibliographic:\"\",name:\"Sranan Tongo\"},{alpha2:\"sr\",alpha3:\"srp\",bibliographic:\"\",name:\"Serbian\"},{alpha2:\"\",alpha3:\"srr\",bibliographic:\"\",name:\"Serer\"},{alpha2:\"\",alpha3:\"ssa\",bibliographic:\"\",name:\"Nilo-Saharan languages\"},{alpha2:\"ss\",alpha3:\"ssw\",bibliographic:\"\",name:\"Swati\"},{alpha2:\"\",alpha3:\"suk\",bibliographic:\"\",name:\"Sukuma\"},{alpha2:\"su\",alpha3:\"sun\",bibliographic:\"\",name:\"Sundanese\"},{alpha2:\"\",alpha3:\"sus\",bibliographic:\"\",name:\"Susu\"},{alpha2:\"\",alpha3:\"sux\",bibliographic:\"\",name:\"Sumerian\"},{alpha2:\"sw\",alpha3:\"swa\",bibliographic:\"\",name:\"Swahili\"},{alpha2:\"sv\",alpha3:\"swe\",bibliographic:\"\",name:\"Swedish\"},{alpha2:\"\",alpha3:\"syc\",bibliographic:\"\",name:\"Classical Syriac\"},{alpha2:\"\",alpha3:\"syr\",bibliographic:\"\",name:\"Syriac\"},{alpha2:\"ty\",alpha3:\"tah\",bibliographic:\"\",name:\"Tahitian\"},{alpha2:\"\",alpha3:\"tai\",bibliographic:\"\",name:\"Tai languages\"},{alpha2:\"ta\",alpha3:\"tam\",bibliographic:\"\",name:\"Tamil\"},{alpha2:\"tt\",alpha3:\"tat\",bibliographic:\"\",name:\"Tatar\"},{alpha2:\"te\",alpha3:\"tel\",bibliographic:\"\",name:\"Telugu\"},{alpha2:\"\",alpha3:\"tem\",bibliographic:\"\",name:\"Timne\"},{alpha2:\"\",alpha3:\"ter\",bibliographic:\"\",name:\"Tereno\"},{alpha2:\"\",alpha3:\"tet\",bibliographic:\"\",name:\"Tetum\"},{alpha2:\"tg\",alpha3:\"tgk\",bibliographic:\"\",name:\"Tajik\"},{alpha2:\"tl\",alpha3:\"tgl\",bibliographic:\"\",name:\"Tagalog\"},{alpha2:\"th\",alpha3:\"tha\",bibliographic:\"\",name:\"Thai\"},{alpha2:\"\",alpha3:\"tig\",bibliographic:\"\",name:\"Tigre\"},{alpha2:\"ti\",alpha3:\"tir\",bibliographic:\"\",name:\"Tigrinya\"},{alpha2:\"\",alpha3:\"tiv\",bibliographic:\"\",name:\"Tiv\"},{alpha2:\"\",alpha3:\"tkl\",bibliographic:\"\",name:\"Tokelau\"},{alpha2:\"\",alpha3:\"tlh\",bibliographic:\"\",name:\"Klingon\"},{alpha2:\"\",alpha3:\"tlh\",bibliographic:\"\",name:\"tlhIngan-Hol\"},{alpha2:\"\",alpha3:\"tli\",bibliographic:\"\",name:\"Tlingit\"},{alpha2:\"\",alpha3:\"tmh\",bibliographic:\"\",name:\"Tamashek\"},{alpha2:\"\",alpha3:\"tog\",bibliographic:\"\",name:\"Tonga (Nyasa)\"},{alpha2:\"to\",alpha3:\"ton\",bibliographic:\"\",name:\"Tonga (Tonga Islands)\"},{alpha2:\"\",alpha3:\"tpi\",bibliographic:\"\",name:\"Tok Pisin\"},{alpha2:\"\",alpha3:\"tsi\",bibliographic:\"\",name:\"Tsimshian\"},{alpha2:\"tn\",alpha3:\"tsn\",bibliographic:\"\",name:\"Tswana\"},{alpha2:\"ts\",alpha3:\"tso\",bibliographic:\"\",name:\"Tsonga\"},{alpha2:\"tk\",alpha3:\"tuk\",bibliographic:\"\",name:\"Turkmen\"},{alpha2:\"\",alpha3:\"tum\",bibliographic:\"\",name:\"Tumbuka\"},{alpha2:\"\",alpha3:\"tup\",bibliographic:\"\",name:\"Tupi languages\"},{alpha2:\"tr\",alpha3:\"tur\",bibliographic:\"\",name:\"Turkish\"},{alpha2:\"\",alpha3:\"tut\",bibliographic:\"\",name:\"Altaic languages\"},{alpha2:\"\",alpha3:\"tvl\",bibliographic:\"\",name:\"Tuvalu\"},{alpha2:\"tw\",alpha3:\"twi\",bibliographic:\"\",name:\"Twi\"},{alpha2:\"\",alpha3:\"tyv\",bibliographic:\"\",name:\"Tuvinian\"},{alpha2:\"\",alpha3:\"udm\",bibliographic:\"\",name:\"Udmurt\"},{alpha2:\"\",alpha3:\"uga\",bibliographic:\"\",name:\"Ugaritic\"},{alpha2:\"ug\",alpha3:\"uig\",bibliographic:\"\",name:\"Uighur\"},{alpha2:\"ug\",alpha3:\"uig\",bibliographic:\"\",name:\"Uyghur\"},{alpha2:\"uk\",alpha3:\"ukr\",bibliographic:\"\",name:\"Ukrainian\"},{alpha2:\"\",alpha3:\"umb\",bibliographic:\"\",name:\"Umbundu\"},{alpha2:\"\",alpha3:\"und\",bibliographic:\"\",name:\"Undetermined\"},{alpha2:\"ur\",alpha3:\"urd\",bibliographic:\"\",name:\"Urdu\"},{alpha2:\"uz\",alpha3:\"uzb\",bibliographic:\"\",name:\"Uzbek\"},{alpha2:\"\",alpha3:\"vai\",bibliographic:\"\",name:\"Vai\"},{alpha2:\"ve\",alpha3:\"ven\",bibliographic:\"\",name:\"Venda\"},{alpha2:\"vi\",alpha3:\"vie\",bibliographic:\"\",name:\"Vietnamese\"},{alpha2:\"vo\",alpha3:\"vol\",bibliographic:\"\",name:\"Volapük\"},{alpha2:\"\",alpha3:\"vot\",bibliographic:\"\",name:\"Votic\"},{alpha2:\"\",alpha3:\"wak\",bibliographic:\"\",name:\"Wakashan languages\"},{alpha2:\"\",alpha3:\"wal\",bibliographic:\"\",name:\"Wolaitta\"},{alpha2:\"\",alpha3:\"wal\",bibliographic:\"\",name:\"Wolaytta\"},{alpha2:\"\",alpha3:\"war\",bibliographic:\"\",name:\"Waray\"},{alpha2:\"\",alpha3:\"was\",bibliographic:\"\",name:\"Washo\"},{alpha2:\"\",alpha3:\"wen\",bibliographic:\"\",name:\"Sorbian languages\"},{alpha2:\"wa\",alpha3:\"wln\",bibliographic:\"\",name:\"Walloon\"},{alpha2:\"wo\",alpha3:\"wol\",bibliographic:\"\",name:\"Wolof\"},{alpha2:\"\",alpha3:\"xal\",bibliographic:\"\",name:\"Kalmyk\"},{alpha2:\"\",alpha3:\"xal\",bibliographic:\"\",name:\"Oirat\"},{alpha2:\"xh\",alpha3:\"xho\",bibliographic:\"\",name:\"Xhosa\"},{alpha2:\"\",alpha3:\"yao\",bibliographic:\"\",name:\"Yao\"},{alpha2:\"\",alpha3:\"yap\",bibliographic:\"\",name:\"Yapese\"},{alpha2:\"yi\",alpha3:\"yid\",bibliographic:\"\",name:\"Yiddish\"},{alpha2:\"yo\",alpha3:\"yor\",bibliographic:\"\",name:\"Yoruba\"},{alpha2:\"\",alpha3:\"ypk\",bibliographic:\"\",name:\"Yupik languages\"},{alpha2:\"\",alpha3:\"zap\",bibliographic:\"\",name:\"Zapotec\"},{alpha2:\"\",alpha3:\"zbl\",bibliographic:\"\",name:\"Bliss\"},{alpha2:\"\",alpha3:\"zbl\",bibliographic:\"\",name:\"Blissymbolics\"},{alpha2:\"\",alpha3:\"zbl\",bibliographic:\"\",name:\"Blissymbols\"},{alpha2:\"\",alpha3:\"zen\",bibliographic:\"\",name:\"Zenaga\"},{alpha2:\"\",alpha3:\"zgh\",bibliographic:\"\",name:\"Standard Moroccan Tamazight\"},{alpha2:\"za\",alpha3:\"zha\",bibliographic:\"\",name:\"Chuang\"},{alpha2:\"za\",alpha3:\"zha\",bibliographic:\"\",name:\"Zhuang\"},{alpha2:\"zh\",alpha3:\"zho\",bibliographic:\"chi\",name:\"Chinese\"},{alpha2:\"\",alpha3:\"znd\",bibliographic:\"\",name:\"Zande languages\"},{alpha2:\"zu\",alpha3:\"zul\",bibliographic:\"\",name:\"Zulu\"},{alpha2:\"\",alpha3:\"zun\",bibliographic:\"\",name:\"Zuni\"},{alpha2:\"\",alpha3:\"zxx\",bibliographic:\"\",name:\"No linguistic content\"},{alpha2:\"\",alpha3:\"zxx\",bibliographic:\"\",name:\"Not applicable\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Dimili\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Dimli\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Kirdki\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Kirmanjki\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Zaza\"},{alpha2:\"\",alpha3:\"zza\",bibliographic:\"\",name:\"Zazaki\"}];","var _ = require('underscore');\n\nmodule.exports = init;\n\nfunction init(o) {\n  return {\n    countries: search.bind(null, o.countries),\n    currencies: search.bind(null, o.currencies),\n    languages: search.bind(null, o.languages)\n  };\n}\n\nfunction search(data, query) {\n  var q = _.pairs(query);\n\n  return data.filter(function(d) {\n    return q.filter(function(v) {\n      var prop = d[v[0]];\n\n      if(_.isArray(prop)) return prop.indexOf(v[1]) >= 0;\n\n      return prop == v[1];\n    }).length == q.length;\n  });\n}","module.exports =\n{ \"ALL\": \"L\"\n, \"AFN\": \"؋\"\n, \"ARS\": \"$\"\n, \"AWG\": \"ƒ\"\n, \"AUD\": \"$\"\n, \"AZN\": \"₼\"\n, \"BSD\": \"$\"\n, \"BBD\": \"$\"\n, \"BYR\": \"p.\"\n, \"BZD\": \"BZ$\"\n, \"BMD\": \"$\"\n, \"BOB\": \"Bs.\"\n, \"BAM\": \"KM\"\n, \"BWP\": \"P\"\n, \"BGN\": \"лв\"\n, \"BRL\": \"R$\"\n, \"BND\": \"$\"\n, \"KHR\": \"៛\"\n, \"CAD\": \"$\"\n, \"KYD\": \"$\"\n, \"CLP\": \"$\"\n, \"CNY\": \"¥\"\n, \"COP\": \"$\"\n, \"CRC\": \"₡\"\n, \"HRK\": \"kn\"\n, \"CUP\": \"₱\"\n, \"CZK\": \"Kč\"\n, \"DKK\": \"kr\"\n, \"DOP\": \"RD$\"\n, \"XCD\": \"$\"\n, \"EGP\": \"£\"\n, \"SVC\": \"$\"\n, \"EEK\": \"kr\"\n, \"EUR\": \"€\"\n, \"FKP\": \"£\"\n, \"FJD\": \"$\"\n, \"GHC\": \"¢\"\n, \"GIP\": \"£\"\n, \"GTQ\": \"Q\"\n, \"GGP\": \"£\"\n, \"GYD\": \"$\"\n, \"HNL\": \"L\"\n, \"HKD\": \"$\"\n, \"HUF\": \"Ft\"\n, \"ISK\": \"kr\"\n, \"INR\": \"₹\"\n, \"IDR\": \"Rp\"\n, \"IRR\": \"﷼\"\n, \"IMP\": \"£\"\n, \"ILS\": \"₪\"\n, \"JMD\": \"J$\"\n, \"JPY\": \"¥\"\n, \"JEP\": \"£\"\n, \"KES\": \"KSh\"\n, \"KZT\": \"лв\"\n, \"KPW\": \"₩\"\n, \"KRW\": \"₩\"\n, \"KGS\": \"лв\"\n, \"LAK\": \"₭\"\n, \"LVL\": \"Ls\"\n, \"LBP\": \"£\"\n, \"LRD\": \"$\"\n, \"LTL\": \"Lt\"\n, \"MKD\": \"ден\"\n, \"MYR\": \"RM\"\n, \"MUR\": \"₨\"\n, \"MXN\": \"$\"\n, \"MNT\": \"₮\"\n, \"MZN\": \"MT\"\n, \"NAD\": \"$\"\n, \"NPR\": \"₨\"\n, \"ANG\": \"ƒ\"\n, \"NZD\": \"$\"\n, \"NIO\": \"C$\"\n, \"NGN\": \"₦\"\n, \"NOK\": \"kr\"\n, \"OMR\": \"﷼\"\n, \"PKR\": \"₨\"\n, \"PAB\": \"B/.\"\n, \"PYG\": \"Gs\"\n, \"PEN\": \"S/.\"\n, \"PHP\": \"₱\"\n, \"PLN\": \"zł\"\n, \"QAR\": \"﷼\"\n, \"RON\": \"lei\"\n, \"RUB\": \"₽\"\n, \"SHP\": \"£\"\n, \"SAR\": \"﷼\"\n, \"RSD\": \"Дин.\"\n, \"SCR\": \"₨\"\n, \"SGD\": \"$\"\n, \"SBD\": \"$\"\n, \"SOS\": \"S\"\n, \"ZAR\": \"R\"\n, \"LKR\": \"₨\"\n, \"SEK\": \"kr\"\n, \"CHF\": \"CHF\"\n, \"SRD\": \"$\"\n, \"SYP\": \"£\"\n, \"TZS\": \"TSh\"\n, \"TWD\": \"NT$\"\n, \"THB\": \"฿\"\n, \"TTD\": \"TT$\"\n, \"TRY\": \"\"\n, \"TRL\": \"₤\"\n, \"TVD\": \"$\"\n, \"UGX\": \"USh\"\n, \"UAH\": \"₴\"\n, \"GBP\": \"£\"\n, \"USD\": \"$\"\n, \"UYU\": \"$U\"\n, \"UZS\": \"лв\"\n, \"VEF\": \"Bs\"\n, \"VND\": \"₫\"\n, \"YER\": \"﷼\"\n, \"ZWD\": \"Z$\"\n}\n","module.exports = mapSymbol\n\nvar map = require('./map')\n\nfunction mapSymbol(currencyCode) {\n  if (map.hasOwnProperty(currencyCode)) {\n    return map[currencyCode]\n  } else {\n    return '?'\n  }\n}","'use strict';\n\nvar _ = require('underscore');\nvar continents = require('./data/continents');\nvar regions = require('./data/regions');\nvar countriesAll = require('./data/countries.json');\nvar currenciesAll = require('./data/currencies.json');\nvar languagesAll = require('./data/languages.json');\nvar lookup = require('./lookup');\n\nvar getSymbol = require('currency-symbol-map')\n\nexports.continents = continents;\nexports.regions = regions;\n\nexports.countries = {\n  all: countriesAll,\n};\n\n_.each(countriesAll, function (country) {\n  // prefer assigned country codes over inactive ones\n  var exportedAlpha2 = exports.countries[country.alpha2];\n  if (!exportedAlpha2 || exportedAlpha2.status === 'deleted') {\n    exports.countries[country.alpha2] = country;\n  }\n\n  var exportedAlpha3 = exports.countries[country.alpha3];\n  if (!exportedAlpha3 || exportedAlpha3.status === 'deleted') {\n    exports.countries[country.alpha3] = country;\n  }\n});\n\nexports.currencies = {\n  all: currenciesAll,\n};\n\n_.each(currenciesAll, function (currency) {\n  //If the symbol isn't available, default to the currency code\n  var symbol = getSymbol(currency.code);\n  if (symbol == '?') {\n    symbol = currency.code;\n  }\n\n  currency.symbol = symbol;\n  exports.currencies[currency.code] = currency;\n});\n\nexports.languages = {\n  all: languagesAll,\n};\n\n// Note that for the languages there are several entries with the same alpha3 -\n// eg Dutch and Flemish. Not sure how to best deal with that - here whichever\n// comes last wins.\n_.each(languagesAll, function (language) {\n  exports.languages[language.alpha2] = language;\n  exports.languages[language.bibliographic] = language;\n  exports.languages[language.alpha3] = language;\n});\n\nexports.lookup = lookup({\n    countries: countriesAll,\n    currencies: currenciesAll,\n    languages: languagesAll\n});\n\nvar callingCountries = {all: []};\n\nvar callingCodesAll = _.reduce(countriesAll, function (codes, country) {\n  if (country.countryCallingCodes && country.countryCallingCodes.length) {\n    callingCountries.all.push(country);\n\n    callingCountries[country.alpha2] = country;\n    callingCountries[country.alpha3] = country;\n\n    _.each(country.countryCallingCodes, function (code) {\n      if (codes.indexOf(code) == -1) {\n        codes.push(code);\n      }\n    });\n  }\n  return codes;\n}, []);\n\ndelete callingCountries['']; // remove empty alpha3s\nexports.callingCountries = callingCountries;\n\ncallingCodesAll.sort(function (a, b) {\n  var parse = function (str) { return parseInt(str) };\n  var splitA = _.map(a.split(' '), parse);\n  var splitB = _.map(b.split(' '), parse);\n\n  if (splitA[0] < splitB[0]) {\n    return -1;\n  } else if (splitA[0] > splitB[0]) {\n    return 1;\n  } else {\n    // Same - check split[1]\n    if (splitA[1] === undefined && splitB[1] !== undefined) {\n      return -1;\n    } else if (splitA[1] !== undefined && splitB[1] === undefined) {\n      return 1;\n    } else if (splitA[1] < splitB[1]) {\n      return -1;\n    } else if (splitA[1] > splitB[1]) {\n      return 1;\n    } else {\n      return 0;\n    }\n  }\n});\n\nexports.callingCodes = {\n  all: callingCodesAll\n};\n","import { lookup } from 'country-data';\n\nconst whoCountryNameToCountryDataLookupName = {\n  \"Bolivia\": \"Bolivia, Plurinational State Of\",\n  \"Bosnia and Herzegovina\": \"Bosnia & Herzegovina\",\n  \"Congo\": \"Republic Of Congo\",\n  \"Congo_Democratic People Republic of\": \"Democratic Republic Of Congo\",\n  \"Czechia\": \"Czech Republic\",\n  \"France (metropolitan)\": \"France, Metropolitan\",\n  \"The Gambia\": \"Gambia\",\n  \"Palestine\": \"Palestinian Territory, Occupied\",\n  //\"France_Guadeloupe\": \"France\",\n  //\"France_Martinique\": \"France\",\n  \"Iran (Islamic Republic of)\": \"Iran, Islamic Republic Of\",\n  \"Côte d Ivoire\": \"Côte d'Ivoire\",\n  \"Korea_Democratic People Republic of\": \"Korea, Democratic People's Republic Of\",\n  \"Korea_Republic of\": \"Korea, Republic Of\",\n  \"Lao People Democratic Republic\": \"Lao People's Democratic Republic\",\n  \"Moldova_Republic of\": \"Moldova\",\n  \"France_New Caledonia\": \"France\",\n  \"Guinea-Bissau\": \"Guinea-bissau\",\n  \"Timor-Leste\": \"Timor-Leste, Democratic Republic of\",\n  \"France_Reunion\": \"France\",\n  \"Trinidad and Tobago\": \"Trinidad And Tobago\",\n  \"Macedonia_Former Yugoslav Republic of\": \"Macedonia, The Former Yugoslav Republic Of\",\n  \"Tanzania_United Republic of\": \"Tanzania, United Republic Of\",\n  \"United States of America\": \"United States\",\n  \"Venezuela\": \"Venezuela, Bolivarian Republic Of\"\n};\n\nexport function lookupCountryCode (countryName) {\n  const countryInfo = lookup.countries({name: whoCountryNameToCountryDataLookupName[countryName] || countryName});\n  let countryCode = null;\n  if (countryInfo.length) {\n    countryCode = countryInfo[0].alpha3;\n  } else {\n    console.log(`WARNING: Could not look up country code for ${countryName}`);\n  }\n  return countryCode;\n}\n","import * as d3 from \"d3\";\nimport { feature } from \"topojson\";\n\nimport world from \"/data/world.json\";\n\nimport { lookupCountryCode } from \"/components/countryUtils\";\n\nconst centroidLookup = {};\n\nexport default function dorlingCartogram(container, props) {\n  const {\n    data,\n    radius,\n    labelFilter,\n    projection,\n    fill,\n    iterations = 20,\n    strength = 0.55,\n    stroke = () => \"none\"\n  } = props;\n\n  var path = d3.geoPath().projection(projection);\n\n  feature(world, world.objects.general).features.map(function(d) {\n    var obj = {\n      data: d.properties,\n      centroid: path.centroid(d)\n    };\n    centroidLookup[obj.data.ISO_3_CODE] = obj;\n    return obj;\n  });\n\n  const createNodes = data =>\n    data\n      // filters countries with geojson\n      .filter(d => {\n        const hasGeoJSON = centroidLookup.hasOwnProperty(\n          lookupCountryCode(d.country)\n        );\n        if (!hasGeoJSON) {\n          console.log(\n            `WARNING: Country '${d.country}' excluded for no GeoJSON`\n          );\n        }\n\n        return hasGeoJSON;\n      })\n      .map(d => {\n        const point = centroidLookup[lookupCountryCode(d.country)].centroid;\n        return {\n          ...d,\n          x: point[0],\n          y: point[1],\n          x0: point[0],\n          y0: point[1],\n          r: radius(d)\n        };\n      });\n\n  const key = d => d.country;\n\n  let node = container.selectAll(\"circle\");\n  let labels = container.selectAll(\"text\");\n\n  const forceSim = d3.forceSimulation().stop();\n  // Speeds up force simulation\n  //forceSim.alphaDecay(1 - Math.pow(0.001, 1 / 200))\n  // Cartogram\n  forceSim.force(\"collide\", d3.forceCollide(d => d.r).strength(strength));\n  // Nodes are attracted to their original position\n  //forceSim.force(\"gravity\", function(alpha) {\n  //const k = 0.01 * alpha;\n  //node.each(function(d) {\n  //d.x += (d.x0 - d.x) * k;\n  //d.y += (d.y0 - d.y) * k;\n  //});\n  //});\n  const TRANSITION_DUR = 200;\n  let numIterations = 0;\n  forceSim.on(\"tick\", function() {\n    node\n      .transition()\n      .duration(TRANSITION_DUR)\n      .attr(\"cx\", function(d) {\n        return d.x;\n      })\n      .attr(\"cy\", function(d) {\n        return d.y;\n      })\n      .attr(\"r\", d => d.r)\n      .style(\"fill\", fill)\n      .style(\"stroke\", stroke);\n\n    labels\n      .transition()\n      .duration(TRANSITION_DUR)\n      .attr(\"x\", function(d) {\n        return d.x;\n      })\n      .attr(\"y\", function(d) {\n        return d.y;\n      });\n    numIterations += 1;\n    if (numIterations > iterations) {\n      forceSim.stop();\n    }\n  });\n\n  const update = data => {\n    const nodes = createNodes(data);\n    node = container\n      .selectAll(\"circle\")\n      .data(nodes, key)\n      .join(\n        enter =>\n          enter\n            .append(\"circle\")\n            .attr(\"r\", d => d.r)\n            .attr(\"cx\", function(d) {\n              return d.x;\n            })\n            .attr(\"cy\", function(d) {\n              return d.y;\n            })\n            .style(\"stroke\", stroke)\n            .style(\"opacity\", 0.9)\n            .style(\"fill\", fill)\n            .on(\"mouseover\", function(d) {\n              console.log(d.country);\n            }),\n        update =>\n          update\n            .transition()\n            .duration(TRANSITION_DUR)\n            .attr(\"r\", d => d.r)\n            .style(\"fill\", fill)\n            .style(\"stroke\", stroke)\n      );\n\n    labels = container\n      .selectAll(\"text\")\n      .data(nodes.filter(labelFilter), key)\n      .join(enter =>\n        enter\n          .append(\"text\")\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"alignment-baseline\", \"middle\")\n          .style(\"font-weight\", \"bold\")\n          .style(\"fill\", \"#222\")\n          .text(function(d) {\n            return d.country;\n          })\n          .style(\"font-size\", \"24px\")\n          .style(\"font-family\", \"Helvetica\")\n          .attr(\"x\", function(d) {\n            return d.x;\n          })\n          .attr(\"y\", function(d) {\n            return d.y;\n          })\n      );\n    numIterations = 0;\n    forceSim\n      .nodes(nodes)\n      .alpha(1)\n      .restart();\n  };\n\n  update(data);\n\n  return {\n    update\n  };\n}\n","import * as d3 from \"d3\";\nimport { feature } from \"topojson\";\nimport world from \"/data/world.json\";\n\nimport { legendColor, legendHelpers, legendSize } from \"d3-svg-legend\";\n\nimport dtp1DataURL from \"/data/animated_map_dtp1.csv\";\nimport dtp3DataURL from \"/data/animated_map_dtp3.csv\";\n\nimport { punchColorScale } from \"/components/punchColorScale\";\nimport { makeProjection } from \"/components/projection\";\n\nimport CountryTotalsDataProvider from \"./CountryTotalsDataProvider\";\n\nimport dorlingCartogram from \"/components/dorlingCartogram\";\n\nimport \"/index.scss\";\nimport \"./index.scss\";\n\nvar countriesWithLabels = [\n  \"Afghanistan\",\n  \"Angola\",\n  \"Argentina\",\n  \"Australia\",\n  \"Bangladesh\",\n  \"Brazil\",\n  \"Canada\",\n  \"Chad\",\n  \"China\",\n  \"Colombia\",\n  \"Congo\",\n  \"Democratic Republic of the Congo\",\n  \"Ecuador\",\n  \"Egypt\",\n  \"Equatorial Guinea\",\n  \"Ethiopia\",\n  \"France\",\n  \"Germany\",\n  \"Guatemala\",\n  \"Guinea\",\n  \"Haiti\",\n  \"India\",\n  \"Indonesia\",\n  \"Iraq\",\n  \"Italy\",\n  \"Japan\",\n  \"Lao People’s Democratic Republic\",\n  \"Liberia\",\n  \"Madagascar\",\n  \"Malawi\",\n  \"Mali\",\n  \"Mauritania\",\n  \"Mexico\",\n  \"Myanmar\",\n  \"Niger\",\n  \"Nigeria\",\n  \"Pakistan\",\n  \"Papua New Guinea\",\n  \"Peru\",\n  \"Philippines\",\n  \"Russian Federation\",\n  \"Somalia\",\n  \"South Africa\",\n  \"South Sudan\",\n  \"Spain\",\n  \"Sudan\",\n  \"Syrian Arab Republic\",\n  \"Uganda\",\n  \"Ukraine\",\n  \"United States of America\",\n  \"Yemen\"\n];\n\nconst titleText = ({ year }) =>\n  //`${year} Coverage and Unvaccinated Population for ${vaccine}`;\n  `${year}`;\n\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n  Promise.all([d3.csv(dtp1DataURL), d3.csv(dtp3DataURL)]).then(function([\n    dtp1Data,\n    dtp3Data\n  ]) {\n    const countryTotalsDataProvider = new CountryTotalsDataProvider({\n      dtp1Data,\n      dtp3Data\n    });\n\n    const years = countryTotalsDataProvider.getYears();\n    const formatDataForYearAndVac = ({ year, vaccine }) =>\n      countryTotalsDataProvider\n        .getRows()\n        // filters on one vaccine\n        .filter(d => d.vaccine === vaccine)\n        // filters on one year\n        .map(d => ({\n          ...d,\n          unvaccinated: d[`${year}_unvaccinated`],\n          coverage: d[`${year}`] / 100\n        }));\n\n    const state = {\n      yearIndex: 0,\n      year: years[0],\n      vaccine: \"dtp1\"\n    };\n    let data = formatDataForYearAndVac(state);\n\n    const height = 1800,\n      width = 3096;\n\n    var title = d3.select(\"body\").append(\"h1\");\n\n    var radius = d3\n      .scaleSqrt()\n      .domain([1.5, 2500000])\n      .range([0, 80]);\n\n    const legendContainer = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"legendContainer\");\n\n    const color = punchColorScale;\n    const colorLegendContainer = legendContainer\n      .append(\"div\")\n      .attr(\"class\", \"legend color-legend\");\n    colorLegendContainer.append(\"h2\").text(`${state.vaccine.toUpperCase()} Coverage`);\n    const color_svg = colorLegendContainer.append(\"svg\").attr(\"height\", 250);\n\n    color_svg\n      .append(\"g\")\n      .attr(\"class\", \"legendQuant\")\n      .attr(\"transform\", \"translate(10,10)\");\n\n    const colorLegendSwatchSize = 40;\n\n    var color_legend = legendColor()\n      .labelFormat(d3.format(\".0%\"))\n      .labels(legendHelpers.thresholdLabels)\n      .scale(color)\n      .shapeWidth(colorLegendSwatchSize)\n      .shapeHeight(colorLegendSwatchSize)\n      .ascending(true);\n\n    color_svg.select(\".legendQuant\").call(color_legend);\n\n    const radiusLegendWidth = 500;\n    const radiusLegendHeight = 450;\n    const radiusLegendContainer = legendContainer\n      .append(\"div\")\n      .attr(\"class\", \"legend size-legend\");\n    radiusLegendContainer.append(\"h2\").text(\"Unvaccinated Population\");\n    const radius_svg = radiusLegendContainer\n      .append(\"svg\")\n      .attr(\"width\", radiusLegendWidth)\n      .attr(\"height\", radiusLegendHeight);\n\n    radius_svg\n      .append(\"g\")\n      .attr(\"class\", \"legendQuant\")\n      .attr(\"transform\", \"translate(25,45)\");\n\n    var formatSi = d3.format(\".2s\");\n\n    var radius_legend = legendSize()\n      .scale(radius)\n      .shape(\"circle\")\n      .cells([1000, 10000, 100000, 1000000, 3000000])\n      .shapePadding(40)\n      .labelOffset(24)\n      .labelFormat(formatSi)\n      .orient(\"horizontal\");\n\n    radius_svg\n      .select(\".legendQuant\")\n      .call(radius_legend)\n      .selectAll(\"circle\")\n      .style(\"opacity\", 0.9)\n      .style(\"fill\", \"#444\");\n\n    radius_svg\n      .selectAll(\"text\")\n      .style(\"font-size\", \"24px\")\n      .style(\"font-family\", \"Helvetica\");\n\n    const projection = makeProjection(width, height);\n    var path = d3.geoPath().projection(projection);\n\n    var svg = d3\n      .select(\"body\")\n      .append(\"svg\")\n      .attr(\"width\", width)\n      .attr(\"height\", height);\n\n    svg\n      .selectAll(\".country\")\n      .data(feature(world, world.objects.general).features)\n      .enter()\n      .append(\"path\")\n      .attr(\"class\", \"country\")\n      .attr(\"d\", path)\n      .style(\"fill\", \"#e6e6e6\");\n\n    const { update } = dorlingCartogram(svg, {\n      data,\n      projection,\n      radius: d => radius(d.unvaccinated),\n      fill: d => color(d.coverage) || \"#999\",\n      labelFilter: d => countriesWithLabels.indexOf(d.country) > -1\n    });\n\n    title.text(titleText(state));\n\n    const renderNextYear = () => {\n      state.yearIndex += 1;\n      state.year = years[state.yearIndex];\n      data = formatDataForYearAndVac(state);\n\n      title.text(titleText(state));\n      update(data);\n\n      if (state.yearIndex < years.length - 1) {\n        setTimeout(renderNextYear, 1500);\n      } else {\n        return;\n      }\n    };\n    setTimeout(renderNextYear, 4000);\n  });\n});\n"]}